{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>01.-KVM</p> <p>02.-DHCP</p>"},{"location":"01.-KVM/","title":"Index","text":"<p>Las m\u00e1quinas virtuales basadas en el kernel (KVM) son una tecnolog\u00eda de virtualizaci\u00f3n open source integrada a Linux\u00ae. Con ellas, se puede transformar Linux en un hipervisor que permite que una m\u00e1quina host ejecute varios entornos virtuales aislados llamados m\u00e1quinas virtuales (VM) o guests.</p> <p>Las KVM forman parte de Linux. Por eso, si se cuenta con una versi\u00f3n de Linux 2.6.20 o posterior, ya est\u00e1n a nuestra a su disposici\u00f3n. Se anunciaron por primera vez en 2006, y un a\u00f1o despu\u00e9s se incorporaron a la versi\u00f3n principal del kernel de Linux. Dado que forman parte del c\u00f3digo actual de Linux, reciben inmediatamente todas las mejoras, las correcciones y las funciones nuevas de este  sistema, sin requerir ning\u00fan tipo de ingenier\u00eda adicional.</p> <p></p> <p>https://www.pinguytaz.net/index.php/2021/08/06/usando-qemu-kvm-con-libvirt-1-6/</p>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/01.-%C2%BFQu%C3%A9%20es%20la%20virtualizaci%C3%B3n%3F/","title":"01.-\u00bfQu\u00e9 es la virtualizaci\u00f3n?","text":"<p>Seg\u00fan la Wikipedia: La virtualizaci\u00f3n utiliza el software para imitar las caracter\u00edsticas del hardware y crear un sistema inform\u00e1tico virtual.</p> <p>Esto nos permite ejecutar m\u00e1s de un sistema virtual, y m\u00faltiples sistemas operativos y aplicaciones, en un solo servidor, aumentando el rendimiento del hardware disponible e incrementando el tiempo de procesamiento de un equipo, ya que habitualmente se desaprovecha gran parte.</p>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/01.-%C2%BFQu%C3%A9%20es%20la%20virtualizaci%C3%B3n%3F/#para-que-se-utiliza-la-virtualizacion","title":"\u00bfPara qu\u00e9 se utiliza la virtualizaci\u00f3n?","text":"<ul> <li>Aislamiento e independencia de servicios y contenidos.</li> <li>Laboratorio de pruebas.</li> <li>Virtualizaci\u00f3n de arquitecturas de las que no se dispone.</li> <li>Creaci\u00f3n de cl\u00faster de m\u00e1quinas y sistemas distribuidos.</li> <li>Herramientas de aprendizajes</li> </ul>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/01.-%C2%BFQu%C3%A9%20es%20la%20virtualizaci%C3%B3n%3F/#ventajas-e-inconvenientes-de-la-virtualizacion","title":"Ventajas e inconvenientes de la virtualizaci\u00f3n","text":"<p>Las principales ventajas que podemos indicar ser\u00edan:</p> <ul> <li>Importante ahorro econ\u00f3mico.</li> <li>Seguridad.</li> <li>Mayor aprovechamiento de recursos.</li> <li>Migraci\u00f3n en vivo. </li> <li>Importante ahorro energ\u00e9tico.</li> </ul> <p>Como desventajas podr\u00edamos se\u00f1alar:</p> <ul> <li>Muchos sistemas dependen de un s\u00f3lo equipo f\u00edsico.</li> <li>Penalizaciones en rendimiento.</li> </ul>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/01.-%C2%BFQu%C3%A9%20es%20la%20virtualizaci%C3%B3n%3F/#conceptos-de-virtualizacion","title":"Conceptos de virtualizaci\u00f3n","text":"<ul> <li>Al sistema operativo que ejecuta el software de virtualizaci\u00f3n se le conoce como anfitri\u00f3n (host). El anfitri\u00f3n controla el hardware real.</li> <li>Al sistema operativo virtualizado se le conoce como invitado o hu\u00e9sped (guest).</li> <li>Al software de virtualizaci\u00f3n se le suele llamar Hipervisor.</li> <li>Desde 2005, Intel y AMD han a\u00f1adido soporte hardware para la virtualizaci\u00f3n: Intel Virtualization Technology (VT) y AMD Virtualization (AMD-V), y permiten a los hipervisores un rendimiento mayor en su labor de virtualizar.</li> </ul>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/02.-Tipos/","title":"02.-Tipos","text":"<p>En el punto anterior aprendimos que un Hipervisor es el software que nos permite realizar la virtualizaci\u00f3n. Seg\u00fan como funcione el Hipervisor podemos clasificar distintas t\u00e9cnicas de virtualizaci\u00f3n:</p>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/02.-Tipos/#emulacion","title":"Emulaci\u00f3n","text":"<p>El hipervisor imita o suplanta v\u00eda software una arquitectura al completo (procesador, memoria, conjunto de instrucciones, comunicaciones...). De esta forma puede hacer creer a los programas y sistemas operativos dise\u00f1ados para una arquitectura concreta que son ejecutados sobre ella. La emulaci\u00f3n suele ofrecer un rendimiento bastante bajo debido a que hay que realizar un proceso completo de traducci\u00f3n. Ejemplo: QEMU, Microsoft Virtual PC, Wine, ...</p> <p></p>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/02.-Tipos/#virtualizacion-completa-o-por-hardware","title":"Virtualizaci\u00f3n completa o por hardware","text":"<p>El hipervisor simula un hardware suficiente para permitir que un sistema operativo no adaptado se ejecute de forma aislada. En este caso podemos hacer una subdivisi\u00f3n seg\u00fan el tipo de hipervisor que estemos utilizando:</p> <ul> <li> <p>Virtualizaci\u00f3n por hardware: En este caso usamos hipervisores de tipo 1, que controlan directamente el hardware f\u00edsico del host ofreci\u00e9ndolo directamente a la m\u00e1quina virtual. Es imprescindible que la CPU del host tenga las extensiones de virtualizaci\u00f3n. Ejemplos: Xen, Kernel-based Virtual Machine (KVM), Microsoft Hyper-V, VMware ESXi,...</p> <p></p> </li> <li> <p>Virtualizaci\u00f3n completa: En este tipo se usan hipervisores de tipo 2. Este software se instala sobre el sistema operativo del host, pero no controla directamente el hardware f\u00edsico. Ofrecen menos rendimiento que la virtualizaci\u00f3n por hardware. Ejemplos: VMware Workstation, Parallels Desktop, VirtualBox, VMware Player, ...</p> <p></p> </li> </ul>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/02.-Tipos/#virtualizacion-parcial-o-paravirtualizacion","title":"Virtualizaci\u00f3n parcial o paravirtualizaci\u00f3n","text":"<p>El hipervisor ofrece un interfaz especial para acceder a los recursos. En ocasiones, es necesario la adaptaci\u00f3n del sistema operativo de la m\u00e1quina virtual. Ofrecen el m\u00e1ximo rendimiento, pero no se pueden usar sistemas operativos sin modificaciones o hardware especifico. Ejemplos: XEN, Microsoft Hyper-V, VMware ESXi, ...</p> <p></p>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/02.-Tipos/#virtualizacion-ligera","title":"Virtualizaci\u00f3n ligera","text":"<p>O tambi\u00e9n llamada virtualizaci\u00f3n a nivel de sistema operativo, o virtualizaci\u00f3n basada en contenedores. Es un m\u00e9todo de virtualizaci\u00f3n en el que, sobre el n\u00facleo del sistema operativo se ejecuta una capa de virtualizaci\u00f3n que permite que existan m\u00faltiples instancias aisladas de espacios de usuario. A cada espacio de usuario aislado lo llamamos contenedor. Por lo tanto, un contenedor es un conjunto de procesos aislados, que se ejecutan en un servidor, y que acceden a un sistema de ficheros propio, tienen una configuraci\u00f3n red propio y accede a los recursos del host (memoria y CPU). Podemos hacer la siguiente clasificaci\u00f3n de contenedores:</p> <ul> <li>Contenedores de Sistemas: El uso que se hace de ellos es muy similar al que hacemos sobre una m\u00e1quina virtual: se accede a ellos (normalmente por ssh), se instalan servicios, se actualizan, ejecutan un conjunto de procesos, ... Ejemplo: LXC(Linux Container).</li> <li>Contenedores de Aplicaci\u00f3n: Se suelen usar para el despliegue de aplicaciones web Ejemplo: Docker, Podman, ...</li> </ul> <p></p>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/03.-qemu-kvm/","title":"03.-qemu-kvm","text":"<p>De acuerdo con la wiki de QEMU, \"QEMU es un emulador gen\u00e9rico y de c\u00f3digo abierto de m\u00e1quinas virtuales.\". Se puede usar como emulador, permitiendo ejecutar sistemas operativos de una determinada arquitectura (por ejemplo ARM) sobre otra arquitectura (por ejemplo amd64). Pero tambi\u00e9n, puede ofrecer una soluci\u00f3n de virtualizaci\u00f3n completa, usando hipervidores como KVM para utilizar las extensiones del procesador para la virtualizaci\u00f3n y ofrecer un rendimiento mayor.</p> <p>KVM, la Maquina virtual basada en el kernel (Kernel-based Virtual Machine), es un hipervisor de tipo 1 integrado al kernel de Linux. Es una soluci\u00f3n de virtualizaci\u00f3n completa para Linux, que contienen las extensiones de virtualizaci\u00f3n Intel VT o AMD-V. Se compone de un m\u00f3dulo del kernel <code>kvm.ko</code>, que provee la infraestructura de virtualizaci\u00f3n base, y un m\u00f3dulo espec\u00edfico para el tipo de procesador, <code>kvm-intel.ko</code> o <code>kvm-amd.ko</code>.</p> <p>Por lo tanto, podemos usar QEMU junto a KVM para permitir la ejecuci\u00f3n de m\u00e1quinas virtuales utilizando im\u00e1genes de disco que contienen sistemas operativos sin modificar. Cada m\u00e1quina virtual tiene su propio hardware virtualizado: una tarjeta de red, discos duros, tarjeta gr\u00e1fica, ...</p>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/03.-qemu-kvm/#dispositivos-paravirtualizados","title":"Dispositivos paravirtualizados","text":"<p>Al crear las m\u00e1quinas virtuales, adem\u00e1s de las caracter\u00edsticas b\u00e1sicas como la cantidad de RAM asignada, el espacio de almacenamiento o la CPU, se deben seleccionar los diferentes dispositivos que van a formar parte de ella: interfaz de red, controladores de disco duro, interfaz gr\u00e1fica, etc. En un sistema de virtualizaci\u00f3n completa como QEMU/KVM todos los dispositivos est\u00e1n inicialmente emulados por software, de manera que la m\u00e1quina virtual interact\u00faa con un dispositivo como si lo hiciera con uno f\u00edsico equivalente. De esta manera podemos encontrar una interfaz de red emulando a la cl\u00e1sica tarjeta de red Realtek 8139 o una interfaz IDE para conectar con un disco duro virtual. Estos dispositivos emulados tienen la ventaja de que pueden utilizar los controladores de dispositivos de sus equivalentes f\u00edsicos, por lo que se suelen utilizar dispositivos emulados muy comunes, que proporcionan compatibilidad con la mayor\u00eda de sistemas operativos y hacen muy sencilla la instalaci\u00f3n de los mismos dentro de una m\u00e1quina virtual. Sin embargo, tienen un inconveniente y es que cuando son dispositivos muy usados, tienen un rendimiento pobre, aumentan el consumo de recursos de la CPU y aumentan la latencia de E/S.</p> <p>El proyecto KVM proporciona una alternativa al uso de dispositivos emulados, que se conocen como dispositivos paravirtualizados y se engloban bajo la denominaci\u00f3n virtIO. El nombre de dispositivos paravirtualizados hace referencia a la t\u00e9cnica que utilizan, m\u00e1s cercana a la paravirtualizaci\u00f3n y que proporciona un rendimiento muy cercano al real, por lo que es muy recomendable utilizar dispositivos virtIO en los dispositivos de E/S que consumen m\u00e1s recursos, por ejemplo, la red y el acceso a discos duros. El \u00fanico inconveniente que tiene utilizar dispositivos virtIO es que son espec\u00edficos para KVM y no todos los sistemas operativos los reconocen por defecto. Evidentemente los sistemas linux s\u00ed reconocen los dispositivos virtIO y en ese caso siempre es recomendable usarlos, pero otros sistemas operativos, como por ejemplo Windows, no incluyen inicialmente soporte virtio, si queremos usarlos en ese caso, ser\u00e1 necesario instalar los controladores de dispositivos durante la instalaci\u00f3n del sistema operativo de la m\u00e1quina virtual.</p>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/03.-qemu-kvm/#libvirt-una-api-de-virtualizacion","title":"libvirt: una API de virtualizaci\u00f3n","text":"<p>Normalmente no trabajamos directamente con las aplicaciones ofrecidas por QEMU/KVM para la gesti\u00f3n de recursos virtualizados. Es m\u00e1s f\u00e1cil usar libvirt, una API intermedia que nos facilita la comunicaci\u00f3n con QEMU/KVM.</p> <p>\u00cdndice</p>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/04.-libvirt/","title":"04.-libvirt","text":"<p>libvirt proporciona una API gen\u00e9rica, un demonio y un conjunto de herramientas de gesti\u00f3n para diferentes sistemas de virtualizaci\u00f3n, en particular los sistemas de virtualizaci\u00f3n nativos de linux: KVM, LXC o Xen. Tambi\u00e9n es posible,  manejar a trav\u00e9s de libvirt otros sistemas de virtualizaci\u00f3n como VMware ESXi o Hyper-V.</p>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/04.-libvirt/#mecanismos-de-conexion","title":"Mecanismos de conexi\u00f3n","text":"<p>libvirt proporciona varios mecanismos para conectarse a un hipervisor Qemu/KVM, tanto de forma local como remota, los que veremos en este curso son:</p>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/04.-libvirt/#acceso-local-con-un-usuario-no-privilegiado","title":"Acceso local con un usuario no privilegiado","text":"<p>Nos conectamos a la URI <code>qemu:///session</code>. Se acceden a las m\u00e1quinas virtuales de ese usuario. En este modo de conexi\u00f3n, el usuario no suele tener permisos para crear conexiones de red, por lo que se limita su uso de la red no privilegiada de qemu (SLIRP) que es \u00fatil para casos simples, pero que tiene bajo rendimiento y es poco configurable. </p>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/04.-libvirt/#acceso-local-privilegiado","title":"Acceso local privilegiado","text":"<p>Nos conectamos a la URI <code>qemu:///system</code>. Se acceden a las m\u00e1quinas virtuales del sistema. Por las limitaciones vistas anteriormente en el acceso local con usuarios no privilegiados, se utiliza la conexi\u00f3n <code>qemu:///system</code>, que es \u00fanica para todo el sistema y que puede utilizar tanto el usuario <code>root</code> como cualquier miembro del grupo <code>libvirt</code>.</p>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/04.-libvirt/#acceso-remoto-privilegiado-por-ssh","title":"Acceso remoto privilegiado por ssh","text":"<p>Nos conectamos a la URI <code>qemu+ssh:///system</code>. En las conexiones citadas anteriormente nos conectamos a un socket linux <code>/var/run/libvirt/libvirt-sock</code>. A este socket tambi\u00e9n nos podemos conectar a trav\u00e9s de un t\u00fanel ssh (qemu+ssh).</p>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/04.-libvirt/#aplicaciones-para-usar-libvirt","title":"Aplicaciones para usar libvirt","text":"<p>libvirt proporciona una API que puede ser utilizada por diferentes aplicaciones (CLI, GUI o web). Podemos destacar algunas que vamos a utilizar en este curso:</p> <ul> <li>virsh: Es el cliente por l\u00ednea de comandos \"oficial\" de libvirt. Ofrece una shell completa para el manejo de la API.</li> <li>virt-manager: Es una aplicaci\u00f3n gr\u00e1fica (GUI) que nos proporciona muchas de las funcionalidades para trabajar con libvirt.</li> <li>virtinst: Paquete que proporciona los comandos <code>virt-clone</code>, <code>virt-install</code> y <code>virt-xml</code> \u00fatiles para crear y copiar m\u00e1quinas virtuales.</li> <li>virt-viewer: Programa que nos permite acceder a a la consola gr\u00e1fica de una m\u00e1quina virtual.</li> <li>gnome-boxes: Aplicaci\u00f3n gr\u00e1fica muy simple, que utilizando el acceso local con usuario no privilegiado, nos permite gestionar, de forma sencilla, m\u00e1quinas virtuales.</li> </ul> <p>Cuando cualquier aplicaci\u00f3n se conecta a libvirt (con cualquiera de los m\u00e9todos que hemos estudiado) el formato de la informaci\u00f3n que se intercambian a trav\u00e9s de la API es XML. Puedes encontrar la definici\u00f3n de este formato en la documentaci\u00f3n oficial: XML Format.</p> <p>\u00cdndice</p>"},{"location":"01.-KVM/01.-Introducci%C3%B3n/05.-LXC/","title":"05.-LXC","text":"<p>LinuX Containers, tambi\u00e9n conocido por el acr\u00f3nimo LXC, es una tecnolog\u00eda de virtualizaci\u00f3n ligera o por contenedores, que es un m\u00e9todo de virtualizaci\u00f3n en el que, sobre el n\u00facleo del sistema operativo se ejecuta una capa de virtualizaci\u00f3n que permite que existan m\u00faltiples instancias aisladas de espacios de usuario, en lugar de solo uno. A estas instancias la llamamos contenedores.</p> <p>Todo esto ha sido posible por el desarrollo de dos componentes del nucleo de Linux:</p> <ul> <li>Los Grupos de Control cgroups, en concreto en Debian 11 se utiliza cgroupsv2: que limita el uso de recursos (l\u00edmite de memoria, cpu, I/O o red) para un proceso y sus hijos.</li> <li>Los Espacios de Nombres namespaces: que proporcionan un punto de vista diferente a un proceso (interfaces de red, procesos, usuarios, etc.).</li> </ul> <p>LXC pertenece a los denominados contenedores de sistemas, su gesti\u00f3n y ciclo de vida es similar al de una m\u00e1quina virtual tradicional. Est\u00e1 mantenido por Canonical y la p\u00e1gina oficial es linuxcontainers.org.</p>"},{"location":"01.-KVM/02.-Instalaci%C3%B3n/01.-Escenario%20de%20instalaci%C3%B3n/","title":"Preparaci\u00f3n del escenario de instalaci\u00f3n","text":"<p>En un entorno de producci\u00f3n, QEMU/KVM se instalar\u00e1 sobre una m\u00e1quina f\u00edsica con suficientes recursos. Si el sistema operativo tiene entorno gr\u00e1fico, podremos instalar herramientas gr\u00e1ficas, aunque siempre nos podemos conectar remotamente al servidor para gestionar QEMU/KVM.</p> <p>Para ejecutar QEMU/KVM necesitamos que el procesador soporte extensiones de virtualizaci\u00f3n en su juego de instrucciones. Para comprobar si tenemos esta caracter\u00edstica ejecutamos la siguiente instrucci\u00f3n como <code>root</code>:</p> <pre><code>egrep 'svm|vmx' /proc/cpuinfo --color\n</code></pre> <p>El resultado deber\u00eda mostrar varias l\u00edneas con el texto buscado resaltado en color. Si este es el caso entonces nuestro procesador soporta KVM. Los procesadores Intel mostrar\u00e1n el texto vmx resaltado y los procesadores AMD mostrar\u00e1n el texto svm resaltado.</p> <p>NOTA: Es importante comprobar que en la BIOS est\u00e1n activados las instrucciones virtuales VT/x, de lo contrario KVM no funcionar\u00e1.</p>"},{"location":"01.-KVM/02.-Instalaci%C3%B3n/01.-Escenario%20de%20instalaci%C3%B3n/#virtualizacion-anidada","title":"Virtualizaci\u00f3n anidada","text":"<p>Con esta caracter\u00edstica se permite la ejecuci\u00f3n de instrucciones KVM dentro de m\u00e1quinas virtuales KVM, lo cual nos posibilita la ejecuci\u00f3n de m\u00e1quinas virtuales dentro de m\u00e1quinas virtuales. De esta manera,podemos crear un laboratorio de prueba de QEMU/KVM ejecut\u00e1ndolos en una m\u00e1quina virtual.</p> <p>Por ejemplo podemos activar la virtualizaci\u00f3n anidada (nested virtualization) en VirtualBox de la siguiente manera.</p> <p>TO DO</p>"},{"location":"01.-KVM/02.-Instalaci%C3%B3n/01.-Escenario%20de%20instalaci%C3%B3n/#requerimientos-minimos","title":"Requerimientos m\u00ednimos","text":"<p>Como hemos visto, si tenemos un entorno de producci\u00f3n, utilizaremos una m\u00e1quina f\u00edsica para la instalaci\u00f3n de QEMU/KVM. Para realizar este curso, tambi\u00e9n podr\u00edamos usar una m\u00e1quina virtual (con virtualizaci\u00f3n anidada activa) para tener un laboratorio de pruebas.</p> <p>Dependiendo de la cantidad de memoria RAM, espacio de disco duro y VCPU que tengamos, podremos virtualizar m\u00e1s o menos m\u00e1quinas virtuales:</p> <ul> <li>Por ejemplo, desde el punto de vista de la RAM: si virtualizamos una m\u00e1quina virtual sin entorno gr\u00e1fico podemos asignarle 512Mb, si tiene entorno gr\u00e1fico ya tendr\u00edamos que usar 1 o 2GB, si virtualizamos una m\u00e1quina Windows al menos tendremos que asignar 2Gb de RAM.</li> <li>Desde el punto de vista del almacenamiento: Este factor no es tan importante, pero tenemos que pensar que hay que almacenar las ISO para la instalaci\u00f3n de las m\u00e1quinas y los discos duros de las m\u00e1quinas virtuales. </li> <li> <p>Al crear m\u00e1quinas virtuales o contenedores podremos asignarle cores virtuales de CPU, por lo que aumentar\u00e1 el rendimiento si asignamos a nuestra m\u00e1quina virtual suficientes n\u00facleos de CPU. Por todo lo explicado a continuaci\u00f3n la configuraci\u00f3n recomendada para la m\u00e1quina virtual ser\u00eda:</p> </li> <li> <p>8 Gb de RAM</p> </li> <li>100 Gb de disco duro</li> <li>4 n\u00facleos de CPU</li> </ul> <p>\u00cdndice</p>"},{"location":"01.-KVM/02.-Instalaci%C3%B3n/02.-Instalacion/","title":"Instalaci\u00f3n de QEMU/KVM + libvirt","text":"<p>Para trabajar con el sistema de virtualizaci\u00f3n QEMU/KVM + libvirt en nuestra distribuci\u00f3n Linux Debian/Ubuntu, vamos a instalar los siguientes paquetes:</p> <pre><code>apt install qemu-system libvirt-clients libvirt-daemon-system\n</code></pre> <p>libvirt proporciona varios mecanismos para conectarse a un hipervisor qemu-kvm.</p> <p>Podemos obtener las versiones de las aplicaciones que hemos instalado (en mi caso en una distribuci\u00f3n GNU/Linux Debian 11), ejecutando:</p> <pre><code>virsh version\nCompilada con biblioteca: libvirt 7.0.0\nUso de biblioteca: libvirt  7.0.0\nUtilizando API: QEMU 7.0.0\nEjecutando hypervisor: QEMU 5.2.0\n</code></pre>"},{"location":"01.-KVM/02.-Instalaci%C3%B3n/02.-Instalacion/#conexion-a-qemukvm","title":"Conexi\u00f3n a QEMU/KVM","text":"<p>Vamos a usar la utilidad <code>virsh</code>, que nos proporciona una shell completa para el manejo de libvirt. Con el comando <code>list</code> mostramos las m\u00e1quinas virtuales que hemos creado.</p> <p>Con un usuario sin privilegios ejecutamos:</p> <pre><code>usuario@kvm:~$ virsh list\n</code></pre> <p>Estar\u00edamos haciendo una conexi\u00f3n local con un usuario no privilegiado (estar\u00edamos conectando con la URI <code>qemu:///session</code> y estar\u00edamos mostrando las m\u00e1quinas virtuales de este usuario.</p> <p>Si por el contrario, como <code>root</code> ejecutamos:</p> <pre><code>root@kvm:~# virsh list\n</code></pre> <p>Estar\u00edamos haciendo una conexi\u00f3n local privilegiada (estar\u00edamos conectando con la URI <code>qemu:///system</code>) y mostrar\u00edamos las m\u00e1quinas virtuales del sistema.</p> <p>Si queremos que un usuario sin privilegios pueda hacer conexiones privilegiadas, el usuario debe pertenecer el grupo <code>libvirt</code>:</p> <pre><code>root@kvm:~# adduser usuario libvirt\n</code></pre> <p>Para que el usuario <code>usuario</code> haga una conexi\u00f3n privilegiada tendr\u00e1 que indicar expl\u00edcitamente la conexi\u00f3n a la URI <code>qemu:///system</code>:</p> <pre><code>usuario@kvm:~$ virsh -c qemu:///system list\n</code></pre> <p>De forma alternativa y seg\u00fan la wiki de Debian, podemos usar la variable de entorno <code>LIBVIRT_DEFAULT_URI</code> con el siguiente comando:</p> <pre><code>export LIBVIRT_DEFAULT_URI='qemu:///system'\n</code></pre> <p>\u00cdndice</p>"},{"location":"01.-KVM/02.-Instalaci%C3%B3n/03.-Conexi%C3%B3n%20local%20no%20privilegiada%20a%20libvirt/","title":"03.-Conexi\u00f3n local no privilegiada a libvirt","text":"<p>Como hemos comentado en el punto anterior, un usuario sin privilegio puede crear sus m\u00e1quinas virtuales. Para ello realizar\u00e1 una conexi\u00f3n local a la URI <code>qemu:///session</code>. En este modo de conexi\u00f3n, el usuario no tiene permisos para crear conexiones de red, por lo que se limita su uso de la red no privilegiada de qemu (SLIRP) que es \u00fatil para casos simples, pero que tiene bajo rendimiento y es poco configurable. </p> <p>El usuario podr\u00eda usar cualquier aplicaci\u00f3n que nos permite la creaci\u00f3n de m\u00e1quinas virtuales (<code>virsh</code>, <code>virt-install</code>, <code>virt-manager</code>,...), pero en este apartado vamos a usar Gnome Cajas (Gnome Boxes), que es una aplicaci\u00f3n gr\u00e1fica que nos permite crear m\u00e1quinas virtuales, de forma sencilla, en el espacio de usuario.</p>"},{"location":"01.-KVM/02.-Instalaci%C3%B3n/03.-Conexi%C3%B3n%20local%20no%20privilegiada%20a%20libvirt/#gnome-boxes","title":"Gnome Boxes","text":"<p>Instalamos esta aplicaci\u00f3n:</p> <pre><code># apt install gnome-boxes\n</code></pre> <p>La utilizaci\u00f3n de esta aplicaci\u00f3n es muy sencilla. Podemos descargar distribuciones Linux preconfiguradas o elegir un fichero ISO para realizar la instalaci\u00f3n. Siguiendo la documentaci\u00f3n de la aplicaci\u00f3n, seguimos los siguientes pasos para crear una nueva maquina virtual:</p> <p>Pulsamos el bot\u00f3n \"+\" y elegimos la opci\u00f3n Crea una m\u00e1quina virtual.... A continuaci\u00f3n podemos escoger un sistema predefinido o un fichero ISO para realizar la instalaci\u00f3n. Elegimos un sistema preconfigurado:</p> <p></p> <p>A continuaci\u00f3n buscamos las versiones de Ubuntu:</p> <p></p> <p>Despu\u00e9s de la descarga, configuramos la nueva m\u00e1quina:</p> <p></p> <p>Y al terminar la instalaci\u00f3n  podemos acceder a la m\u00e1quina:</p> <p></p> <p>La m\u00e1quina se conecta a la red de usuario de QEMU (SLIRP) que configura la m\u00e1quina con la direcci\u00f3n IP <code>10.0.2.15</code>, su puerta de enlace, que es el anfitri\u00f3n (la m\u00e1quina f\u00edsica) es la direcci\u00f3n IP <code>10.0.2.2</code> y configura un servidor DNS en la direcci\u00f3n IP <code>10.0.2.3</code>. Esta red permite que la m\u00e1quina tenga acceso a internet, pero no tendr\u00e1 conectividad con el anfitri\u00f3n u otras m\u00e1quinas que creemos.</p> <p></p>"},{"location":"01.-KVM/02.-Instalaci%C3%B3n/03.-Conexi%C3%B3n%20local%20no%20privilegiada%20a%20libvirt/#acceso-a-las-maquinas-desde-la-linea-de-comandos","title":"Acceso a las m\u00e1quinas desde la l\u00ednea de comandos","text":"<p>Para comprobar que la m\u00e1quina virtual que hemos creado est\u00e1 virtualizada con QEMU/KVM + libvirt en el espacio de usuario, podemos ejecutar en el anfitri\u00f3n con el usuario con el que estamos trabajando:</p> <pre><code>usuario@kvm:~$ virsh -c qemu:///session list\n Id   Nombre          Estado\n----------------------------------\n 2    ubuntu20.10-2   ejecutando\n</code></pre> <p>Vemos que la m\u00e1quina est\u00e1 creado en la sesi\u00f3n del usuario <code>usuario</code>. Nota: No es necesario indicar la conexi\u00f3n <code>-c qemu:///session</code>, pero de esa forma se ve m\u00e1s claro que estamos haciendo una conexi\u00f3n local con un usuario sin privilegios.</p> <p>Por \u00faltimo, indicar que la imagen del disco se guarda por defecto en el directorio <code>~/.local/share/gnome-boxes/images</code>:</p> <pre><code>usuario@kvm:~$ ls -l .local/share/gnome-boxes/images\ntotal 196\n-rwxr--r-- 1 usuario usuario 196816 may 15 21:52 ubuntu20.10-2\n</code></pre> <p>\u00cdndice</p>"},{"location":"01.-KVM/02.-Instalaci%C3%B3n/04.-Conexi%C3%B3n%20local%20privilegiada%20a%20libvirt/","title":"04.-Conexi\u00f3n local privilegiada a libvirt","text":"<p>En este curso vamos a trabajar realizando conexiones locales privilegiadas, por lo tanto si queremos ver todas las m\u00e1quinas creadas en el sistema debemos ejecutar:</p> <pre><code>usuario@kvm:~$ virsh -c qemu:///system list --all\n</code></pre> <ul> <li>Nota 1: La opci\u00f3n <code>--all</code> muestra las m\u00e1quinas que se est\u00e1n ejecutando y las que est\u00e1n paradas.</li> <li>Nota 2: Si nos conectaremos con el usuario <code>root</code> no har\u00eda falta indicar la URI <code>-c qemu:///system</code>.</li> </ul>"},{"location":"01.-KVM/02.-Instalaci%C3%B3n/04.-Conexi%C3%B3n%20local%20privilegiada%20a%20libvirt/#redes-disponibles","title":"Redes disponibles","text":"<p>Cuando instalamos QEMU/KVM + libvirt se crea una red por defecto de tipo NAT, que no est\u00e1 iniciada. Para verla, ejecutamos la siguiente instrucci\u00f3n:</p> <pre><code>usuario@kvm:~$ virsh -c qemu:///system net-list --all\n Nombre    Estado     Inicio autom\u00e1tico   Persistente\n-------------------------------------------------------\n default   inactivo   no                  si\n</code></pre> <ul> <li>Nota: La opci\u00f3n <code>--all</code> muestra las redes activas e inactivas.</li> </ul> <p>Como vemos, el estado es inactivo, para iniciarla, ejecutamos:</p> <pre><code>usuario@kvm:~$ virsh -c qemu:///system net-start default \nLa red default se ha iniciado\n</code></pre> <p>Adem\u00e1s es recomendable activar la propiedad de Incio aut\u00f3matico, para que se inicie de forma autom\u00e1tica despu\u00e9s de reiniciar el host, para ello:</p> <pre><code>usuario@kvm:~$ virsh -c qemu:///system net-autostart default\nLa red default ha sido marcada para iniciarse autom\u00e1ticamente\n</code></pre> <p>Y ejecutando de nuevo <code>virsh -c qemu:///system net-list</code>, aparece la red como activa y Inicio autom\u00e1tico a si.</p> <p>Aunque estudiaremos la redes con profundidad en el m\u00f3dulo correspondiente, podemos se\u00f1alar que las m\u00e1quinas virtuales que se conecten a esta red, tendr\u00e1n las siguientes caracter\u00edsticas:</p> <ul> <li>Tomar\u00e1n una direcci\u00f3n IP de forma din\u00e1mica en el rango <code>192.168.122.2</code> - <code>192.168.122.254</code>. Es decir, existe un servidor DHCP (que se encuentra en el host) asignando de forma din\u00e1mica el direccionamiento.</li> <li>La puerta de enlace ser\u00e1 la direcci\u00f3n IP <code>192.168.122.1</code> que corresponde al host. Est\u00e1 direcci\u00f3n tambi\u00e9n corresponde al servidor DNS que tiene configurado (que tambi\u00e9n se encuentra en el host).</li> <li>La m\u00e1quina virtual estar\u00e1 conectada a un Linux Bridge (switch virtual) llamado <code>virbr0</code> por la que se conectar\u00e1 al host.</li> <li>El host har\u00e1 de router/nat para que la m\u00e1quina tenga conectividad al exterior.</li> </ul> <p>Por defecto, las nuevas m\u00e1quinas que creemos se conectar\u00e1n a esta red.</p>"},{"location":"01.-KVM/02.-Instalaci%C3%B3n/04.-Conexi%C3%B3n%20local%20privilegiada%20a%20libvirt/#almacenamiento-disponible","title":"Almacenamiento disponible","text":"<p>Estudiaremos en profundidad el almacenamiento con el que podemos trabajar en el m\u00f3dulo correspondiente. En este momento, indicar que los ficheros correspondientes a las im\u00e1genes de discos de las nuevas m\u00e1quinas virtuales que creemos se guardar\u00e1n, por defecto, en el directorio <code>/var/lib/libvirt/images</code>.</p> <p>\u00cdndice</p>"},{"location":"01.-KVM/02.-Instalaci%C3%B3n/05.-Conexi%C3%B3n%20remota/","title":"Conexi\u00f3n remota a libvirt","text":"<p>Podemos conectar al hypervirsor libvirt que se est\u00e1 ejecutando en un servidor desde otra m\u00e1quina remota. Es decir, desde una m\u00e1quina cliente podemos usar, por ejmplo, <code>virsh</code> para conectarnos a un hypervisor libvirt remoto. Para ello, la sintaxis es la siguiente:</p> <pre><code>usuario@cliente:~$ virsh -c qemu+ssh://usuario_remoto@ip_servidor_remoto/system comando\n</code></pre> <p>Es decir, se va a producir una conexi\u00f3n ssh entre la m\u00e1quina cliente y el servidor donde se ejecuta libvirt. Por lo tanto hay que configurar las m\u00e1quinas para que el usuario <code>usuario</code> de la m\u00e1quina <code>cliente</code> pueda acceder por SSH al servidor remoto con el usuario <code>usuario_remoto</code>, sin que se se le pida la contrase\u00f1a.</p> <p>Para ello tendremos que copiar la clave p\u00fablica SSH del usuario <code>cliente</code> al fichero <code>~/.ssh/authorized_keys</code> del usuario <code>usuario_remoto</code> en el servidor que queremos acceder.</p> <p>\u00cdndice</p>"},{"location":"01.-KVM/03.-Creaci%C3%B3n%20de%20MV%20desde%20el%20CLI/01.-Creaci%C3%B3n%20de%20MV%20con%20virt-install/","title":"Creaci\u00f3n de m\u00e1quinas virtuales con virt-install","text":"<p>Vamos a crear nuestra primera m\u00e1quina virtual desde la l\u00ednea de comandos con la aplicaci\u00f3n <code>virt-install</code>.</p> <p>Lo primero que tenemos que hacer es instalar el paquete <code>virtinst</code>, que adem\u00e1s de este programa, tiene otras utilidades que iremos usando a los largo del curso.</p> <pre><code>apt install virtinst\n</code></pre> <p>La informaci\u00f3n que tenemos que proporcionar a <code>virt-install</code> para la creaci\u00f3n de la nueva m\u00e1quina virtual ser\u00e1 la siguiente:</p> <ul> <li>El nombre de la m\u00e1quina virtual (par\u00e1metro <code>--name</code>).</li> <li>El tipo de virtualizaci\u00f3n (par\u00e1metro <code>--virt-type</code>). en nuestro caso ser\u00e1 <code>kvm</code>.</li> <li>En nuestro caso vamos a realizar una instalaci\u00f3n desde un fichero ISO, por lo que tendremos que indicar que la nueva m\u00e1quina tendr\u00e1 un CDROM con la ISO que indiquemos (par\u00e1metro <code>--cdrom</code>).</li> <li>La variante del sistema operativo que vamos a utilizar (par\u00e1metro <code>--os-variant</code>). Para obtener la lista de variantes de sistemas operativos, podemos ejecutar <code>osinfo-query os</code> (Instalar el paquete <code>libosinfo-bin</code> si no reconoce el comando). </li> <li>El tama\u00f1o del disco (par\u00e1metro <code>--disk size</code>). Se crear\u00e1 un fichero con la imagen del disco que se guardar\u00e1 en <code>/var/lib/libvirt/images</code>.</li> <li>La cantidad de memoria RAM (par\u00e1metro <code>--memory</code>).</li> <li>La cantidad de vCPU asignadas a la m\u00e1quina (par\u00e1metro <code>--vcpus</code>).</li> </ul> <p>Podemos indicar muchos m\u00e1s par\u00e1metros a la hora de crear la nueva m\u00e1quina. Puedes obtener toda la informaci\u00f3n en la documentaci\u00f3n oficial de la aplicaci\u00f3n. Iremos usando, a lo largo del curso, diferentes par\u00e1metros de esta herramienta.</p>"},{"location":"01.-KVM/03.-Creaci%C3%B3n%20de%20MV%20desde%20el%20CLI/01.-Creaci%C3%B3n%20de%20MV%20con%20virt-install/#creacion-de-nuestra-primera-maquina-virtual","title":"Creaci\u00f3n de nuestra primera m\u00e1quina virtual.","text":"<p>Vamos a crear una m\u00e1quina con las siguientes caracter\u00edsticas: se va a llamar <code>prueba1</code>, se va a usar una ISO de la distribuci\u00f3n GNU/Linux Debian 11, la variante de sistema operativo podemos poner <code>debian10</code>, el tama\u00f1o del disco ser\u00e1 de 10 GB, la memoria RAM ser\u00e1 de 1 GB y le vamos a asignar 1 vCPU. No vamos a indicar la red a la que se conecta ya que, por defecto, se conectar\u00e1 a la red predefinida <code>default</code>.</p> <p>Tenemos que tener en cuenta dos cosas:</p> <ol> <li>La red <code>default</code> debe estar activa: <code>virsh -c qemu:///system net-start default</code>.</li> <li>Hemos bajado una imagen ISO para la instalaci\u00f3n del sistema operativo y la tenemos guardad en el directorio <code>~/iso</code>.</li> </ol> <p>Para crear la nueva m\u00e1quina con esas caracter\u00edsticas, ejecutamos con usuario sin privilegios:</p> <pre><code>virt-install --connect qemu:///system \\\n             --virt-type kvm \\\n             --name prueba1 \\\n             --cdrom ~/iso/debian-11.3.0-amd64-netinst.iso \\\n             --os-variant debian10 \\\n             --disk size=10 \\\n             --memory 1024 \\\n             --vcpus 1\n</code></pre> <p>A continuaci\u00f3n, se iniciar\u00e1 la m\u00e1quina y se abrir\u00e1 una terminal en la aplicaci\u00f3n <code>virt-viewer</code> para que realicemos la instalaci\u00f3n:</p> <p></p> <p>\u00cdndice</p>"},{"location":"01.-KVM/03.-Creaci%C3%B3n%20de%20MV%20desde%20el%20CLI/02.-Caracter%C3%ADsticas%20de%20la%20MV/","title":"Caracter\u00edsticas de las m\u00e1quinas virtuales","text":"<p>Despu\u00e9s de instalar nuestra primera m\u00e1quina, podemos comprobar la lista de m\u00e1quinas ejecutando la siguiente instrucci\u00f3n:</p> <pre><code>virsh -c qemu:///system list\n Id   Nombre    Estado\n----------------------------\n 2    prueba1   ejecutando\n</code></pre> <p>Si queremos acceder a la terminal de una m\u00e1quina podemos usar <code>virt-view</code> de la siguiente forma:</p> <pre><code>virt-viewer -c qemu:///system prueba1\n</code></pre>"},{"location":"01.-KVM/03.-Creaci%C3%B3n%20de%20MV%20desde%20el%20CLI/02.-Caracter%C3%ADsticas%20de%20la%20MV/#red","title":"Red","text":"<p>Como coment\u00e1bamos en el punto anterior, la m\u00e1quina que hemos creado se conecta, por defcto, a la red <code>default</code>. Esta red es de tipo NAT, y comprobamos que la m\u00e1quina ha recibido una IP de forma din\u00e1mica y que su puerta de enlace corresponde a la direcci\u00f3n IP <code>192.168.122.1</code>, que corresponde con el host, el servidor DNS corresponde a la misma IP y comprobamos que tiene resoluci\u00f3n y acceso a internet:</p> <p></p>"},{"location":"01.-KVM/03.-Creaci%C3%B3n%20de%20MV%20desde%20el%20CLI/02.-Caracter%C3%ADsticas%20de%20la%20MV/#recursos-hardware","title":"Recursos hardware","text":"<p>Podemos comprobar que la maq\u00faina tiene un disco de 10 Gb y de memoria RAM 1Gb:</p> <p></p>"},{"location":"01.-KVM/03.-Creaci%C3%B3n%20de%20MV%20desde%20el%20CLI/02.-Caracter%C3%ADsticas%20de%20la%20MV/#almacenamiento","title":"Almacenamiento","text":"<p>Un Pool de almacenamiento es un recurso de almacenamiento. Lo m\u00e1s usual es tener pools de almacenamiento que sean locales, por ejemplo un directorio. En el momento de crear la primera m\u00e1quina se han creado dos pools de almacenamiento de tipo dir y que corresponden a los dos directorios con los que estamos trabajando:</p> <ul> <li><code>default</code>: Es un pool de almacenamiento que corresponde con el directorio <code>/usr/lib/libvirt/images</code> y donde se guardar\u00e1n los ficheros correspondientes a las im\u00e1genes de disco.</li> <li><code>iso</code>: Este pool de almacenamiento se ha creado al indicar en <code>virt-install</code>el directorio donde estaba almacenado el fichero ISO. En este caso es otro pool de almacenamiento de tipo dir, y corresponde al directorio <code>~/ISO</code>.</li> </ul> <p>Podemos ver los pools de almacenamiento, que tenemos creado, ejecutando:</p> <pre><code>virsh -c qemu:///system pool-list \n Nombre    Estado   Inicio autom\u00e1tico\n---------------------------------------\n default   activo   si\n iso       activo   si\n</code></pre> <p>Un volumen es un medio de almacenamiento que podemos crear en un pool de almacenamiento en kvm. Si el pool de almacenamiento es de tipo dir, entonces el volumen ser\u00e1 un fichero de imagen.</p> <p>Veamos el volumen que se ha creado el pool <code>default</code>:</p> <pre><code>virsh -c qemu:///system vol-list default\n Nombre          Ruta\n--------------------------------------------------------\n prueba1.qcow2   /var/lib/libvirt/images/prueba1.qcow2\n</code></pre> <p>Vemos que la imagen del disco de la m\u00e1quina virtual est\u00e1 guardada en un fichero QCOW2. Tambi\u00e9n podemos ver el volumen que est\u00e1 creado en el pool <code>iso</code>:</p> <pre><code>virsh -c qemu:///system vol-list iso\n Nombre                            Ruta\n--------------------------------------------------------------------------------------\n debian-11.3.0-amd64-netinst.iso   /home/usuario/iso/debian-11.3.0-amd64-netinst.iso\n</code></pre> <p>Que corresponde al fichero de la imagen ISO que hemos copiado en el directorio <code>~/ISO</code>.</p> <p>En todos estos conceptos sobre almacenamiento profundizaremos en el m\u00f3dulo correspondiente.</p> <p>\u00cdndice</p>"},{"location":"01.-KVM/03.-Creaci%C3%B3n%20de%20MV%20desde%20el%20CLI/03.-Gesti%C3%B3n%20de%20MV%20con%20virsh/","title":"Gesti\u00f3n de m\u00e1quinas virtuales con virsh","text":"<p>virsh es el cliente por l\u00ednea de comandos \"oficial\" de libvirt. Ofrece una shell completa para el manejo de la API.</p> <p>Cuando obtenga la ayuda de esta herramienta ver\u00e1s que en mucha ocasiones habla de dominio. Un dominio en QEMU/KVM es una m\u00e1quina virtual.</p> <p>Para obtener ayuda sobre todos los comandos que podemos ejecutar:</p> <pre><code>virsh --help\n</code></pre> <p>Si queremos pedir ayuda de un comando en concreto, por ejemplo el comando <code>list</code>, ejecutamos:</p> <pre><code>virsh list --help\n</code></pre> <p>Ya hemos usado el comando <code>list</code> para mostrar las m\u00e1quinas virtuales que tenemos creada:</p> <pre><code>virsh -c qemu:///system list --all\n Id   Nombre    Estado\n----------------------------\n 2    prueba1   ejecutando\n</code></pre> <p>Nota: Podemos referencia una m\u00e1quina virtual por su nombre o por su id.</p>"},{"location":"01.-KVM/03.-Creaci%C3%B3n%20de%20MV%20desde%20el%20CLI/03.-Gesti%C3%B3n%20de%20MV%20con%20virsh/#ciclo-de-vida-de-una-maquina-virtual","title":"Ciclo de vida de una m\u00e1quina virtual","text":"<p>Para apagar de forma adecuada una m\u00e1quina virtual:</p> <pre><code>virsh -c qemu:///system shutdown prueba1\nDomain 'prueba1' is being shutdown\n</code></pre> <p>Para iniciar una m\u00e1quina que est\u00e1 detenida:</p> <pre><code>virsh -c qemu:///system start prueba1\nDomain 'prueba1' started\n</code></pre> <p>Si la propiedad autostart de una maquina est\u00e1 activa, cada vez que se inicie el host, esa m\u00e1quina se encender\u00e1 de forma autom\u00e1tica. Para activarlo:</p> <pre><code>virsh -c qemu:///system autostart prueba1\nDomain 'prueba1' marked as autostarted\n</code></pre> <p>Reiniciamos una m\u00e1quina virtual, ejecutando:</p> <pre><code>virsh -c qemu:///system reboot prueba1\nDomain 'prueba1' is being rebooted\n</code></pre> <p>Podemos forzar el apagado de una m\u00e1quina:</p> <pre><code>virsh -c qemu:///system destroy prueba1\nDomain 'prueba1' destroyed\n</code></pre> <p>Podemos pausar la ejecuci\u00f3n de una m\u00e1quina</p> <pre><code>virsh -c qemu:///system suspend prueba1\nDomain 'prueba1' suspended\n</code></pre> <p>Y continuar la ejecuci\u00f3n:</p> <pre><code>virsh -c qemu:///system resume prueba1\nDomain 'prueba1' resumed\n</code></pre> <p>Por \u00faltimo, para eliminar una m\u00e1quina virtual que est\u00e9 parada (eliminando los vol\u00famenes asociados):</p> <pre><code>virsh -c qemu:///system undefine --remove-all-storage  prueba1\n</code></pre>"},{"location":"01.-KVM/03.-Creaci%C3%B3n%20de%20MV%20desde%20el%20CLI/03.-Gesti%C3%B3n%20de%20MV%20con%20virsh/#obtener-informacion-de-la-maquina-virtual","title":"Obtener informaci\u00f3n de la m\u00e1quina virtual","text":"<p>Todos los comandos de <code>virsh</code> que empiezan por dom nos permiten obtener informaci\u00f3n de la m\u00e1quina. </p> <p>Para obtener informaci\u00f3n de la m\u00e1quina:</p> <pre><code>virsh -c qemu:///system dominfo prueba1 \n</code></pre> <p>Obtener la direcci\u00f3n IP de la interfaz de red:</p> <pre><code>virsh -c qemu:///system domifaddr prueba1\n</code></pre> <p>Obtener los discos que tiene la m\u00e1quina:</p> <pre><code>virsh -c qemu:///system domblklist prueba1\n</code></pre> <p>Puedes buscar informaci\u00f3n de m\u00e1s comandos para obtener distinta informaci\u00f3n de la m\u00e1quina virtual.</p> <p>\u00cdndice</p>"},{"location":"01.-KVM/03.-Creaci%C3%B3n%20de%20MV%20desde%20el%20CLI/04.-Definici%C3%B3n%20XML%20de%20una%20MV/","title":"Definici\u00f3n XML de una m\u00e1quina virtual","text":"<p>Las caracter\u00edsticas, opciones y dispositivos hardware de una m\u00e1quina virtual est\u00e1n estructuradas con el lenguajes de marcas XML. De la misma forma las caracter\u00edsticas de los distintos recursos con los que podemos trabajar (redes, pools de almacenamiento, vol\u00famenes) tambi\u00e9n est\u00e1n definidos con XML.</p>"},{"location":"01.-KVM/03.-Creaci%C3%B3n%20de%20MV%20desde%20el%20CLI/04.-Definici%C3%B3n%20XML%20de%20una%20MV/#esquema-xml-de-una-maquina-virtual","title":"Esquema XML de una m\u00e1quina virtual","text":"<p>Para obtener la definici\u00f3n XML de una m\u00e1quina virtual, ejecutamos la siguiente instrucci\u00f3n:</p> <pre><code>virsh -c qemu:///system  dumpxml prueba1\n</code></pre> <p>Veamos algunos elementos de la definici\u00f3n:</p> <ul> <li>El documento XML empieza con la etiqueta <code>&lt;domain&gt;</code> donde se indica el tipo de virtualizaci\u00f3n utilizada para gestionar la m\u00e1quina y su identificador si la m\u00e1quina est\u00e1 ejecut\u00e1ndose..</li> <li>El nombre de la m\u00e1quina se indica con la etiqueta <code>&lt;name&gt;</code>.</li> <li> <p>La etiqueta <code>&lt;currentMemory&gt;</code> nos indica la memoria asignada actualmente a la m\u00e1quina. Podemos modificar esta memoria asignada sin reiniciar la m\u00e1quina hasta el l\u00edmite indicado por la etiqueta <code>&lt;memory&gt;</code>. Por lo tanto, el valor asignado a <code>&lt;memory&gt;</code> no puede ser menor que el valor asociado a <code>&lt;currentMemory&gt;</code>.</p> <p>En este ejemplo, los dos valores son iguales porque al crear la m\u00e1quina con <code>virt-install</code> usamos el par\u00e1metro <code>--memory</code> y se asigna el valor indicado a los dos par\u00e1metros. M\u00e1s adelante estudiaremos como modificar estos par\u00e1metros.</p> </li> <li> <p>La vCPU asignadas la encontramos definida en la etiqueta <code>&lt;vcpu&gt;</code>.</p> </li> <li>Con la etiqueta <code>&lt;os&gt;</code> tenemos informaci\u00f3n de la arquitectura de la m\u00e1quina virtualizada, adem\u00e1s con las etiquetas <code>&lt;boot&gt;</code> indicamos el orden de arranque entre distintos dispositivos.</li> <li>La informaci\u00f3n de la CPU la encontramos en la etiqueta <code>&lt;cpu&gt;</code>.</li> </ul> <p>Veamos un ejemplo hasta aqu\u00ed:</p> <pre><code>domain type='kvm' id='6'&gt;\n  &lt;name&gt;prueba1&lt;/name&gt;\n  &lt;uuid&gt;a88eebdc-8a00-4b9d-bf48-cbed7bb448d3&lt;/uuid&gt;\n  ...\n  &lt;memory unit='KiB'&gt;1048576&lt;/memory&gt;\n  &lt;currentMemory unit='KiB'&gt;1048576&lt;/currentMemory&gt;\n  &lt;vcpu placement='static'&gt;1&lt;/vcpu&gt;\n  ...\n  &lt;os&gt;\n    &lt;type arch='x86_64' machine='pc-q35-5.2'&gt;hvm&lt;/type&gt;\n    &lt;boot dev='hd'/&gt;\n  &lt;/os&gt;\n  ...\n  &lt;cpu mode='custom' match='exact' check='full'&gt;\n    &lt;model fallback='forbid'&gt;Cooperlake&lt;/model&gt;\n    &lt;vendor&gt;Intel&lt;/vendor&gt;\n    ...\n</code></pre> <p>A continuaci\u00f3n nos encontramos la etiqueta <code>&lt;devices&gt;</code> donde se definen los distintos dispositivos hardware que forman parte de la m\u00e1quina. Veamos algunos ejemplos:</p> <ul> <li>Los discos se definen con la etiqueta <code>&lt;disk&gt;</code>. Encontramos informaci\u00f3n del tipo (en este caso fichero), tipo del fichero (en este caso qcow2), ruta donde se encuentra el fichero,... Es importante se\u00f1alar que, por defecto, se configura el disco con un controlador VirtIO (<code>bus='virtio</code>), es decir, es un dispositivo paravirtualizado que nos ofrece mayor rendimiento. Veamos la definici\u00f3n del disco:</li> </ul> <pre><code>    &lt;disk type='file' device='disk'&gt;\n      &lt;driver name='qemu' type='qcow2'/&gt;\n      &lt;source file='/var/lib/libvirt/images/prueba1.qcow2'/&gt;\n      &lt;target dev='vda' bus='virtio'/&gt;\n      &lt;address type='pci' domain='0x0000' bus='0x04' slot='0x00' function='0x0'/&gt;\n    &lt;/disk&gt;\n</code></pre> <ul> <li>Las interfaces de red se definen con la etiqueta <code>&lt;interface&gt;</code>. Encontramos informaci\u00f3n como la mac, la red a la que est\u00e1 conectada (en este caso la red <code>default</code>),... Tambi\u00e9n observamos que el modelo de la tarjeta es VirtIO (<code>&lt;model type='virtio'/&gt;</code>), de nuevo se configura un dispositivo paravirtualizado de alto rendimiento.</li> </ul> <pre><code>    &lt;interface type='network'&gt;\n      &lt;mac address='52:54:00:8a:50:d1'/&gt;\n      &lt;source network='default'/&gt;\n      &lt;model type='virtio'/&gt;\n      &lt;address type='pci' domain='0x0000' bus='0x01' slot='0x00' function='0x0'/&gt;\n    &lt;/interface&gt;\n</code></pre> <ul> <li>Si nos fijamos en otros dispositivos podremos encontrar la definici\u00f3n del teclado, del rat\u00f3n, el adaptador gr\u00e1fico, controladores PCI, CDROM, ...</li> </ul> <p>Iremos estudiando m\u00e1s elementos de la definici\u00f3n XML de una m\u00e1quina virtual, pero pode\u00eds profundizar en el formato en la documentaci\u00f3n oficial: Domain XML format.</p> <p>\u00cdndice</p>"},{"location":"01.-KVM/03.-Creaci%C3%B3n%20de%20MV%20desde%20el%20CLI/05.-Modificaci%C3%B3n%20de%20una%20MV/","title":"Modificaci\u00f3n de la definici\u00f3n de una m\u00e1quina virtual","text":"<p>Podemos cambiar la configuraci\u00f3n de una m\u00e1quina virtual modificando su definici\u00f3n XML. Podemos cambiar el nombre, la memoria utilizada, la asignaci\u00f3n de CPU, cambiar la configuraci\u00f3n de cualquier dispositivo, eliminar o a\u00f1adir nuevos dispositivos,...</p> <p>Para realizar la modificaci\u00f3n del fichero XML tenemos dos alternativas:</p> <ol> <li>Realizar los cambios directamente en el documento XML utilizando el comando <code>virsh edit</code>.</li> <li>Utilizando comandos espec\u00edficos de <code>virsh</code> que nos ayudan a realizar el cambio de los distintos par\u00e1metros de la configuraci\u00f3n.</li> </ol> <p>Hay cambios que se pueden realizar con la m\u00e1quina funcionando, otros necesitan que la m\u00e1quina est\u00e9 parada y otros necesitan un reinicio de la m\u00e1quina para que se realicen.</p> <p>Veamos algunos ejemplos:</p>"},{"location":"01.-KVM/03.-Creaci%C3%B3n%20de%20MV%20desde%20el%20CLI/05.-Modificaci%C3%B3n%20de%20una%20MV/#modificar-el-nombre-de-una-maquina-virtual","title":"Modificar el nombre de una m\u00e1quina virtual","text":"<p>En este caso la modificaci\u00f3n la vamos a realizar con el comando <code>virsh domrename</code>, que modificar\u00e1 internamente la definici\u00f3n XML:</p> <pre><code>virsh -c qemu:///system domrename prueba2 prueba1\nDomain 'prueba2' XML configuration edited.\n</code></pre> <p>Este cambio requiere que la m\u00e1quina est\u00e9 parada.</p>"},{"location":"01.-KVM/03.-Creaci%C3%B3n%20de%20MV%20desde%20el%20CLI/05.-Modificaci%C3%B3n%20de%20una%20MV/#modificar-la-asignacion-de-vcpu","title":"Modificar la asignaci\u00f3n de vCPU","text":"<p>Suponemos que la m\u00e1quina est\u00e1 parada. Comprobamos el n\u00famero de vCPU asignadas a la m\u00e1quina:</p> <pre><code>virsh -c qemu:///system dominfo prueba1\n...\nCPU(s):         1\n...\n</code></pre> <p>Podemos editar la configuraci\u00f3n XML y cambiar el valor de la etiqueta <code>&lt;vcpu&gt;</code>:</p> <pre><code>virsh -c qemu:///system edit prueba1\n...\n  &lt;vcpu placement='static'&gt;2&lt;/vcpu&gt;\n...\n</code></pre> <p>Y volvemos a comprobar la informaci\u00f3n de la m\u00e1quina:</p> <pre><code>virsh -c qemu:///system dominfo prueba1\n...\nCPU(s):         2\n...\n</code></pre> <p>Tambi\u00e9n podr\u00edamos cambiar la asignaci\u00f3n de vCPU \"en caliente\" con el camando <code>virsh setvcpus</code>, pero no lo vamos a estudiar en este curso. Puedes ver este \u00e1rticulo para m\u00e1s informaci\u00f3n.</p>"},{"location":"01.-KVM/03.-Creaci%C3%B3n%20de%20MV%20desde%20el%20CLI/05.-Modificaci%C3%B3n%20de%20una%20MV/#modificar-la-asignacion-de-memoria-ram","title":"Modificar la asignaci\u00f3n de memoria RAM","text":"<p>Volvemos a suponer que la m\u00e1quina est\u00e1 parada. Podemos editar la configuraci\u00f3n XML y modificar las dos etiquetas relacionadas con la memoria:</p> <ul> <li><code>&lt;memory&gt;</code>: Valor m\u00e1ximo de RAM que podemos asignar a la m\u00e1quina \"en caliente\" (funcionando).</li> <li><code>&lt;currentMemory&gt;</code>: Cantidad de memoria asignada a la m\u00e1quina.</li> </ul> <p>Por ejemplo, dejamos la asignaci\u00f3n de memoria en un 1 Gb, y cambiamos la memoria m\u00e1xima a 3 Gb:</p> <pre><code>virsh -c qemu:///system edit prueba1\n...\n  &lt;memory unit='KiB'&gt;3145728&lt;/memory&gt;\n  &lt;currentMemory unit='KiB'&gt;1048576&lt;/currentMemory&gt;\n...\n</code></pre> <p>Podemos comprobar el cambio:</p> <pre><code>virsh -c qemu:///system dominfo prueba1\n...\nMemoria m\u00e1xima: 3145728 KiB\nMemoria utilizada: 1048576 KiB\n...\n</code></pre> <p>Ahora iniciamos la m\u00e1quina y podemos cambiar \"en caliente\" la memoria de la m\u00e1quina hasta un m\u00e1ximo de 3 Gb, para ello vamos a usar el comando <code>virsh setmem</code>.</p> <pre><code>virsh -c qemu:///system start prueba1\n\nvirsh -c qemu:///system setmem prueba1 2048M\n</code></pre> <p>https://www.unixarena.com/2015/12/linux-kvm-how-to-add-remove-memory-to-guest-on-fly.html/</p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/01.-Primeros%20pasos%20con%20virt-manager/","title":"Primeros pasos con virt-manager","text":"<p>virt-manager es una aplicaci\u00f3n gr\u00e1fica de escritorio para gestionar m\u00e1quinas virtuales a trav\u00e9s de libvirt. Presenta una vista resumida de las m\u00e1quinas virtuales en ejecuci\u00f3n, su rendimiento en vivo y las estad\u00edsticas de utilizaci\u00f3n de recursos. Los usuarios pueden crear nuevas m\u00e1quinas virtuales y configurarlas y gestionar sus dispositivos de hardware. Adem\u00e1s, poseer un cliente VNC / SPICE que permite el acceso de forma sencilla a la consola de la m\u00e1quina.</p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/01.-Primeros%20pasos%20con%20virt-manager/#instalacion-de-virt-manager","title":"Instalaci\u00f3n de virt-manager","text":"<p>En sistemas operativos basados en Debian / Ubuntu, simplemente ejecutamos:</p> <pre><code>apt install virt-manager\n</code></pre>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/01.-Primeros%20pasos%20con%20virt-manager/#vista-general-de-virt-manager","title":"Vista general de virt-manager","text":"<p>Pode defecto, podemos ver que virt-manager tiene configurado una conexi\u00f3n local privilegiada que se llama QEMU/KVM. Vemos las m\u00e1quinas virtuales que est\u00e1n creada en esa conexi\u00f3n (en este caso <code>prueba1</code>, que creamos en el m\u00f3dulo anterior).</p> <p>Con la opci\u00f3n Archivo-&gt;Nueva conexi\u00f3n... podemos dar de alta una nueva conexi\u00f3n.</p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/01.-Primeros%20pasos%20con%20virt-manager/#conexion-qemukvm","title":"Conexi\u00f3n QEMU/KVM","text":"<p>Si pulsamos con el bot\u00f3n derecho del rat\u00f3n sobre la conexi\u00f3n QEMU/KVM, adem\u00e1s de distintas opciones, como Nueva, Desconectar,..., encontramos la opci\u00f3n Detalles (esta opci\u00f3n tambi\u00e9n se puede elegir en el men\u00fa Editar -&gt; Detalle de la conexi\u00f3n):</p> <p></p> <p>Al elegir el detalle de la conexi\u00f3n, podemos comprobar que es una conexi\u00f3n local privilegiada. Nos conectamos a la URI <code>qemu:///system</code>. Adem\u00e1s est\u00e1 configurada para que se conecte de forma autom\u00e1tica cada vez que iniciamos la aplicaci\u00f3n:</p> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/01.-Primeros%20pasos%20con%20virt-manager/#redes-disponibles","title":"Redes disponibles","text":"<p>Tambi\u00e9n podemos gestionar las redes de esta conexi\u00f3n. Podemos ver las redes creadas, crear nuevas redes, eliminarlas, modificarlas, ... Vemos que tenemos creada la red <code>default</code> y ver sus caracter\u00edsticas (tipo NAT, configuraci\u00f3n ofrecida por un servidor  DHCP, Linux Bridge que gestiona,...). Por defecto est\u00e1 inactiva, para activarla, la seleccionamos y pulsamos sobre el bot\u00f3n \u25b6.</p> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/01.-Primeros%20pasos%20con%20virt-manager/#pools-de-almacenamiento-disponibles","title":"Pools de almacenamiento disponibles","text":"<p>Otro elemento que podemos gestionar son los Pool de almacenamiento que tenemos en la conexi\u00f3n. Recordamos que ten\u00edamos dos creados: el pool <code>default</code>, donde se guardaban las im\u00e1genes de discos, y el pool <code>iso</code>, donde almacenamos los ficheros ISO para las instalaciones de los sistemas operativos. Adem\u00e1s, podemos ver los vol\u00famenes (en este caso, los ficheros) que hay creados en cada pool.</p> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/01.-Primeros%20pasos%20con%20virt-manager/#conexion-remota-con-virt-manager","title":"Conexi\u00f3n remota con virt-manager","text":"<p>Si quisi\u00e9ramos conectarnos de forma remota a un servidor donde se est\u00e1 ejecutando libvirt, podr\u00edamos crear una nueva conexi\u00f3n: Archivo -&gt; A\u00f1adir conexi\u00f3n..., y crear una conexi\u00f3n y elegir la opci\u00f3n Conectar a anfitri\u00f3n mediante SSH:</p> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/01.-Primeros%20pasos%20con%20virt-manager/#conclusion","title":"Conclusi\u00f3n","text":"<p><code>virt-manager</code> es otra aplicaci\u00f3n que nos permite hacer conexiones a libvirt, como hacemos con la aplicaci\u00f3n <code>virsh</code> o <code>virt-install</code>. Por lo tanto, los recursos virtualizados que gestionamos con estas aplicaciones cuando nos conectamos a <code>qemu:///system</code> son los mismos. Los cambios que hagamos con una aplicaci\u00f3n se ven reflejados en cualquiera de las otras. <code>virt-manager</code> es m\u00e1s f\u00e1cil de usar, pero nos ofrece menos opciones que la aplicaci\u00f3n <code>virsh</code> o <code>virt-install</code>.</p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/02.-Creaci%C3%B3n%20de%20MV%20linux/","title":"Creaci\u00f3n de m\u00e1quinas virtuales Linux","text":"<p>Vamos a estudiar los pasos fundamentales para la creaci\u00f3n de una m\u00e1quina virtual. en este caso vamos a crear una m\u00e1quina virtual con el sistema operativo GNU/Linux Ubuntu. Observaremos que la informaci\u00f3n que vamos indicando en virt-manager es la misma que utilizamos para la creaci\u00f3n d m\u00e1quinas con la herramienta <code>virt-install</code>.</p> <p>Antes de empezar la creaci\u00f3n de la nueva m\u00e1quina, hemos copiado en el pool de almacenamiento ISO (directorio <code>~/iso</code>) una imagen ISO para la instalaci\u00f3n de Ubuntu:</p> <p></p> <p>Para crear una nueva m\u00e1quina virtual con virt-manager podemos escoger la opci\u00f3n de men\u00fa Archivo -&gt; Nueva m\u00e1quina virtual, o el bot\u00f3n del men\u00fa:</p> <p></p> <p>A continuaci\u00f3n seguimos los pasos del asistente para la creaci\u00f3n de la m\u00e1quina virtual:</p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/02.-Creaci%C3%B3n%20de%20MV%20linux/#elegir-la-fuente-de-instalacion-del-sistema-operativo","title":"Elegir la fuente de instalaci\u00f3n del sistema operativo","text":"<p>Elegimos como fuente de instalaci\u00f3n: instalaci\u00f3n local desde una imagen ISO que se montar\u00e1 en un CDRON. En este apartado tambi\u00e9n podemos escoger la arquitectura de la m\u00e1quina que vamos a utilizar.</p> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/02.-Creaci%C3%B3n%20de%20MV%20linux/#seleccionar-la-iso-de-instalacion","title":"Seleccionar la ISO de instalaci\u00f3n","text":"<p>Elegimos fichero ISO desde donde vamos a realizar la instalaci\u00f3n. Si no se detecta la variante del sistema operativo, tenemos que a\u00f1adirla manualmente escogiendo la versi\u00f3n m\u00e1s parecida a la que vamos a instalar.</p> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/02.-Creaci%C3%B3n%20de%20MV%20linux/#configuracion-de-memoria-y-de-vcpu","title":"Configuraci\u00f3n de memoria y de VCPU","text":"<p>A continuaci\u00f3n, asignamos la memoria y el n\u00famero de vCPU a la nueva m\u00e1quina que estamos creando.</p> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/02.-Creaci%C3%B3n%20de%20MV%20linux/#seleccionar-almacenamiento","title":"Seleccionar almacenamiento","text":"<p>En este paso, habilitamos el almacenamiento para la nueva m\u00e1quina, indicando el tama\u00f1o del disco.</p> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/02.-Creaci%C3%B3n%20de%20MV%20linux/#resumen-y-seleccion-de-red","title":"Resumen y selecci\u00f3n de red","text":"<p>Por \u00faltimo, aparece un resumen de las caracter\u00edsticas de la m\u00e1quina que vamos a crear. Adem\u00e1s, podemos indicar el nombre y seleccionar la red a la que queremos que se conecte (en nuestro caso, la red de tipo NAT <code>default</code>). Si la red no est\u00e1 activa, nos dar\u00e1 la opci\u00f3n de activarla.</p> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/02.-Creaci%C3%B3n%20de%20MV%20linux/#comenzamos-la-instalacion","title":"Comenzamos la instalaci\u00f3n","text":"<p>Al pulsar el bot\u00f3n Finalizar, se crea la m\u00e1quina, se inicializa y se abre la consola para que podamos empezar la instalaci\u00f3n.</p> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/03.-Gesti%C3%B3n%20de%20MV/","title":"Gesti\u00f3n de m\u00e1quinas virtuales","text":"<p>Para elegir las distintas opciones que tenemos para gestionar nuestras m\u00e1quinas, pulsamos sobre el bot\u00f3n derecho en la m\u00e1quina:</p> <p></p> <ul> <li>Ejecutar: Si la m\u00e1quina est\u00e1 parada, la inicia. Tambi\u00e9n podemos usar el bot\u00f3n 1 del men\u00fa.</li> <li>Pausa: Pausa la ejecuci\u00f3n de la m\u00e1quina virtual. Podremos reanudar la ejecuci\u00f3n con la opci\u00f3n Reanudar. Tambi\u00e9n podemos usar el bot\u00f3n 2 del men\u00fa.</li> <li>Apagar: En este men\u00fa tenemos varias opciones (todas estas opciones tambi\u00e9n se pueden elegir en el bot\u00f3n 4 del men\u00fa):<ul> <li>Reiniciar: Reinicia la m\u00e1quina.</li> <li>Apagar: Apaga la m\u00e1quina. Tambi\u00e9n podemos usar el bot\u00f3n 3 del men\u00fa.</li> <li>Forzar Reajuste: Apaga la m\u00e1quina simulando que se pulsa el bot\u00f3n reset.</li> <li>Forzar apagado: Fuerza el apagado de la m\u00e1quina.</li> <li>Guardar: Guarda el estado de la m\u00e1quina en memoria. Para recuperar la m\u00e1quina escogemos la opci\u00f3n Reanudar.</li> </ul> </li> <li>Clonar: Crea una nueva m\u00e1quina a partir de esta.</li> <li>Migrar: Nos permite trasladar la m\u00e1quina a otra m\u00e1quina que este ejecutando QEMU/KVM.</li> <li>Eliminar: Elimina la definici\u00f3n de la m\u00e1quina. Nos da la opci\u00f3n de eliminar el volumen de disco asociado.</li> <li>Abrir: Abre el \"Detalle de la m\u00e1quina\". esta opci\u00f3n tambi\u00e9n se puede escoger desde el bot\u00f3n Abrir, o desde la opci\u00f3n del men\u00fa Editar -&gt; Detalles de la m\u00e1quina virtual. Esta opci\u00f3n la estudiaremos en el siguiente punto.</li> </ul>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/04.-Detalles%20de%20las%20MV/","title":"Detalles de las m\u00e1quinas virtuales","text":"<p>Podemos acceder al detalle de una m\u00e1quina virtual de tres formas distintas: haciendo doble click sobre la m\u00e1quina, escogiendo la m\u00e1quina y pulsando el bot\u00f3n Abrir o escogiendo la opci\u00f3n del men\u00fa Editar -&gt; Detalles de la m\u00e1quina virtual.</p> <p>Vamos a abrir una ventana con las siguientes opciones:</p> <p></p> <ul> <li>Archivo: Opciones generales: ver el gestor, cerrar la ventana,...</li> <li>M\u00e1quina Virtual: Opciones para gestionar la m\u00e1quina.</li> <li>Vista: Nos permite ver las distintas vistas, controlar la ventana de la consola (pantalla completa, escalar, ...). Veamos las vistas:<ul> <li>Consola: Accedemos a una consola donde controlamos la m\u00e1quina virtual. Tambi\u00e9n se accede con el bot\u00f3n 1.</li> <li>Detalles: Obtenemos la configuraci\u00f3n de la m\u00e1quina virtual y los dispositivos hardware. Podemos quitar y a\u00f1adir nuevos dispositivos y hacer las modificaciones necesarias.Tambi\u00e9n se accede con el bot\u00f3n 2.</li> <li>Instant\u00e1neas: Ventana para gestionar las instant\u00e1neas de la m\u00e1quina virtual. Estudiaremos m\u00e1s adelante las instant\u00e1neas. Tambi\u00e9n se accede con el bot\u00f3n 3.</li> </ul> </li> <li>Enviar Tecla: Combinaci\u00f3n de teclas que podemos enviar a la m\u00e1quina virtual.</li> </ul>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/04.-Detalles%20de%20las%20MV/#vista-consola","title":"Vista Consola","text":"<p>Accedemos a una consola desde donde podemos controlar la m\u00e1quina virtual. Desde el men\u00fa vista podemos configurar el tama\u00f1o de la pantalla (pantalla completa, escalar monitor, ...). Puede ser una buena herramienta para realizar peque\u00f1as modificaciones a la m\u00e1quina, pero es recomendable utilizar distintos protocolos para el acceso y gesti\u00f3n de la m\u00e1quina virtual (SSH, VCN, RDP,...)</p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/04.-Detalles%20de%20las%20MV/#vista-detalles","title":"Vista Detalles","text":"<p>En esta vista se nos muestra la definici\u00f3n XML de la m\u00e1quina virtual de forma gr\u00e1fica. Adem\u00e1s, nos posibilita hacer cambios en la configuraci\u00f3n de la misma. Vemos la configuraci\u00f3n general de la m\u00e1quina y las caracter\u00edsticas de los dispositivos hardware que tiene configurada. Podemos quitas dispositivos y a\u00f1adir otros nuevos.</p> <p>Veamos los elementos fundamentales:</p> <ul> <li>Repaso: Nos da la informaci\u00f3n general de la m\u00e1quina virtual. </li> </ul> <p></p> <p>Adem\u00e1s, en todo momento podemos acceder a la definici\u00f3n XML:</p> <p></p> <ul> <li>CPUs: Configuraci\u00f3n de las vCPU asignadas a la m\u00e1quina. Podemos modificar este valor. Si la m\u00e1quina est\u00e1 ejecut\u00e1ndose la modificaci\u00f3n ser\u00e1 efectiva en el siguiente arranque de la m\u00e1quina.</li> </ul> <p></p> <ul> <li>Memoria: Del mismo modo, vemos la configuraci\u00f3n de asignaci\u00f3n de memoria RAM de la m\u00e1quina. Podemos modificar la memoria actual y la memoria m\u00e1xima. Del mismo modo, necesitamos reiniciar la m\u00e1quina para que tenga efecto el cambio.</li> </ul> <p></p> <ul> <li>Opciones de arranque: Podemos ver y configurar el orden de los dispositivos de arranque.</li> </ul> <p>Imagen de opciones de arranque</p> <p>A continuaci\u00f3n se nos muestra los distintos dispositivos hardware que tiene configurado la m\u00e1quina: unidades de disco, interfaces de red, teclado, rat\u00f3n, adaptador de v\u00eddeo, interfaces, ... Pudiendo hacer tambi\u00e9n, modificaciones en los mismos. Veamos algunos de ellos:</p> <ul> <li>Discos: Nos da informaci\u00f3n del disco que tiene configurada la m\u00e1quina. Es importante, como ya hemos indicado anteriormente, que el el driver sea VirtIO para obtener mayor rendimiento. Vemos que podemos a\u00f1adir a las m\u00e1quinas virtuales tantos discos como sean necesarios.</li> </ul> <p></p> <ul> <li>Interfaces de red: Obtenemos la informaci\u00f3n de las distintas interfaces de red de la m\u00e1quina. en este caso tambi\u00e9n usamos VirtIO como modelo de dispositivo. Vemos a que red est\u00e1 conectada. Si la m\u00e1quina se est\u00e1 ejecutando, podemos ver la direcci\u00f3n IP de la interfaz. Del mismo modo, los cambios ser\u00e1n efectivos tras el reinicio de la m\u00e1quina.</li> </ul> <p></p> <p>Por \u00faltimo, tenemos dos operaciones referente a los dispositivos hardware:</p> <ul> <li>Si seleccionamos uno de ellos, y pulsamos el bot\u00f3n derecho del rat\u00f3n nos da la posibilidad de Eliminar Hardware.</li> <li>Con el bot\u00f3n Agregar Hardware, tenemos la posibilidad de a\u00f1adir nuevos componentes a la configuraci\u00f3n de la m\u00e1quina. Hay que indicar que algunos dispositivos se pueden agregar \"en caliente\", con la m\u00e1quina en estado de ejecuci\u00f3n. En los pr\u00f3ximos apartados del curso usaremos est\u00e1 opci\u00f3n para a\u00f1adir nuevos componentes a nuestras m\u00e1quinas virtuales.</li> </ul> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/05.-Creaci%C3%B3n%20de%20MV%20Wndows/","title":"Creaci\u00f3n de m\u00e1quinas virtuales Windows","text":"<p>En un apartado anterior hemos visto los pasos fundamentales para la creaci\u00f3n de una m\u00e1quina virtual Linux. Para crear una m\u00e1quina virtual con un sistema operativo tipo Windows se siguen los mismos pasos, pero tenemos que tener en cuenta que Windows no tiene soporte nativo para dispositivos VirtIO. Por lo tanto, a la hora de crear una m\u00e1quina virtual Windows tendremos que a\u00f1adir los controladores de dispositivos (drivers) necesarios para que Windows identifique los dispositivos VirtIO que definamos en la m\u00e1quina virtual.</p> <p>En este caso, el proyecto Fedora proporciona controladores de dispositivos de software libre para VirtIO en Windows.</p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/05.-Creaci%C3%B3n%20de%20MV%20Wndows/#iso-de-los-controladores-de-dispositivo-virtio-para-windows","title":"ISO de los controladores de dispositivo VirtIO para Windows","text":"<p>Podemos bajar la \u00faltima versi\u00f3n de los drivers VirtIO para Windows en el siguiente enlace y copiar la ISO al pool de almacenamiento ISO, es decir, en el directorio <code>~/iso</code>. Tambi\u00e9n hemos copiado a ese directorio una ISO para la instalaci\u00f3n de Windows 10.</p> <p></p> <p>Creamos la nueva m\u00e1quina virtual Windows</p> <p>Teniendo en cuenta los siguiente:</p> <ul> <li>Elegimos una imagen ISO para instalar una versi\u00f3n de Windows y seleccionamos la variante del sistema operativo que estamos instalando.</li> <li>Configuramos la CPU y la RAM para tener recursos suficientes.</li> <li>Como estamos instalando un sistema operativo Windows, virt-manager va a configurar los dispositivos para que sean compatibles con el sistema operativo. En concreto, el driver del disco y de la tarjeta de red no ser\u00e1n VirtIO, con lo que no conseguiremos el rendimiento adecuado. Por lo tanto, antes de realizar la instalaci\u00f3n vamos a cambiar el tipo de driver de estos dispositivos, escogiendo VirtIO para obtener el m\u00e1ximo de rendimiento. </li> </ul> <p>En la pantalla final del asistente de creaci\u00f3n de la m\u00e1quina virtual, escogeremos la opci\u00f3n Personalizar la configuraci\u00f3n antes de instalar:</p> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/05.-Creaci%C3%B3n%20de%20MV%20Wndows/#elegimos-dispositivos-virtio","title":"Elegimos dispositivos VirtIO","text":"<p>El primer cambio ser\u00e1 elegir el driver VirtIO para el disco. Como observamos se ha configurado con el driver SATA, que ser\u00e1 compatible con Windows, pero al ser un dispositivo emulado, nos dar\u00e1 menos rendimiento. Escogemos la opci\u00f3n VirtIO, y pulsamos en el bot\u00f3n Aplicar:</p> <p></p> <p>A continuaci\u00f3n, cambiamos el driver de la tarjeta de red. Del mismo modo, observamos que ha escogido un modelo e1000e, compatible con Windows, pero del mismo modo nos ofrece menos rendimiento que la opci\u00f3n VirtIO. cuando hagamos el cambio, volvemos a pulsar sobre el bot\u00f3n Aplicar. Nota: Como hemos comentado Windows no es compatible con este modelo de tarjeta de red, por lo que durante la instalaci\u00f3n no tendremos conexi\u00f3n a internet. Si necesitamos tener conexi\u00f3n, podr\u00edamos dejar el modelo escogido por defecto, y posteriormente modificar la configuraci\u00f3n de la tarjeta.</p> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/05.-Creaci%C3%B3n%20de%20MV%20Wndows/#anadimos-un-cdrom-con-los-drivers-virtio","title":"A\u00f1adimos un CDROM con los drivers VirtIO","text":"<p>Antes de iniciar la m\u00e1quina, le a\u00f1adimos un CD-ROM con la imagen ISO de los drivers VirtIO. Para ello, pulsamos el bot\u00f3n Agregar Hardware, y a\u00f1adimos un nuevo dispositivo de almacenamiento:</p> <p></p> <p>Adem\u00e1s, nos tenemos que asegurar que en el orden de arranque el CDROM donde hemos montado la ISO de Windows est\u00e9 por delante que el CDROM con los drivers VirtIO, y sea la primera opci\u00f3n. Una vez terminado pulsamos el bot\u00f3n Aplicar y el bot\u00f3n Iniciar la instalaci\u00f3n para comenzar la instalaci\u00f3n.</p> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/05.-Creaci%C3%B3n%20de%20MV%20Wndows/#comenzamos-la-instalacion","title":"Comenzamos la instalaci\u00f3n","text":"<p>Iniciamos la m\u00e1quina, accedemos a la consola y comenzamos la instalaci\u00f3n, hasta que llegamos a la pantalla donde tenemos que escoger el disco duro donde vamos a realizar la instalaci\u00f3n.</p> <p></p> <p>Como vemos no se puede detectar el disco duro, ya que Windows no puede reconocer inicialmente el controlador VirtIO. Vamos a cargar los controladores de dispositivo VirtIO que necesitamos del CDROM que hemos montado:</p> <p>Elegimos la opci\u00f3n Cargar contr., le damos a Examinar y elegimos del CDROM donde tenemos los drivers VirtIO la carpeta de nuestra arquitectura (amd64) y la versi\u00f3n de Windows.</p> <p></p> <p>Y ya podemos continuar con la instalaci\u00f3n de Windows porque ya detecta el disco duro:</p> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/05.-Creaci%C3%B3n%20de%20MV%20Wndows/#configuracion-de-la-red","title":"Configuraci\u00f3n de la red","text":"<p>Como indic\u00e1bamos anteriormente, tambi\u00e9n hemos escogido el controlador VirtIO para la tarjeta de red. Una vez realizada la configuraci\u00f3n tendremos que instalar los drivers adecuados para que funcione la tarjeta de red. Para ello, actualizamos el controlador del dispositivo Controladora Ethernet en el Administrador de dispositivos:</p> <p></p> <p>Y escogemos la carpeta del CDROM donde hemos montado los drivers VirtIO: <code>NetKVM\\&lt;carpeta con el nombre de tu versi\u00f3n de windows&gt;\\amd64</code>:</p> <p></p>"},{"location":"01.-KVM/04.-Creaci%C3%B3n%20de%20MV%20con%20virt-manager/05.-Creaci%C3%B3n%20de%20MV%20Wndows/#creacion-de-una-maquina-virtual-windos-con-virt-install","title":"Creaci\u00f3n de una m\u00e1quina virtual Windos con virt-install","text":"<p>Si queremos crear con <code>virt-install</code> una m\u00e1quina virtual para la instalaci\u00f3n de Windows con la misma configuraci\u00f3n que hemos visto anteriormente, podemos ejecutar la siguiente instrucci\u00f3n:</p> <pre><code>virt-install --connect qemu:///system \\\n             --virt-type kvm \\\n             --name prueba4 \\\n             --cdrom ~/iso/Win10_21H2_Spanish_x64.iso \\\n             --os-variant win10 \\\n             --disk size=40,bus=virtio \\\n             --disk ~/iso/virtio-win-0.1.217.iso,device=cdrom \\\n             --network=default,model=virtio \\\n             --memory 2048 \\\n             --vcpus 2\n</code></pre> <p>Tenemos que tener en cuanta algunas cosas nuevas que hemos introducido:</p> <ul> <li><code>--disk size=40,bus=virtio</code>: En la declaraci\u00f3n del disco indicamos el controlador VirtIO.</li> <li><code>--disk ~/iso/virtio-win-0.1.217.iso,device=cdrom</code>: El segundo CDROM se indica con el par\u00e1metro <code>disk</code> indicando <code>device=cdrom</code>.</li> <li><code>--network=default,model=virtio</code>: De la misma manera, indicamos el modelo de tarjeta de red como VirtIO.</li> </ul>"},{"location":"01.-KVM/05.-Almacenamiento/01.-Introducci%C3%B3n%20al%20almacenamiento/","title":"01.-Introducci\u00f3n al almacenamiento","text":"<p>El almacenamiento en disco es una parte esencial en los sistemas inform\u00e1ticos, ya que permite guardar de forma persistente grandes cantidades de informaci\u00f3n.</p> <p>Veamos distintas caracter\u00edsticas del almacenamiento en discos:</p>"},{"location":"01.-KVM/05.-Almacenamiento/01.-Introducci%C3%B3n%20al%20almacenamiento/#sistemas-de-ficheros-vs-dispositivos-de-bloques","title":"Sistemas de Ficheros vs. Dispositivos de Bloques","text":"<ul> <li>Dispositivos de Bloques: <ul> <li>Son unidades (f\u00edsicas o l\u00f3gicas) de almacenamiento que gestionan los datos en bloques de tama\u00f1o fijo. </li> <li>Estos dispositivos permiten el acceso directo a cualquier bloque sin necesidad de leer todos los anteriores, lo que facilita la lectura y escritura aleatoria de datos. </li> <li>Estos dispositivos se pueden particionar, formatear, montar,...</li> <li>Ejemplos: Discos, particiones, vol\u00famenes l\u00f3gicos, ficheros llamados im\u00e1genes de discos (osi, img, raw, qcow2,...),...</li> </ul> </li> <li>Sistemas de ficheros:<ul> <li>El formateo de un dispositivo de bloque nos permite estructurarlo de forma l\u00f3gica (ficheros y directorios). Ejemplos: ext4, xfs, ntfs, btrfs, zfs, ...</li> <li>Proporcionan una interfaz que permite a los usuarios y aplicaciones almacenar, organizar y acceder a los archivos y directorios de manera sencilla.</li> </ul> </li> </ul>"},{"location":"01.-KVM/05.-Almacenamiento/01.-Introducci%C3%B3n%20al%20almacenamiento/#fuente-del-almacenamiento","title":"Fuente del almacenamiento","text":"<ul> <li>Si el disco est\u00e1 conectado directamente en el ordenador se denomina DAS (Direct Attached Storage).</li> <li>En otras ocasiones el almacenamiento se encuentra en un servidor y se comparte a un cliente. En este caso se denomina almacenamiento compartido, y tenemos dos alternativas:<ul> <li> <ul> <li>NAS (Network Attached Storage): Se comparte por red el almacenamiento en forma de sistema de ficheros. Ejemplos: nfs, samba, glusterfs,...</li> </ul> </li> <li>SAN (Storage Area Network): En una red de almacenamiento se comparte dispositivos de bloques. Ejemplo: iSCSI, FiberChanel,...</li> </ul> </li> </ul> <p>Dependiendo de la tecnolog\u00eda usada para realizar el almacenamiento compartido tendremos varias caracter\u00edsticas:</p> <ul> <li>NFS es un sistema de almacenamiento compartido de tipo NAS, que permite a varios clientes leer y escribir en los ficheros de un mismo directorio. Se pueden tener problemas  de corrupci\u00f3n de datos si dos clientes tratan al mismo tiempo de cambiar un mismo fichero.</li> <li>iSCSI es un sistema de almacenamiento compartido de tipo SAN, que nos permite compartir un dispositivo de bloque entre varios clientes. Si es uno s\u00f3lo de los clientes el que escribe y los dem\u00e1s leen, no hay ning\u00fan problema. Pero si queremos que todos los clientes tengan la posibilidad de leer y escribir, podemos tener problemas de corrupci\u00f3n. En estos casos es necesario usar sistemas de archivos de cl\u00fasteres que a\u00f1aden mecanismos de bloqueo para que no se pueda cambiar al mismo tiempo un fichero. Por ejemplo: cfs2, ocfs2, glusterFS, Ceph, ...</li> </ul>"},{"location":"01.-KVM/05.-Almacenamiento/01.-Introducci%C3%B3n%20al%20almacenamiento/#snapshots-instantaneas","title":"Snapshots (Instant\u00e1neas)","text":"<p>Los snapshots son una caracter\u00edstica avanzada de los sistemas de almacenamiento que permiten capturar el estado completo de un sistema de ficheros en un momento dado. Los snapshots son muy \u00fatiles para:</p> <ul> <li>Recuperaci\u00f3n ante fallos: Si se produce un fallo en el sistema, se puede restaurar el sistema de ficheros al estado en que se encontraba en el momento en que se tom\u00f3 la instant\u00e1nea.</li> <li>Pruebas y desarrollo: Los snapshots permiten hacer pruebas sin riesgo de da\u00f1ar los datos originales, ya que se puede volver a un estado anterior de forma r\u00e1pida.</li> </ul>"},{"location":"01.-KVM/05.-Almacenamiento/01.-Introducci%C3%B3n%20al%20almacenamiento/#aprovisionamiento-ligero-thin-provisioning","title":"Aprovisionamiento Ligero (Thin Provisioning)","text":"<p>El aprovisionamiento ligero es una t\u00e9cnica utilizada en sistemas de almacenamiento para optimizar la utilizaci\u00f3n del espacio disponible. En lugar de asignar todo el espacio de almacenamiento a una unidad o volumen desde el principio (lo que se conoce como aprovisionamiento grueso o thick provisioning), el aprovisionamiento ligero asigna espacio seg\u00fan sea necesario.</p> <p>Por ejemplo, podemos tener un dispositivo de almacenamiento de 30 GB (virtuales), pero que solo ocupa en disco (almacenamiento real) los datos que va guardando. Ejemplos: Im\u00e1genes de disco qcow2, thin-LVM,...</p>"},{"location":"01.-KVM/05.-Almacenamiento/02.-Introducci%C3%B3n%20al%20almacenamiento%20en%20QEMU%E2%81%84KVM%20%2B%20libvirt/","title":"02.-Introducci\u00f3n al almacenamiento en QEMU\u2044KVM + libvirt","text":"<p>Libvirt proporciona la gesti\u00f3n del almacenamiento a trav\u00e9s de pools de almacenamiento y vol\u00famenes.</p> <ul> <li>Pools de Almacenamiento: Es una fuente de almacenamiento, una cantidad de almacenamiento que el administrador del host ha configurado para su uso por las m\u00e1quinas virtuales.</li> <li>Vol\u00famenes: Los pools de almacenamiento se dividen en vol\u00famenes. Cada uno de estos vol\u00famenes lo utilizaran las m\u00e1quinas virtuales como discos (dispositivos de bloques).</li> </ul>"},{"location":"01.-KVM/05.-Almacenamiento/02.-Introducci%C3%B3n%20al%20almacenamiento%20en%20QEMU%E2%81%84KVM%20%2B%20libvirt/#tipos-de-pools-de-almacenamiento","title":"Tipos de Pools de Almacenamiento","text":"<p>QEMU/KVM + libvirt puede trabajar con distintas fuentes y tecnolog\u00edas de almacenamiento que nos ofrecer\u00e1n distintas caracter\u00edsticas:</p> <ul> <li> <p>dir: Nos ofrece un directorio del host (por lo tanto, nos ofrece un sistema de archivo). Este tipo no nos ofrece la caracter\u00edstica de almacenamiento compartido. Los discos de las m\u00e1quinas virtuales se guardaran en ficheros de imagen de disco. Tenemos distintos formatos de ficheros de im\u00e1genes:</p> <ul> <li>raw: el formato raw es una imagen binaria sencilla de la imagen del disco. Se ocupa todo el espacio que hayamos indicado al crearla. El acceso es m\u00e1s eficiente. No soporta ni snapshots ni aprovisionamiento ligero.</li> <li>qcow2: formato QEMU copy-on-write. Al crearse s\u00f3lo se ocupa el espacio que se est\u00e1 ocupando con los datos (aprovisionamiento ligero), el fichero ir\u00e1 creciendo cuando escribamos en el \u00e9l. Acepta instant\u00e1neas o snapshots. Es menos eficiente en cuanto al acceso.</li> <li>vdi, vmdk,...: formatos de otros sistemas de virtualizaci\u00f3n.</li> </ul> <p>En un Pool de Almacenamiento de tipo dir, los vol\u00famenes son ficheros de im\u00e1genes de disco. Los Pools de Almacenamiento con lo que hemos trabajado hasta ahora (<code>default</code> y <code>iso</code>) son de este tipo.</p> </li> <li> <p>logical: En este caso, utilizamos LVM (Logical Volume Manager). El Pool de Almacenamiento controlar\u00e1 un Grupo de Vol\u00famenes, y los vol\u00famenes (los discos de las m\u00e1quinas virtuales) ser\u00e1n vol\u00famenes l\u00f3gicos que se crear\u00e1n en el grupo de vol\u00famenes. Este tipo de almacenamiento no ofrece almacenamiento compartido.</p> </li> <li>netfs: Este tipo de Pool de Almacenamiento montar\u00e1 un directorio desde un servidor NAS (nfs, glusterfs, cifs,...). Por lo tanto obtendremos la caracter\u00edstica de compartici\u00f3n y de migraci\u00f3n en vivo. Los vol\u00famenes ser\u00e1n ficheros de im\u00e1genes de disco.</li> <li>iSCSI: Este tipo de Pool de Almacenamiento montar\u00e1 un disco desde un servidor SAN de tipo iSCSI. Obtendremos la caracter\u00edstica de almacenamiento compartido a nivel de disco con las consideraciones que vimos en el punto anterior.</li> <li>Muchos m\u00e1s...</li> </ul>"},{"location":"01.-KVM/05.-Almacenamiento/02.-Introducci%C3%B3n%20al%20almacenamiento%20en%20QEMU%E2%81%84KVM%20%2B%20libvirt/#gestion-de-volumenes-de-almacenamiento","title":"Gesti\u00f3n de vol\u00famenes de almacenamiento","text":"<p>Los vol\u00famenes son los medios de medios de almacenamiento que utilizar\u00e1n las m\u00e1quinas virtuales. Un Pool de Almacenamiento estar\u00e1 formado por vol\u00famenes. Dependiendo del tipo del pool, el volumen corresponder\u00e1 a un medio de almacenamiento determinado. Veamos un ejemplo:</p> <ul> <li>Si el tipo del pool es dir, es decir, un directorio del sistema de fichero del host, el volumen corresponde a un fichero (el fichero que contiene la imagen del disco).</li> <li>Si el tipo del pool es logical, es decir, gestiona un grupo de vol\u00famenes LVM, el volumen corresponder\u00e1 a un volumen l\u00f3gico LVM.</li> </ul> <p>Por lo tanto tenemos dos enfoques para crear los vol\u00famenes:</p> <ul> <li>Usar la API de libvirt, es decir, usar herramientas como <code>virsh</code> o <code>virt-manager</code> para gestionar los vol\u00famenes. En este caso, si creamos un volumen en un pool de tipo dir, estar\u00edamos creando un fichero de imagen de disco. Del mismo modo, si lo creamos en un pool de tipo logical estar\u00edamos creando un volumen l\u00f3gico LVM.</li> <li>Utilizar herramientas espec\u00edficas para crear los medios de almacenamiento y posteriormente refrescar el pool para que a\u00f1ada el nuevo volumen. Ejemplo: podemos usar la herramienta <code>qemu-img</code> para la creaci\u00f3n de un fichero de imagen de disco y posteriormente actualizaremos el pool de tipo dir para a\u00f1adir el nuevo volumen que corresponde al fichero que hemos creado. Otro ejemplo: usar la l\u00ednea de comandos de LVM, creando un volumen l\u00f3gico con el comando <code>lvcreate</code> y posteriormente actualizamos el pool de tipo logical para a\u00f1adir el nuevo volumen.</li> </ul> <p>Si estamos trabajando localmente en un servidor donde tenemos QEMU/KVM + libvirt instalado, no hay muchas diferencias de usar una y otra opci\u00f3n. El uso de la API de libvirt puede ser m\u00e1s interesante si estamos conectados a la API de libvirt de forma remota, ya que al gestionar los vol\u00famenes estar\u00edamos gestionando los recursos de almacenamiento (ficheros, vol\u00famenes l\u00f3gicos,...) sin necesidad de acceder al servidor y crearlos con herramientas espec\u00edficas.</p>"},{"location":"01.-KVM/05.-Almacenamiento/02.-Introducci%C3%B3n%20al%20almacenamiento%20en%20QEMU%E2%81%84KVM%20%2B%20libvirt/#conclusiones","title":"Conclusiones","text":"<p>Tenemos la posibilidad de crear distintos tipos de Pools de Almacenamiento, que nos ofrecen distintas caracter\u00edsticas. Podemos ver los distintos tipos al crear un Pool desde <code>virt-manager</code>:</p> <p></p> <p>En este curso vamos a trabajar con los Pool de Almacenamiento de tipo dir. Si quieres profundizar en las caracter\u00edsticas de los distintos tipos de almacenamiento puedes ver la documentaci\u00f3n oficial: Storage Management.</p>"},{"location":"01.-KVM/05.-Almacenamiento/03.-Gesti%C3%B3n%20de%20Pools%20de%20Almacenamiento/","title":"03.-Gesti\u00f3n de Pools de Almacenamiento","text":""},{"location":"01.-KVM/05.-Almacenamiento/03.-Gesti%C3%B3n%20de%20Pools%20de%20Almacenamiento/#gestion-de-pools-de-almacenamiento-con-virsh","title":"Gesti\u00f3n de Pools de Almacenamiento con virsh","text":"<p>Como hemos visto durante este curso tenemos a nuestra disposici\u00f3n dos Pool de Almacenamiento, para ver los pools con la herramienta <code>virsh</code>, ejecutamos la siguiente instrucci\u00f3n:</p> <pre><code>virsh -c qemu:///system pool-list \n Nombre    Estado   Inicio autom\u00e1tico\n---------------------------------------\n default   activo   si\n iso       activo   si\n</code></pre> <p>Recuerda que el pool por defecto donde se guardan las im\u00e1genes de disco, es <code>default</code>. Podemos obtener informaci\u00f3n de ese pool con la instrucci\u00f3n:</p> <pre><code>virsh -c qemu:///system pool-info default \nNombre:         default\nUUID:           0a03e05b-8844-4029-8216-430fc289fe8f\nEstado:         ejecutando\nPersistente:    si\nAutoinicio:     si\nCapacidad:      87,09 GiB\nUbicaci\u00f3n:     36,61 GiB\nDisponible:     50,48 GiB\n</code></pre> <p>Al igual que las m\u00e1quinas virtuales, los Pools de Almacenamiento se definen por un documento XML. Para ver la definici\u00f3n XML del pool <code>default</code> podemos ejecutar <code>virsh -c qemu:///system pool-dumpxml default</code>. A partir de un fichero XML con la definici\u00f3n de un nuevo pool, podr\u00edamos crearlo con el subcomando <code>virsh pool-define</code>. </p> <p>Nota: Para profundizar en el formato XML que define los Pools de Almacenamiento puedes consultar la documentaci\u00f3n oficial: Storage pool and volume XML format.</p> <p>Sin embargo, vamos a usar otro comando que nos permite indicar la informaci\u00f3n del nuevo pool por medio de par\u00e1metros. Vamos a crear un nuevo pool que vamos a llamar <code>mv-images</code>, de tipo dir y cuyo directorio ser\u00e1 <code>/srv/images</code>. Supongamos que hemos a\u00f1adido m\u00e1s almacenamiento al host y que hemos montado el disco en el directorio <code>/srv/images</code> y queremos guardar las im\u00e1genes de disco en esa nueva localizaci\u00f3n. Para crear el nuevo pool, de forma persistente ejecutamos:</p> <pre><code>virsh -c qemu:///system pool-define-as vm-images dir --target /srv/images\nEl grupo vm-images ha sido definido\n</code></pre> <p>Nota: Si utilizamos <code>pool-create</code> o <code>pool-create-as</code>, el pool se crea temporalmente, no ser\u00e1 persistente y despu\u00e9s de un reinicio del host no existir\u00e1.</p> <p>A continuaci\u00f3n creamos el directorio indicado, con la instrucci\u00f3n:</p> <pre><code>virsh -c qemu:///system pool-build vm-images \nEl pool vm-images ha sido compilado\n</code></pre> <p>Ahora debemos iniciar el pool:</p> <pre><code>virsh -c qemu:///system pool-start vm-images \nSe ha iniciado el grupo vm-images\n</code></pre> <p>Y si lo deseamos lo podemos auto iniciar, para que en el reinicio del host vuelva a estar activo:</p> <pre><code>virsh -c qemu:///system pool-autostart vm-images \nSe ha iniciado el grupo vm-images\n</code></pre> <p>Finalmente vemos la lista de pool y pedimos informaci\u00f3n del nuevo pool:</p> <pre><code>virsh -c qemu:///system pool-list\n Nombre      Estado   Inicio autom\u00e1tico\n-----------------------------------------\n default     activo   si\n iso         activo   si\n vm-images   activo   si\n\nvirsh -c qemu:///system pool-info vm-images \nNombre:         vm-images\nUUID:           a9eb290a-9973-47ea-b616-0907a5df8ea2\nEstado:         ejecutando\nPersistente:    si\nAutoinicio:     si\n...\n</code></pre> <p>Ya podemos usar este pool de almacenamiento para guardar ficheros de im\u00e1genes de disco. Si en alg\u00fan momento queremos eliminarlo, es recomendable pararlo:</p> <pre><code>virsh -c qemu:///system pool-destroy vm-images \nEl grupo vm-images ha sido destruid\n</code></pre> <p>A continuaci\u00f3n, opcionalmente, podemos borrar el directorio creado:</p> <pre><code>virsh -c qemu:///system pool-delete vm-images \nEl grupo vm-images ha sido eliminado\n</code></pre> <p>Y por \u00faltimo lo eliminamos:</p> <pre><code>virsh -c qemu:///system pool-undefine vm-images \nSe ha quitado la definici\u00f3n del grupo vm-images\n</code></pre>"},{"location":"01.-KVM/05.-Almacenamiento/03.-Gesti%C3%B3n%20de%20Pools%20de%20Almacenamiento/#gestion-de-pools-de-almacenamiento-con-virt-manager","title":"Gesti\u00f3n de Pools de Almacenamiento con virt-manager","text":"<p>Desde la pesta\u00f1a Almacenamiento de los Detalles de la conexi\u00f3n podemos ver los pools que tenemos creados y podemos gestionarlos:</p> <p></p> <p>Tenemos las siguientes opciones:</p> <ul> <li>Bot\u00f3n 1: A\u00f1adir un nuevo pool.</li> <li>Bot\u00f3n 2: Iniciar el pool seleccionado.</li> <li>Bot\u00f3n 3: Parar el pool seleccionado.</li> <li>Bot\u00f3n 4: Eliminar el pool seleccionado.</li> </ul> <p>Si creamos un nuevo pool, vemos la siguiente pantalla donde indicamos el nombre, el tipo y en el caso del tipo dir, el directorio:</p> <p></p> <p>Una vez creado, observamos que est\u00e1 iniciado y que tiene marcada como activa la propiedad de autoiniciar:</p> <p></p> <p>Por \u00faltimo, recordar que desde <code>virt-manager</code> podemos ver la definici\u00f3n XML de los recursos con los que trabajamos:</p> <p></p>"},{"location":"01.-KVM/05.-Almacenamiento/04.-Gesti%C3%B3n%20de%20vol%C3%BAmenes%20de%20almacenamiento%20con%20libvirt/","title":"04.-Gesti\u00f3n de vol\u00famenes de almacenamiento con libvirt","text":"<p>En este apartado vamos a estudiar la gesti\u00f3n de vol\u00famenes de almacenamiento usando la API de libvirt, por lo tanto, utilizando herramientas como <code>virsh</code> o <code>virt-manager</code>. </p> <p>Vamos a trabajar con los Pool de Almacenamiento que hemos creado que son de tipo dir, por lo tanto los vol\u00famenes corresponden a ficheros de im\u00e1genes de disco. Para estos ejemplos, utilizaremos el formato de imagen qcow2.</p>"},{"location":"01.-KVM/05.-Almacenamiento/04.-Gesti%C3%B3n%20de%20vol%C3%BAmenes%20de%20almacenamiento%20con%20libvirt/#gestion-de-volumenes-de-almacenamiento-con-virsh","title":"Gesti\u00f3n de vol\u00famenes de almacenamiento con virsh","text":"<p>Para obtener los vol\u00famenes de un determinado pool (por ejemplo el pool <code>default</code>), ejecutamos:</p> <pre><code>virsh -c qemu:///system vol-list default\n Nombre            Ruta\n------------------------------------------------------------\n prueba1.qcow2   /var/lib/libvirt/images/prueba1.qcow2\n prueba2.qcow2   /var/lib/libvirt/images/prueba2.qcow2\n win10.qcow2     /var/lib/libvirt/images/win10.qcow2\n</code></pre> <p>Podemos comprobar que los vol\u00famenes listados se corresponden con ficheros que se encuentran en el directorio del pool <code>default</code> (<code>/var/lib/libvirt/images</code>).</p> <p>Al estar utilizando el formato de imagen <code>qcow2</code>, obtenemos la caracter\u00edstica de aprovisionamiento ligero, el fichero tiene un tama\u00f1o virtual (el que hemos indicado en su creaci\u00f3n y el que ver\u00e1 la m\u00e1quina virtual que lo utilice) y el espacio ocupado en el disco del host (que ir\u00e1 creciendo conforme vayamos guardando informaci\u00f3n en la imagen). Podemos ver esta caracter\u00edstica ejecutando la siguiente instrucci\u00f3n:</p> <pre><code>virsh -c qemu:///system vol-list default --details\n Nombre            Ruta                                      Tipo      Capacidad   Alojamiento\n------------------------------------------------------------------------------------------------\n prueba1.qcow2   /var/lib/libvirt/images/prueba1.qcow2   archivo   10,00 GiB   2,06 GiB\n prueba2.qcow2   /var/lib/libvirt/images/prueba2.qcow2   archivo   20,00 GiB   9,99 GiB\n win10.qcow2     /var/lib/libvirt/images/win10.qcow2     archivo   40,00 GiB   10,06 GiB\n\n</code></pre> <p>Podemos obtener la informaci\u00f3n de un determinado volumen de un pool, ejecutando:</p> <pre><code>virsh -c qemu:///system vol-info prueba1.qcow2 default\nNombre:         prueba1.qcow2\nTipo:           archivo\nCapacidad:      10,00 GiB\nUbicaci\u00f3n:     2,06 GiB\n</code></pre> <p>De la misma forma que los pools, los vol\u00famenes est\u00e1n definidos en libvirt con el formato XML. Para ver la definici\u00f3n XML del volumen <code>vol.qcow2</code> del pool <code>default</code>, podemos ejecutar <code>virsh -c qemu:///system vol-dumpxml vol.qcow2 default</code>. A partir de un fichero XML con la definici\u00f3n de un nuevo volumen, podr\u00edamos crearlo con el comando <code>virsh vol-create</code>. Nota: En este caso no existe el comandos <code>virsh vol-define</code>, ya que los vol\u00famenes no se pueden crear temporalmente.</p> <p>Nota: Para profundizar en el formato XML que define los vol\u00famenes puedes consultar la documentaci\u00f3n oficial: Storage pool and volume XML format.</p> <p>Sin embargo, vamos a usar otro comando que nos permite indicar la informaci\u00f3n del nuevo volumen por medio de par\u00e1metros. Vamos a crear un nuevo volumen en el pool <code>default</code>, cuyo nombre ser\u00e1 <code>vol1.qcow2</code>, formato <code>qcow2</code> y tama\u00f1o de 10GB:</p> <pre><code>virsh -c qemu:///system vol-create-as default vol1.qcow2 --format qcow2 10G \nSe ha creado el volumen vol1.qcow2\n</code></pre> <p>Podemos comprobar que se ha creado un nuevo fichero de imagen:</p> <pre><code>sudo ls -l /var/lib/libvirt/images/\n...\n-rw------- 1 root         root              196768 may 26 09:24 vol1.qcow2\n...\n</code></pre> <p>Tambi\u00e9n podemos volver a ejecutar <code>virsh -c qemu:///system vol-list default</code> para comprobar que se ha creado el volumen.</p> <p>Para borrar un volumen, ejecutamos:</p> <pre><code>virsh -c qemu:///system vol-delete vol1.qcow2 default\nSe ha eliminando el volumen vol1.qcow2\n</code></pre> <p>Tenemos a nuestra disposici\u00f3n m\u00e1s operaciones sobre los vol\u00famenes, estudiaremos algunas de ellas en apartados posteriores: <code>vol-clone</code>: para clonar el volumen, <code>vol-resize</code>: para redimensionar, <code>vol-download</code>: para descargar el volumen en un fichero, <code>vol-upload</code>: para cargar informaci\u00f3n a un volumen desde un fichero,...</p> <p>Nota: Hay que recordar que todas estas operaciones se realizan sobre vol\u00famenes, y por tanto el medio de almacenamiento que gestionan depender\u00e1n del tipo del pool con el que estemos trabajando. De esta forma, un <code>vol-create-as</code> en un pool de tipo logical crear\u00eda un volumen l\u00f3gico LVM.</p>"},{"location":"01.-KVM/05.-Almacenamiento/04.-Gesti%C3%B3n%20de%20vol%C3%BAmenes%20de%20almacenamiento%20con%20libvirt/#gestion-de-volumenes-de-almacenamiento-con-virt-manager","title":"Gesti\u00f3n de vol\u00famenes de almacenamiento con virt-manager","text":"<p>Desde la pesta\u00f1a Almacenamiento de los Detalles de la conexi\u00f3n podemos ver los pools y los vol\u00famenes que tenemos creados y podemos gestionarlos:</p> <p></p> <p>Tenemos las siguientes opciones relacionadas con los vol\u00famenes:</p> <ul> <li>Bot\u00f3n 1: A\u00f1adir un nuevo volumen en el pool seleccionado.</li> <li>Bot\u00f3n 2: Refrescar el pool seleccionado. Actualiza el contenido del pool para incluir los vol\u00famenes que se han creado o modificado con herramientas espec\u00edficas.</li> <li>Bot\u00f3n 3: Eliminar el volumen seleccionado.</li> </ul> <p>Si creamos un nuevo volumen, vemos la siguiente pantalla donde indicamos la siguiente informaci\u00f3n (la informaci\u00f3n solicitada depender\u00e1 del tipo de pool con el que estemos trabajando):</p> <ul> <li>El nombre del volumen.</li> <li>El formato: qcow2 o raw.</li> <li>Backing store: Nos proporciona la caracter\u00edstica de crear vol\u00famenes a partir de un volumen base o imagen base. Lo estudiaremos m\u00e1s adelante en el curso.</li> <li>Capacidad: Indicamos el tama\u00f1o del volumen. Por defecto, si usamos el formato qcow2 obtendremos la caracter\u00edstica de aprovisionamiento ligero, el tama\u00f1o indicado ser\u00e1 el que ve la m\u00e1quina virtual, pero no lo que se ocupa realmente en el disco del host. Si elegimos la opci\u00f3n Allocate entire volume now, se perder\u00e1 esa caracter\u00edstica y se ocupara el disco la capacidad total elegida.</li> </ul> <p></p>"},{"location":"01.-KVM/05.-Almacenamiento/05.-Gesti%C3%B3n%20de%20vol%C3%BAmenes%20de%20almacenamiento%20con%20herramientas%20espec%C3%ADficas/","title":"05.-Gesti\u00f3n de vol\u00famenes de almacenamiento con herramientas espec\u00edficas","text":"<p>En este apartado vamos a gestionar los vol\u00famenes con herramienta especificas. Es decir, si estamos trabajando con un pool de tipo dir y con vol\u00famenes que corresponde a ficheros de im\u00e1genes de disco, vamos a trabajar con la herramienta <code>qemu-img</code>. Esta potente herramienta nos permite la gesti\u00f3n completa de los ficheros de im\u00e1genes de disco.</p>"},{"location":"01.-KVM/05.-Almacenamiento/05.-Gesti%C3%B3n%20de%20vol%C3%BAmenes%20de%20almacenamiento%20con%20herramientas%20espec%C3%ADficas/#gestion-de-imagenes-de-disco-con-qemu-img","title":"Gesti\u00f3n de im\u00e1genes de disco con qemu-img","text":"<p>La herramienta <code>qemu-img</code> es una utilidad para gestionar ficheros de imagen de disco. Puedes profundizar en el uso de esta herramienta consultando la documentaci\u00f3n oficial: QEMU disk image utility.</p> <p>Vamos a crear un nuevo fichero de imagen llamado <code>vol2.qcow2</code>, con el formato <code>qcow2</code>, con un tama\u00f1o de 2GB, en el directorio <code>/srv/images</code>, correspondiente al pool <code>vm-images</code>, que creamos en un apartado anterior (si quisi\u00e9ramos trabajar con el pool <code>default</code> trabajar\u00edamos en el directorio <code>/var/lib/libvirt/images</code>).</p> <pre><code>cd /srv/images/\nqemu-img create -f qcow2 vol2.qcow2 2G\nFormatting 'vol2.qcow2', fmt=qcow2 cluster_size=65536 extended_l2=off compression_type=zlib size=2147483648 lazy_refcounts=off refcount_bits=16\n\n</code></pre> <p>Podemos obtener informaci\u00f3n de la imagen que hemos creado, ejecutando en el mismo directorio:</p> <pre><code>qemu-img info vol2.qcow2\nimage: vol2.qcow2\nfile format: qcow2\nvirtual size: 2 GiB (2147483648 bytes)\ndisk size: 196 KiB\ncluster_size: 65536\nFormat specific information:\n    compat: 1.1\n    compression type: zlib\n    lazy refcounts: false\n    refcount bits: 16\n    corrupt: false\n    extended l2: false\n</code></pre> <p>La creaci\u00f3n del fichero de imagen, no conlleva de forma autom\u00e1tica la creaci\u00f3n del volumen en el pool de almacenamiento. Si vemos la lista de vol\u00famenes en el pool <code>vm-images</code> comprobamos que no se ha creado:</p> <pre><code>virsh -c qemu:///system vol-list vm-images\n Nombre            Ruta\n------------------------------------------------------------\n</code></pre> <p>Para que se cree un nuevo volumen a partir del fichero que hemos creado, necesitamos refrescar el pool, para ello:</p> <pre><code>virsh -c qemu:///system pool-refresh vm-images\nEl grupo vm-images ha sido actualizado\n</code></pre> <p>Y comprobamos que ya tenemos el volumen creado ejecutando: <code>virsh -c qemu:///system vol-list vm-images</code>.</p> <p>Para refrescar un pool desde <code>virt-manager</code> usamos el siguiente bot\u00f3n:</p> <p></p> <p>La herramienta <code>qemu-img</code> es muy potente y nos permite realizar muchas operaciones: redimensionar el fichero de imagen, convertir entre formatos de im\u00e1genes, crear im\u00e1genes a a partir de im\u00e1genes base, crear instant\u00e1neas de im\u00e1genes, ... Utilizaremos algunas de estas funciones en apartados posteriores del curso.</p> <p>Nota: Si estuvi\u00e9ramos trabajando con otro tipo de Pool de Almacenamiento, tendr\u00e1imos que usar herramientas especificar para gestionar los medios de almacenamientos adecuados. Por ejemplo, si estuvi\u00e9ramos trabajando con un pool de tipo logical, usar\u00edamos las herramientas de comando de LVM para crear y gestionar los vol\u00famenes l\u00f3gicos que se corresponder\u00edan con los vol\u00famenes de este tipo de pool.</p>"},{"location":"01.-KVM/05.-Almacenamiento/06.-Trabajar%20con%20vol%C3%BAmenes%20en%20las%20m%C3%A1quinas%20virtuales/","title":"06.-Trabajar con vol\u00famenes en las m\u00e1quinas virtuales","text":"<p>En la creaci\u00f3n de las m\u00e1quinas virtuales que estudiamos en el m\u00f3dulo anterior, se creaba el volumen que se asociaba a la m\u00e1quina como disco principal.</p> <p>Sin embargo, en este apartado vamos a aprender algunas cosas nuevas: crear nuevas m\u00e1quinas virtuales pero usando vol\u00famenes que hayamos creado anteriormente, a\u00f1adir nuevos discos a las m\u00e1quinas virtuales y redimensioanrlos para aumentar el espacio de almacenamiento.</p>"},{"location":"01.-KVM/05.-Almacenamiento/06.-Trabajar%20con%20vol%C3%BAmenes%20en%20las%20m%C3%A1quinas%20virtuales/#creacion-de-maquinas-virtuales-usando-volumenes-existentes","title":"Creaci\u00f3n de m\u00e1quinas virtuales usando vol\u00famenes existentes","text":"<p>En apartados anterior creamos un volumen de 10 GB llamado <code>vol1.qcow2</code>. Vamos a crear una nueva m\u00e1quina virtual que tenga como disco duro este volumen.</p>"},{"location":"01.-KVM/05.-Almacenamiento/06.-Trabajar%20con%20vol%C3%BAmenes%20en%20las%20m%C3%A1quinas%20virtuales/#con-virt-install","title":"Con <code>virt-install</code>","text":"<p>Si los hacemos con <code>virt-install</code>:</p> <pre><code>virt-install --connect qemu:///system \\\n             --virt-type kvm \\\n             --name prueba4 \\\n             --cdrom ~/iso/debian-11.3.0-amd64-netinst.iso \\\n             --os-variant debian10 \\\n             --disk vol=default/vol1.qcow2 \\\n             --memory 1024 \\\n             --vcpus 1\n\n</code></pre> <p>Hemos utilizado la opci\u00f3n <code>--disk vol=default/vol1.qcow2</code>, indicando el volumen usando el formato <code>pool/volumen</code>. Otras opciones que podr\u00edamos poner ser\u00edan:</p> <ul> <li><code>--disk path=/var/lib/libvirt/images/vol1.qcow2</code>: Donde indicamos directamente la ruta donde se encuentra el fichero de imagen de disco.</li> <li><code>--pool wm-images,size=10</code>: En este caso no se reutiliza el volumen que tenemos creado, sino que se crear\u00eda un nuevo volumen de 10GB en el pool indicado.</li> </ul>"},{"location":"01.-KVM/05.-Almacenamiento/06.-Trabajar%20con%20vol%C3%BAmenes%20en%20las%20m%C3%A1quinas%20virtuales/#con-virt-manager","title":"Con <code>virt-manager</code>","text":"<p>Si utilizamos <code>virt-manager</code>, para crear la nueva m\u00e1quina, durante el asistente de creaci\u00f3n de la m\u00e1quina, elegimos el volumen que tenemos creado:</p> <p></p>"},{"location":"01.-KVM/05.-Almacenamiento/06.-Trabajar%20con%20vol%C3%BAmenes%20en%20las%20m%C3%A1quinas%20virtuales/#anadir-nuevos-discos-a-maquinas-virtuales","title":"A\u00f1adir nuevos discos a m\u00e1quinas virtuales","text":"<p>Para a\u00f1adir un disco a una m\u00e1quina virtual, vamos a modificar su definici\u00f3n XML. Podr\u00edamos usar <code>virsh edit</code> e incluir la definici\u00f3n XML del nuevo disco. Sin embargo, vamos a usar un comando de <code>virsh</code> que nos facilita la operaci\u00f3n de a\u00f1adir un nuevo disco y por tanto, la modificaci\u00f3n de la definici\u00f3n XML de la m\u00e1quina. Hay que indicar que esta modificaci\u00f3n se puede hacer \"en caliente\", con la m\u00e1quina funcionando.</p> <p>Por lo tanto, vamos a\u00f1adir el volumen <code>vol2.qcow2</code> que creamos en el apartado anterior, a la m\u00e1quina que hemos creado en estado de ejecuci\u00f3n, ejecutamos:</p> <pre><code>virsh -c qemu:///system attach-disk prueba4 /srv/images/vol2.qcow2 vdb --driver=qemu --type disk --subdriver qcow2 --persistent\nEl disco ha sido asociado exitosamente\n</code></pre> <p>Indicamos el nombre de la m\u00e1quina, el path del fichero de imagen, el dispositivo de bloque que se va a crear, indicamos el driver, el tipo que ser\u00e1 un disco, y el formato de la imagen que se va a a\u00f1adir. Por \u00faltimo, con la opci\u00f3n <code>--persistent</code> hacemos el cambio de forma persistente, para que en el pr\u00f3ximo reinicio de la m\u00e1quina se vuelva a a\u00f1adir el disco.</p> <p>Tambi\u00e9n lo podemos hacer desde <code>virt-manager</code>. Si a\u00f1adimos nuevo hardware en la vista detalle de la m\u00e1quina, podemos a\u00f1adir nuevo almacenamiento:</p> <p></p> <p>Como hemos comentado la m\u00e1quina <code>prueba4</code> est\u00e1 en ejecuci\u00f3n y podemos comprobar que se ha a\u00f1adido el disco:</p> <p></p> <p>Y podr\u00edamos formatear, montar y usar el nuevo disco:</p> <p></p> <p>Para desconectar un disco de una m\u00e1quina virtual podemos ejecutar:</p> <pre><code>virsh -c qemu:///system detach-disk prueba4 vdb --persistent\nEl disco ha sido desmontado exitosamente\n</code></pre> <p>Indicando la m\u00e1quina virtual, el dispositivo que se hab\u00eda creado y la opci\u00f3n para que sea un cambio persistente.</p> <p>Desde <code>virt-manager</code> simplemente pulsar\u00edamos con el bot\u00f3n derecho sobre el dispositivo de disco en la vista detalle, y pulsar\u00edamos sobre Eliminar Hardware.</p>"},{"location":"01.-KVM/05.-Almacenamiento/06.-Trabajar%20con%20vol%C3%BAmenes%20en%20las%20m%C3%A1quinas%20virtuales/#redimension-de-discos-en-maquinas-virtuales","title":"Redimensi\u00f3n de discos en m\u00e1quinas virtuales","text":"<p>Antes de desconectar el disco de la m\u00e1quina, vamos a realizar una operaci\u00f3n de redimensi\u00f3n. Vamos a aumentar el tama\u00f1o del volumen, por lo que la m\u00e1quina ver\u00e1 un disco m\u00e1s grande, pero hay que recordar que tambi\u00e9n tendremos que redimensionar el sistemas de ficheros.</p> <p>Para realizar la redimensi\u00f3n tenemos dos alternativas: o usar la API de libvirt usando, por ejemplo <code>virsh</code> o usar herramientas especificas, en este caso <code>qemu-img</code>.</p> <p>Para redimensionar el volumen de una m\u00e1quina que este parada, podemos usar <code>virsh</code>:</p> <pre><code>virsh -c qemu:///system vol-resize vol2.qcow2 3G --pool vm-images\nEl tama\u00f1o de volumen 'vol2.qcow2' se ha cambiado correctamente a 3G\n</code></pre> <p>O podemos usar <code>qemu-img</code>, se ejecuta con un usuario con privilegios o con <code>sudo</code>:</p> <pre><code>sudo qemu-img resize /srv/images/vol2.qcow2 3G\nImage resized.\n</code></pre> <p>Para hacer la redimensi\u00f3n \"en caliente\", con la m\u00e1quina encendida, podemos obtener informaci\u00f3n de los discos conectados a una m\u00e1quina:</p> <pre><code>virsh -c qemu:///system domblklist prueba4 \n Destino   Fuente\n-----------------------------------------------\n vda       /var/lib/libvirt/images/vol1.qcow2\n vdb       /srv/images/vol2.qcow2\n</code></pre> <p>Y continuaci\u00f3n redimensionamos el disco deseado:</p> <pre><code>virsh -c qemu:///system blockresize prueba4 /srv/images/vol2.qcow2 3G\nEl dispositivo de bloque '/srv/images/vol2.qcow2' cambi\u00f3 de tama\u00f1o\n</code></pre> <p>Podemos comprobar que se ha producido la redimensi\u00f3n en el disco de la m\u00e1quina:</p> <p></p> <ol> <li>El disco ahora tiene 3GB.</li> <li>Pero el sistema de archivo sigue teneido 2Gb. </li> <li>Desmontamos el disco, y lo redimensionamos con <code>resize2fs</code>.</li> <li>Volvemos a montarlo y comprobamos que ahora ya tiene los 3Gb.</li> </ol>"},{"location":"01.-KVM/05.-Almacenamiento/06.-Trabajar%20con%20vol%C3%BAmenes%20en%20las%20m%C3%A1quinas%20virtuales/#redimension-del-sistema-de-ficheros-de-una-imagen-de-disco","title":"Redimensi\u00f3n del sistema de ficheros de una imagen de disco","text":"<p>Otra alternativa para redimensionar el sistema de fichero de una imagen es usar la herramienta virt-resize. <code>virt-resize</code> no trabaja sobre im\u00e1genes de discos de m\u00e1quinas que se est\u00e9n ejecutando, adem\u00e1s no puede redimensionar sobre el mismo fichero de la imagen, por lo que vamos a hacer una copia del mismo.</p> <p>Si tenemos un fichero qcow2 que se llama <code>vol1.qcow</code>, podemos redimensionar el disco y su sistema de ficheros con al siguientes instrucciones:</p> <pre><code>qemu-img resize vol1.qcow2 10G\ncp vol1.qcow2 newvol1.qcow2\nvirt-resize --expand /dev/sda1 vol1.qcow2 newvol1.qcow2\nmv newvol1.qcow2 vol1.qcow2\n</code></pre> <p>Resimensionamos el disco, como vimos en el apartado anterior. Como hemos indicado <code>virt-resize</code> no trabaja sobre un fichero qcow2 directamente, es por ello que lo hemos copiado a otro fichero y hemos ejecutado el comando. Finalmente el fichero <code>nwevol1.qcow2</code> tendr\u00e1 un sistema de ficheros de 10Gb, por lo que terminamos copi\u00e1ndolo de nuevo (con el <code>mv</code>) sobre el disco original.</p>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/01.-Clonaci%C3%B3n%20de%20m%C3%A1quinas%20virtuales/","title":"01.-Clonaci\u00f3n de m\u00e1quinas virtuales","text":"<p>La clonaci\u00f3n de una m\u00e1quina virtual copia la configuraci\u00f3n XML de la m\u00e1quina de origen y sus im\u00e1genes de disco, y realiza ajustes en las configuraciones para asegurar la unicidad de la nueva m\u00e1quina. Esto incluye cambiar el nombre de la m\u00e1quina y asegurarse de que utiliza los clones de las im\u00e1genes de disco. No obstante, los datos almacenados en los discos virtuales del clon son id\u00e9nticos a los de la m\u00e1quina de origen. </p> <p>La clonaci\u00f3n nos permite crear nuevas m\u00e1quinas de forma muy sencilla, sin necesidad de pasar por el proceso de instalaci\u00f3n desde una imagen ISO.</p> <p>Para realizar la clonaci\u00f3n vamos a partir de una m\u00e1quina virtual que est\u00e9 apagada.</p>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/01.-Clonaci%C3%B3n%20de%20m%C3%A1quinas%20virtuales/#uso-virt-clone-para-realizar-la-clonacion","title":"Uso virt-clone para realizar la clonaci\u00f3n","text":"<p>Vamos a usar la aplicaci\u00f3n <code>virt-clone</code> para realizar la clonaci\u00f3n. Puedes profundizar en el uso de esta herramienta consultando la documentaci\u00f3n oficial: virt-clone. Veamos algunos casos de uso:</p> <pre><code>virt-clone --connect=qemu:///system --original prueba4 --auto-clone\nAsignando 'vol1-clone.qcow2'                               |  10 GB  00:15     \n\nEl clon 'prueba4-clone' ha sido creado exitosamente.\n</code></pre> <p>Es la forma m\u00e1s sencilla, se crea una nueva m\u00e1quina. El par\u00e1metro <code>--auto-clone</code> asigna autom\u00e1ticamente:</p> <ul> <li>Un nuevo nombre para la m\u00e1quina virtual clonada si no se especifica uno.</li> <li>Nuevas direcciones MAC para las interfaces de red para evitar conflictos en la red.</li> <li>Una nueva ruta del disco para el almacenamiento del clon, evitando sobrescribir el disco existente.</li> </ul> <p>Si queremos indicar el nombre de la nueva m\u00e1quina: usamos el par\u00e1metro <code>--name</code> y si queremos indicar el nombre del nuevo volumen usamos <code>--file</code>:</p> <pre><code>virt-clone --connect=qemu:///system --original prueba4 --name prueba5 --file /var/lib/libvirt/images/vol_prueba5.qcow2 --auto-clone\n</code></pre>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/01.-Clonaci%C3%B3n%20de%20m%C3%A1quinas%20virtuales/#uso-de-virt-manager-para-realizar-la-clonacion","title":"Uso de virt-manager para realizar la clonaci\u00f3n","text":"<p>Si elegimos una m\u00e1quina virtual y pulsamos el bot\u00f3n derecho del rat\u00f3n tenemos a nuestra disposici\u00f3n la opci\u00f3n Clonar:</p> <p></p> <p>Donde podemos indicar el nombre de la nueva m\u00e1quina virtual, y si pulsamos sobre el bot\u00f3n Details... podemos cambiar el nombre del nuevo fichero de imagen donde se realiza la clonaci\u00f3n.</p>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/01.-Clonaci%C3%B3n%20de%20m%C3%A1quinas%20virtuales/#las-maquinas-virtuales-clonadas-son-iguales-a-las-originales","title":"Las m\u00e1quinas virtuales clonadas son iguales a las originales","text":"<p>La m\u00e1quina clon que hemos creado es igual a la original. La nueva m\u00e1quina contiene identificadores que deber\u00edan ser \u00fanicos (como el machine ID, direcciones MAC, claves SSH de host, hostname, ...).</p> <p></p> <p>Podemos acceder a la m\u00e1quina y cambiar el fichero <code>/etc/hostname</code> para cambiar el nombre de la m\u00e1quina, pero todav\u00eda tendr\u00edamos mucha informaci\u00f3n repetida entre las dos m\u00e1quinas. </p> <p>Por lo tanto no vamos a realizar la clonaci\u00f3n de esta manera. En el siguiente apartado vamos a aprender a crear plantillas de m\u00e1quinas virtuales que nos permiten realizar la clonaci\u00f3n de forma adecuada.</p>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/02.-Plantillas%20de%20MV/","title":"02.-Plantillas de MV","text":"<p>Una plantilla de m\u00e1quina virtual, o simplemente plantilla es una imagen preconfigurada de un sistema operativo que puede utilizarse para desplegar r\u00e1pidamente m\u00e1quinas virtuales. El uso de plantillas permite evitar muchas tareas repetitivas de instalaci\u00f3n y configuraci\u00f3n. El resultado es la creaci\u00f3n de m\u00e1quinas virtuales totalmente instaladas y listas para funcionar en menos tiempo de lo que tardar\u00eda una instalaci\u00f3n manual.</p> <p>Con la herramienta <code>virt-clone</code> hemos creado un clon de una m\u00e1quina virtual, es decir, una copia de una m\u00e1quina. Una plantilla es una copia maestra que podemos utilizar para crear muchos clones.</p> <p>Una vez tengamos una plantilla, tendremos dos manera de crear las nuevas m\u00e1quinas:</p> <ul> <li>Clonaci\u00f3n completa (Full): Creamos una copia completa de la m\u00e1quina virtual que es totalmente independiente de la plantilla. Requiere el mismo espacio en disco que el original.</li> <li>Clonaci\u00f3n enlazada (Linked): Utiliza la imagen de la plantilla como imagen base en modo de s\u00f3lo lectura y vincula una imagen adicional de \"copia en escritura\" para almacenar los nuevos datos generados. Requiere menos espacio en disco, pero no puede ejecutarse sin acceso a la imagen de plantilla base.</li> </ul>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/02.-Plantillas%20de%20MV/#creacion-de-plantillas","title":"Creaci\u00f3n de plantillas","text":"<p>Tendr\u00edamos que realizar tres pasos fundamentales:</p> <p>En primer lugar, crear e instalar un nueva m\u00e1quina virtual e instalarle todo el software necesario. A partir de esa m\u00e1quina vamos a crear la plantilla.</p> <p>En segundo lugar, vamos a generalizar la imagen, es decir, vamos a eliminar toda la informaci\u00f3n que deber\u00eda ser \u00fanica en una m\u00e1quina ( contiene identificadores que deber\u00edan ser \u00fanicos (como el machine ID, direcciones MAC, claves SSH de host, hostname, ...). De tal forma, que las m\u00e1quinas clonadas, regenerar\u00e1n esta informaci\u00f3n de for ma \u00fanica al iniciarlas.</p> <p>En m\u00e1quinas Linux vamos a usar la utilidad <code>virt-sysprep</code>, para m\u00e1quinas Windows podemos usar los mecanismos propios de generalizaci\u00f3n que posee: sysprep.</p> <p>Para poder utilizar <code>virt-sysprep</code> tenemos que instalar el siguiente paquete:</p> <pre><code>apt-get install libguestfs-tools\n</code></pre> <p><code>virt-sysprep</code> puede trabajar con un fichero de ima\u01f5en, usando la opci\u00f3n <code>-a</code>, pero en nuestro caso vamos indicarle una m\u00e1quina virtual, usando el par\u00e1metro <code>-d</code>.</p> <p>Vamos a suponer que vamos a convertir en plantilla nuestra m\u00e1quina <code>prueba1</code> que tiene un sistema GNU/Linux Debian 11 instalado. Nuestra m\u00e1quina original tiene que estar parada. Y para generalizarla, ejecutamos como superusuario:</p> <pre><code>sudo virt-sysprep -d prueba1 --hostname plantilla-debian11\n[   0.0] Examining the guest ...\n...\n</code></pre> <p><code>virt-sysprep</code> tienes muchas opciones de configuraci\u00f3n, hemos usado el par\u00e1metro <code>-hostname</code> para cambiar el nombre de la m\u00e1quina de la plantilla.</p> <p>En \u00faltimo lugar, tenemos que evitar ejecutar est\u00e1 m\u00e1quina de nuevo, ya que la generalizaci\u00f3n que hemos hecho se perder\u00eda. Para conseguirlo vamos a configurar la imagen original de solo lectura, de esta manera al intentar ejecutar la plantilla nos dar\u00e1 un error. Para ello como superusuario:</p> <pre><code>/var/lib/libvirt/images# chmod -w prueba1.qcow2 \n</code></pre> <p>Adem\u00e1s, vamos a cambiar el nombre a la m\u00e1quina para recordar que es un plantilla:</p> <pre><code>virsh -c qemu:///system domrename prueba1 plantilla-prueba1\nDomain successfully renamed\n</code></pre> <p>Este cambio tambi\u00e9n se podr\u00eda hacer con <code>virt-manager</code>.</p> <p>Si intentamos ejecutar la plantilla, nos dar\u00e1 un error:</p> <p></p> <p>En cualquier momento podemos cambiar la configuraci\u00f3n de la plantilla. Todas las nuevas m\u00e1quinas clonadas a partir de ella tendr\u00e1n la misma configuraci\u00f3n.</p> <p>Ya tenemos la plantilla lista para ser clonada. Lo veremos en los siguientes apartados.</p>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/03.-Clonaci%C3%B3n%20completa%20con%20plantillas/","title":"03.-Clonaci\u00f3n completa con plantillas","text":"<p>La clonaci\u00f3n completa a partir de una plantilla es similar a la clonaci\u00f3n de m\u00e1quinas virtuales que vimos en un punto anterior.</p>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/03.-Clonaci%C3%B3n%20completa%20con%20plantillas/#uso-virt-clone-para-realizar-la-clonacion","title":"Uso virt-clone para realizar la clonaci\u00f3n","text":"<p>Podemos usar el siguiente comando para realizar la clonaci\u00f3n:</p> <pre><code>virt-clone --connect=qemu:///system --original plantilla-prueba1 --name clone1 --auto-clone\n</code></pre> <p>Recuerda que puedes usar el par\u00e1metro <code>--file</code> para indicar el nombre de la imagen de la nueva m\u00e1quina que clonamos.</p> <p>El proceso puede ser lento, ya que se hace una copia completa de la imagen original a la de la nueva m\u00e1quina virtual.</p>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/03.-Clonaci%C3%B3n%20completa%20con%20plantillas/#uso-de-virt-manager-para-realizar-la-clonacion","title":"Uso de virt-manager para realizar la clonaci\u00f3n","text":"<p>Si elegimos la plantilla y pulsamos el bot\u00f3n derecho del rat\u00f3n tenemos a nuestra disposici\u00f3n la opci\u00f3n Clonar:</p> <p></p> <p>Donde podemos indicar el nombre de la nueva m\u00e1quina virtual, y si pulsamos sobre el bot\u00f3n Details... podemos cambiar el nombre del nuevo fichero de imagen donde se realiza la clonaci\u00f3n.</p>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/03.-Clonaci%C3%B3n%20completa%20con%20plantillas/#problemas-de-acceso-por-ssh","title":"Problemas de acceso por SSH","text":"<p>Si intentamos acceder por SSH a la nueva m\u00e1quina vamos a comprobar que no nos lo permite. Para realizar la conexi\u00f3n por SSH vamos a averiguar la IP de la m\u00e1quina, para ello podemos ejecutar:</p> <pre><code>virsh -c qemu:///system domifaddr clone1\n Nombre     direcci\u00f3n MAC       Protocol     Address\n-------------------------------------------------------------------------------\n vnet0      52:54:00:6d:b5:da    ipv4         192.168.122.253/24\n</code></pre> <p>O usando <code>virt-manager</code> vemos el detalle de la interfaz de red:</p> <p></p> <p>Si desde el host intentamos acceder por SSH, obtenemos:</p> <pre><code>ssh usuario@192.168.122.253\nssh: connect to host 192.168.122.253 port 22: Connection refuse\n</code></pre> <p>Esto es debido a que cuando ejecutamos el <code>virt-sysprep</code> uno de los datos que se eliminaron fueron las claves SSH de la m\u00e1quina para que no fueran los mismos que los de la m\u00e1quina original. Por lo tanto tenemos que regenerar estas claves en la nueva m\u00e1quina ejecutando el comando <code>ssh-keygen -A</code>, y de paso le vamos a cambiar el <code>hostname</code>:</p> <p></p> <p>Una reiniciada la m\u00e1quina ya podemos acceder por SSH desde el host:</p> <pre><code>ssh usuario@192.168.122.253\n...\n\nusuario@clone1:~$ \n</code></pre>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/04.-Clonaci%C3%B3n%20enlazada%20con%20plantillas/","title":"04.-Clonaci\u00f3n enlazada con plantillas","text":"<p>En este tipo de clonaci\u00f3n la imagen de la m\u00e1quina clonada utiliza la imagen de la plantilla como imagen base (backing store) en modo de s\u00f3lo lectura, en la imagen de la nueva m\u00e1quina s\u00f3lo se guardan los cambios del sistema de archivo. Requiere menos espacio en disco, pero no puede ejecutarse sin acceso a la imagen de plantilla base. </p> <p>El mecanismo es un poco m\u00e1s complejo, tenemos que realziar dos pasos:</p> <ol> <li>Creaci\u00f3n del nuevo volumen a a partir de la imagen base de la plantilla (backing store).</li> <li>Creaci\u00f3n de la nueva m\u00e1quina usando <code>virt-install</code>, <code>virt-manager</code> o <code>virt-clone</code>.</li> </ol>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/04.-Clonaci%C3%B3n%20enlazada%20con%20plantillas/#creacion-de-imagenes-de-disco-con-backing-store","title":"Creaci\u00f3n de im\u00e1genes de disco con backing store","text":"<p>Para no complicar la creaci\u00f3n de vol\u00famenes con backing store vamos a indicar el tama\u00f1o del nuevo volumen igual al de la imagen base. Como la imagen base ya tiene guardado un sistema de archivos con un tama\u00f1o determinado, el hecho de que creemos una nueva imagen con m\u00e1s tama\u00f1o no conlleva el redimensionado del sistema de archivo. Este cambio de tama\u00f1o se podr\u00eda realizar, pero con operaciones un poco m\u00e1s complejas.</p> <p>Para asegurarnos de crear un volumen del mismo tama\u00f1o que la imagen base vamos comprobar su tama\u00f1o:</p> <pre><code>virsh -c qemu:///system domblkinfo plantilla-prueba1 vda --human\nCapacidad:      10,000 GiB\n...\n</code></pre> <p>Tambi\u00e9n lo podemos ver con <code>virt-manager</code>:</p> <p></p> <p>Para crear la nueva imagen basada en la imagen base de la plantilla, podemos crear el volumen con <code>virsh</code>:</p> <pre><code>virsh -c qemu:///system vol-create-as default clone2.qcow2 10G --format qcow2 --backing-vol prueba1.qcow2 --backing-vol-format qcow2 \n</code></pre> <p>O podemos usar la aplicaci\u00f3n <code>qemu-img</code> y posterior refrescamos el pool <code>default</code>:</p> <pre><code>cd /var/lib/libvirt/images\nsudo qemu-img create -f qcow2 -b prueba1.qcow2 -F qcow2 clone2.qcow2 10G\nvirsh -c qemu:///system pool-refresh default\n</code></pre> <p>Otra opci\u00f3n es usando <code>virt-manager</code>, creando un nuevo volumen e indicando durante la direcci\u00f3n el volumen base:</p> <p></p>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/04.-Clonaci%C3%B3n%20enlazada%20con%20plantillas/#informacion-sobre-imagenes-de-con-disco-con-backing-store","title":"Informaci\u00f3n sobre im\u00e1genes de con disco con backing store","text":"<p>Para comprobar que un volumen est\u00e1 creado con una imagen base podemos usar <code>virsh</code>:</p> <pre><code>virsh -c qemu:///system vol-dumpxml clone2.qcow2 default\n...\n&lt;backingStore&gt;\n    &lt;path&gt;/var/lib/libvirt/images/prueba1.qcow2&lt;/path&gt;\n    &lt;format type='qcow2'/&gt;\n    &lt;permissions&gt;\n    ...\n</code></pre> <p>O usando el comando <code>qemu-img</code>:</p> <pre><code>sudo qemu-img info /var/lib/libvirt/images/clone2.qcow2\n...\nbacking file: prueba1.qcow2\nbacking file format: qcow2\n...\n</code></pre>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/04.-Clonaci%C3%B3n%20enlazada%20con%20plantillas/#creacion-de-la-nueva-maquina-a-partir-de-la-imagen-con-backing-store-con-virt-install","title":"Creaci\u00f3n de la nueva m\u00e1quina a partir de la imagen con backing store con virt-install","text":"<p>En este caso podemos usar la herramienta <code>virt-install</code> pero sin indicar el medio de instalaci\u00f3n.</p> <pre><code>virt-install --connect qemu:///system \\\n             --virt-type kvm \\\n             --name nueva_prueba \\\n             --os-variant debian10 \\\n             --disk path=/var/lib/libvirt/images/prueba6.qcow2 \\\n             --memory 1024 \\\n             --vcpus 1 \\\n             --import\n</code></pre> <p>Usamos la opci\u00f3n <code>--import</code> para que no te pida que indique el medio de instalaci\u00f3n, simplemente va a usar el volumen indicado como disco de la m\u00e1quina virtual.</p>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/04.-Clonaci%C3%B3n%20enlazada%20con%20plantillas/#creacion-de-la-nueva-maquina-a-partir-de-la-imagen-con-backing-store-con-virt-manager","title":"Creaci\u00f3n de la nueva m\u00e1quina a partir de la imagen con backing store con virt-manager","text":"<p>Si utilizamos <code>virt-manager</code>, para crear la nueva m\u00e1quina, durante el asistente de creaci\u00f3n de la m\u00e1quina, elegimos la opci\u00f3n Manual install, ya que no vamos a usar una imagen ISO:</p> <p></p> <p>Y posteriormente, escogemos el volumen que tenemos creado:</p> <p></p> <p>Otra forma, ser\u00eda escogiendo la opci\u00f3n Importar imagen de disco existente en la creaci\u00f3n de la m\u00e1quina:</p> <p></p> <p>Y eligiendo el volumen en siguiente paso:</p> <p></p>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/04.-Clonaci%C3%B3n%20enlazada%20con%20plantillas/#creacion-de-la-nueva-maquina-a-partir-de-la-imagen-con-backing-store-con-virt-clone","title":"Creaci\u00f3n de la nueva m\u00e1quina a partir de la imagen con backing store con virt-clone","text":"<p>Una vez que tenemos creado el volumen basada en el imagen base de la plantilla, podemos crear un nuevo clon con <code>virt-clone</code>, para ello ejecutamos:</p> <pre><code>virt-clone --connect=qemu:///system --original plantilla-prueba1 --name clone2 --file /var/lib/libvirt/images/clone2.qcow2 --preserve-data\n</code></pre> <p>Indicamos como fichero el volumen que hemos creado, pero con la opci\u00f3n <code>--preserve-data</code> no se copia el volumen original al nuevo, simplemente se usa. Se puede comprobar que la clonaci\u00f3n no tarda nada de tiempo, no se est\u00e1 copiando un volumen en otro.</p>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/05.-Snapshots%20de%20MV/","title":"05.-Snapshots de MV","text":"<p>Un snapshot (instant\u00e1nea) nos posibilita guardar el estado de una m\u00e1quina virtual en un determinado momento. Se guarda el estado del disco y el estado de la memoria. De esta forma en el futuro puedo volver a un estado anterior de la misma. No todos los formatos y medios de almacenamiento nos posibilitan esta caracter\u00edsticas. Un fichero de imagen de disco con formato <code>qcow2</code> si nos permite la realizaci\u00f3n de instant\u00e1neas.</p>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/05.-Snapshots%20de%20MV/#gestion-de-instantaneas-con-virsh","title":"Gesti\u00f3n de instant\u00e1neas con virsh","text":"<p>Vamos a trabajar con la m\u00e1quina <code>prueba2</code> donde tenemos una instalaci\u00f3n de Ubuntu 22.04. </p> <p>Hemos hecho un cambio significativo en nuestra m\u00e1quina (en el ejemplo hemos creado una carpeta). </p> <p></p> <p>Ahora es el momento de crear una instant\u00e1nea, de esta manera podremos volver a este estado en un momento futuro:</p> <pre><code>virsh -c qemu:///system snapshot-create-as prueba2 --name instant\u00e1nea1 --description \"Creada carpeta importante\" --atomic\nHa sido creada la captura instant\u00e1nea instant\u00e1nea1 del dominio\n</code></pre> <p>Se recomienda utilizar la opci\u00f3n <code>--atomic</code> para evitar cualquier corrupci\u00f3n mientras se toma la instant\u00e1nea. Para ver las instant\u00e1neas que tiene creada la m\u00e1quina podemos ejecutar:</p> <pre><code>virsh -c qemu:///system snapshot-list prueba2\n  Nombre         Hora de creaci\u00f3n            Estado\n -----------------------------------------------------\n  instant\u00e1nea1   2022-05-28 18:13:46 +0200   running\n</code></pre> <p>Tambi\u00e9n podemos ver las instant\u00e1neas de un fichero de imagen con la herramienta <code>qemu-img</code> (la m\u00e1quina debe estar parada):</p> <pre><code>sudo qemu-img info /var/lib/libvirt/images/prueba2.qcow2\nimage: /var/lib/libvirt/images/prueba2.qcow2\nfile format: qcow2\nvirtual size: 20 GiB (21474836480 bytes)\ndisk size: 11.9 GiB\ncluster_size: 65536\nSnapshot list:\nID        TAG               VM SIZE                DATE     VM CLOCK     ICOUNT\n1         instant\u00e1nea1     1.79 GiB 2022-05-28 18:13:46 00:16:12.485    \n...\n</code></pre> <p>Los snapshot son otro recurso de libvirt cuya definici\u00f3n se guarda en formato XML. Podr\u00edamos usar el comando <code>snapshot-dumpxml</code> para ver su definici\u00f3n. Tenemos m\u00e1s comandos relacionados con las instant\u00e1neas: para obtener informaci\u00f3n de una instant\u00e1nea usamos <code>snapshot-info</code>, <code>snapshot-delete</code> para borrar una instant\u00e1nea ,... </p> <p>Si hemos tenido un problema en nuestra m\u00e1quina y hemos eliminado nuestra carpeta importante:</p> <p></p> <p>Podemos volver al estado de una determinada instant\u00e1nea ejecutando:</p> <pre><code>virsh -c qemu:///system snapshot-revert prueba2 instant\u00e1nea1\n</code></pre> <p>Y comprobamos que hemos vuelto al estado de la m\u00e1quina donde ten\u00edamos creada la carpeta:</p> <p></p>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/05.-Snapshots%20de%20MV/#gestion-de-instantaneas-con-virt-manager","title":"Gesti\u00f3n de instant\u00e1neas con virt-manager","text":"<p>Accediendo a la Vista Instant\u00e1neas obtenemos la ventana para gestionar las instant\u00e1neas:</p> <p></p> <p>Tenemos botones para las opci\u00f3n m\u00e1s comunes:</p> <ul> <li>Bot\u00f3n 1: Crear instant\u00e1nea.</li> <li>Bot\u00f3n 2: Volver al estado de la instant\u00e1nea seleccionada.</li> <li>Bot\u00f3n 3: Refrescar la lista de instant\u00e1neas.</li> <li>Bot\u00f3n 4: Borrar la instant\u00e1nea seleccionada.</li> </ul> <p>Al crear una instant\u00e1nea, podemos indicar el nombre, la descripci\u00f3n y se guarda una captura de pantalla de la m\u00e1quina.</p> <p></p>"},{"location":"01.-KVM/06.-Clonaci%C3%B3n%20y%20Snapshots/05.-Snapshots%20de%20MV/#conclusion","title":"Conclusi\u00f3n","text":"<p>Puede ser muy interesante tomar instant\u00e1neas peri\u00f3dicamente a una m\u00e1quina virtual. Si tenemos cualquier problema con la m\u00e1quina podemos volver a un estado estable anterior. Esta caracter\u00edstica puede ser muy \u00fatil, ya que nos permite experimentar con la m\u00e1quina, y si tenemos alg\u00fan problema, podemos volver al estado original y no tener que eliminar la m\u00e1quina.</p>"},{"location":"01.-KVM/07.-Redes/01.-Introduccion/","title":"Introducci\u00f3n a la gesti\u00f3n de redes en QEMU/KVM + libvirt","text":"<p>libvirt nos proporciona las herramientas necesarias para gestionar las redes virtuales a las que se conectan nuestras m\u00e1quinas virtuales.</p> <p>Tenemos dos grandes grupos de redes que podemos configurar:</p> <ul> <li>Redes Virtuales (Privadas): Son redes privadas que podemos configurar para que tengan distintas caracter\u00edsticas.</li> <li>Redes Puente (P\u00fablicas): Las podemos considerar como redes p\u00fablicas, desde el punto de vista que las m\u00e1quinas virtuales estar\u00e1n conectadas a la misma red a la que est\u00e1 conectada el host.</li> </ul> <p>Recordemos un puente o bridge/switch es un dispositivo de interconexi\u00f3n de redes. La gesti\u00f3n de redes de libvirt se basa en el concepto de switch virtual, para ello utiliza Linux Bridge, que es un software que nos permite crear bridge virtuales con la misma funcionalidad que un bridge f\u00edsico.</p>"},{"location":"01.-KVM/07.-Redes/01.-Introduccion/#tipos-de-redes-virtuales-privadas","title":"Tipos de Redes Virtuales (Privadas)","text":"<p>La clasificaci\u00f3n depender\u00e1 de la configuraci\u00f3n que hagamos a la Red Virtual:</p>"},{"location":"01.-KVM/07.-Redes/01.-Introduccion/#redes-virtuales-de-tipo-nat","title":"Redes Virtuales de tipo NAT","text":"<p>Es un Red Virtual Privada, las m\u00e1quinas virtual tendr\u00e1n un direccionamiento privado y se nos proporciona un mecanismo de router/nat para que tengan conectividad al exterior.</p> <p></p> <p>La red <code>default</code> con la que hemos trabajado es de este tipo. Veamos sus caracter\u00edsticas:</p> <ul> <li>Crea un bridge virtual donde se conectan las m\u00e1quinas virtuales. En el caso de la red <code>default</code> se llama <code>vmbr0</code>. A este bridge tambi\u00e9n est\u00e1 conectado el host.</li> <li>Las m\u00e1quinas virtuales se configuraran de forma din\u00e1mica por medio de un servidor DHCP. En el caso de la red <code>default</code>, el rango de direcciones es <code>192.168.122.2</code> - <code>192.168.122.254</code>. La puerta de enlace de las m\u00e1quinas se configura con la direcci\u00f3n IP <code>192.168.122.1</code> que corresponde al host. El servidor DHCP esta configurado en el host. </li> <li>En el host tambi\u00e9n se configura un servidor DNS que es el que se configura en las m\u00e1quinas virtuales.</li> <li> <p>El host hace la funci\u00f3n de router/nat de tal manera que las m\u00e1quinas virtuales tienen conectividad al exterior, usando la direcci\u00f3n IP de la interfaz de red del host que est\u00e1 conectada al exterior.</p> <p>Existen otros mecanismos para que las m\u00e1quinas virtuales tengan acceso al exterior:</p> <ul> <li>Modo bridge: Donde se usan rutas de encaminamiento en el host. En este modo hay que configurar con rutas est\u00e1ticas los elementos de enrutamiento de la red local para que funcione de manera adecuada.</li> <li>Modo abierto: Similar a la anterior, excepto que no se a\u00f1aden reglas de firewall para asegurar que cualquier tr\u00e1fico pase o no. Se asume que, o bien no son necesarias, o bien se configuran fuera del \u00e1mbito de libvirt.</li> </ul> <p>En este curso vamos a trabajar con Redes Virtuales de tipo NAT.</p> </li> </ul>"},{"location":"01.-KVM/07.-Redes/01.-Introduccion/#redes-virtuales-aisladas-isolated","title":"Redes Virtuales aisladas (Isolated)","text":"<p>Es un Red Virtual Privada, donde las m\u00e1quinas virtuales tomas direccionamiento privado. No tenemos un mecanismo de router/nat, por lo que las m\u00e1quinas virtuales no tienen conectividad con el exterior. </p> <p></p> <p>Por lo tanto tienen las mismas caracter\u00edsticas que una Red Virtual de tipo NAT, pero sin la caracter\u00edstica de router/nat. Se gestiona un bridge virtual donde se conectan las m\u00e1quinas virtuales y el host, seguimos teniendo un servidor DNS y es posible tener un servidor DHCP en el host que asigna din\u00e1micamente un direccionamiento privado a las m\u00e1quinas.</p>"},{"location":"01.-KVM/07.-Redes/01.-Introduccion/#redes-virtuales-muy-aisladas-very-isolated","title":"Redes Virtuales muy aisladas (Very Isolated)","text":"<p>Es un Red Virtual Aislada, en la que el host no est\u00e1 conectado a las m\u00e1quians virtuales. Por lo tanto,no tenemos servidor DNS ni DHCP para ser utilizados por las m\u00e1quinas. Al ser aislada, tampoco tienen salida al exterior.</p> <p></p> <p>En este tipo de red se suele configurar la red de las m\u00e1quinas virtuales de forma est\u00e1tica.</p>"},{"location":"01.-KVM/07.-Redes/01.-Introduccion/#tipos-de-redes-puente-publicas","title":"Tipos de Redes Puente (P\u00fablicas)","text":"<p>La clasificaci\u00f3n depende de la forma utilizada para conectar las m\u00e1quinas virtuales al exterior.</p>"},{"location":"01.-KVM/07.-Redes/01.-Introduccion/#redes-puente-conectadas-a-un-bridge-externo","title":"Redes Puente conectadas a un bridge externo","text":"<p>En este caso necesitamos crear un bridge virtual (normalmente llamado <code>br0</code>) al que conectaremos la m\u00e1quina f\u00edsica y las m\u00e1quinas virtuales. En este caso las m\u00e1quinas virtuales estar\u00e1n en la misma red red que el host y estar\u00e1n conectadas directamente al router de esta red, tomando la configuraci\u00f3n dhcp (si la hubiera) del mismo modo que la toma el host.</p> <p></p>"},{"location":"01.-KVM/07.-Redes/01.-Introduccion/#redes-puente-compartiendo-la-interfaz-fisica-del-host","title":"Redes Puente compartiendo la interfaz f\u00edsica del host","text":"<p>En este caso vamos a usar una conexi\u00f3n macvtap, que nos permite conectarnos a la red f\u00edsica directamente a trav\u00e9s de una interfaz f\u00edsica del host (sin usar un dispositivo bridge). Al igual que con la red anterior, las m\u00e1quinas virtuales estar\u00e1n conectados directamente a la red f\u00edsica, por lo que sus direcciones IP estar\u00e1n todas en la subred de la red f\u00edsica. Existe una una limitaci\u00f3n en la implementaci\u00f3n de macvtap: estas conexiones no permiten la comunicaci\u00f3n directa entre el host y los invitados.</p> <p></p>"},{"location":"01.-KVM/07.-Redes/02.-Definic%C3%B3n%20de%20RV%20%28Privadas%29/","title":"Definici\u00f3n de Redes Virtuales (Privadas) en libvirt","text":"<p>Las redes que gestiona libvirt se definen con el formato XML. Puedes profundizar en el formato XML con los que se definen las redes consultando el documento Network XML format. </p>"},{"location":"01.-KVM/07.-Redes/02.-Definic%C3%B3n%20de%20RV%20%28Privadas%29/#definicion-de-redes-virtuales-de-tipo-nat","title":"Definici\u00f3n de Redes Virtuales de tipo NAT","text":"<p>La red <code>default</code> con la que hemos trabajado es de este tipo. La configuraci\u00f3n de la red <code>default</code> la podemos encontrar en el fichero <code>/usr/share/libvirt/networks/default.xml</code>:</p> <pre><code>&lt;network&gt;\n  &lt;name&gt;default&lt;/name&gt;\n  &lt;bridge name='virbr0'/&gt;\n  &lt;forward/&gt;\n  &lt;ip address='192.168.122.1' netmask='255.255.255.0'&gt;\n    &lt;dhcp&gt;\n      &lt;range start='192.168.122.2' end='192.168.122.254'/&gt;\n    &lt;/dhcp&gt;\n  &lt;/ip&gt;\n&lt;/network&gt;\n</code></pre> <p>Veamos las etiquetas:</p> <ul> <li><code>&lt;name&gt;</code>: Nombre de la red.</li> <li><code>&lt;bridge&gt;</code>: Indicamos el nombre del bridge virtual que se va a utilizar.</li> <li><code>&lt;forward&gt;</code>: Indica que las m\u00e1quinas virtuales van a tener conectividad con el exterior. Por defecto, si no se indicada nada, el tipo es nat: <code>&lt;forward mode=\"nat\"/&gt;</code>. El modo tambi\u00e9n puede ser:<ul> <li><code>router</code>: Las redes tipo router tambi\u00e9n dan acceso a las m\u00e1quinas virtuales al exterior, pero en ese caso no se utiliza el mecanismo de NAT, sino que se usan rutas de encaminamiento en el host.</li> <li><code>open</code>: Similar a la anterior, excepto que no se a\u00f1aden reglas de firewall para asegurar que cualquier tr\u00e1fico pase o no. </li> </ul> </li> <li><code>&lt;ip&gt;</code>: Donde se indica la direcci\u00f3n IP y la mascara de red de la direcci\u00f3n del host en la red. Es decir, el host est\u00e1 conectado al bridge virtual con esa direcci\u00f3n.<ul> <li><code>&lt;dhcp&gt;</code>: Este elemento es optativo. Si queremos tener un servidor DHCP configurado en el host lo configuramos en esta etiqueta, por ejemplo poniendo el rango en la etiqueta <code>&lt;range&gt;</code>. </li> </ul> </li> </ul>"},{"location":"01.-KVM/07.-Redes/02.-Definic%C3%B3n%20de%20RV%20%28Privadas%29/#definicion-de-redes-virtuales-aisladas","title":"Definici\u00f3n de Redes Virtuales Aisladas","text":"<p>La definici\u00f3n de una Red Virtual Aislada es igual a la de tipo NAT, pero quitando la etiqueta <code>&lt;forward&gt;</code> para deshabilitar la caracter\u00edstica de que el host haga router/nat. La definici\u00f3n podr\u00eda quedar de este modo:</p> <pre><code>&lt;network&gt;\n  &lt;name&gt;red_aislada&lt;/name&gt;\n  &lt;bridge name='virbr1'/&gt;\n  &lt;ip address='192.168.123.1' netmask='255.255.255.0'&gt;\n    &lt;dhcp&gt;\n      &lt;range start='192.168.123.2' end='192.168.123.254'/&gt;\n    &lt;/dhcp&gt;\n  &lt;/ip&gt;\n&lt;/network&gt;\n</code></pre>"},{"location":"01.-KVM/07.-Redes/02.-Definic%C3%B3n%20de%20RV%20%28Privadas%29/#definicion-de-redes-virtuales-muy-aisladas","title":"Definici\u00f3n de Redes Virtuales muy Aisladas","text":"<p>Son similares a la anterior, pero el host no se conecta a la red. Por lo tanto no tenemos ni servidor DNS, ni DHCP. Al crear este tipo de red, simplemente se creara un bridge virtual donde se conectar\u00e1n las m\u00e1quinas virtuales, que se configurar\u00e1n de forma est\u00e1tica su direccionamiento. Por lo tanto la definici\u00f3n ser\u00e1:</p> <pre><code>&lt;network&gt;\n  &lt;name&gt;red_muy_aislada&lt;/name&gt;\n  &lt;bridge name='virbr2'/&gt;\n&lt;/network&gt;\n</code></pre>"},{"location":"01.-KVM/07.-Redes/bridge/","title":"Creaci\u00f3n de un Puente Externo con Linux Bridge","text":"<p>Un bridge externo es un bridge virtual que estar\u00e1 conectado al router de la red local. El bridge se crear\u00e1 en el servidor donde estamos virtualizando (host). El host estar\u00e1 conectado a este bridge para tener conectividad al exterior. Veamos un esquema:</p> <p></p> <ul> <li>El bridge que vamos a crear lo vamos a llamar <code>br0</code>.</li> <li>En el host aparecer\u00e1 una interfaz de red con el mismo nombre que representa la conexi\u00f3n al bridge. Est\u00e1 interfaz de red se configurar\u00e1 de forma est\u00e1tica o din\u00e1mica (si la red local tiene un servidor DHCP).</li> <li>En el ejemplo vemos que la interfaz f\u00edsica de red es <code>eth0</code> que estar\u00e1 conectada a <code>br0</code> para que el host tenga conectividad al exterior. Esa interfaz de red no tendr\u00e1 asignada direcci\u00f3n IP.</li> <li>Posteriormente veremos como podemos conectar las m\u00e1quinas virtuales a este bridge de tal manera que tomaran direcciones IP en el mismo direccionamiento que el host.</li> </ul> <p>Nota: Si conectamos al bridge una interfaz de tipo wifi podemos tener problemas de conectividad. No todas las tarjetas inal\u00e1mbricas permiten la conexi\u00f3n a puentes virtuales.</p> <p>Nos aseguremos que tenemos instalado el siguiente paquete que nos permite trabajar con Linux Bridge:</p> <pre><code>apt install bridge-utils\n</code></pre>"},{"location":"01.-KVM/07.-Redes/bridge/#creacion-de-un-bridge-externo-con-networkmanager","title":"Creaci\u00f3n de un bridge externo con NetworkManager","text":"<p>NetworkManager es una utilidad de gr\u00e1fica para simplificar el uso de redes en sistemas Linux. Normalmente la tenemos instaladas con sistemas Linux con entornos gr\u00e1ficos como Gnome. Junto a esa utilidad tenemos otra que se puede ejecutar con el comando <code>nm-connection-editor</code>, y que se llama Configuraci\u00f3n avanzada de redes:</p> <p></p> <p>Si lo ejecutamos accedemos a la siguiente pantalla:</p> <p></p> <p>Donde vemos la conexi\u00f3n de red cableada (o de wifi) que tenemos y los bridge virtuales que se han creado cuando hemos estado trabajando con las redes en libvirt. Pulsando el bot\u00f3n +, podemos de alta nueva conexi\u00f3n. A\u00f1adiremos una conexi\u00f3n de tipo Puente:</p> <p></p> <p>Y podemos indicar el nombre de la conexi\u00f3n, el nombre del puente que estamos creando, y a continuaci\u00f3n vamos a a\u00f1adirle una conexi\u00f3n al bridge que ser\u00e1 la interfaz de red f\u00edsica del host que est\u00e1 actualmente conectada al exterior.</p> <p></p> <p>A\u00f1adimos un conexi\u00f3n Cableada que ser\u00e1 la interfaz f\u00edsica del host (en mi caso <code>enp1s0</code>):</p> <p></p> <p></p> <p>Finalmente borramos la conexi\u00f3n cableada que tenemos actualmente:</p> <p></p> <p>Y en unos segundos, se conectar\u00e1 de forma autom\u00e1tica a la conexi\u00f3n Puente Externo:</p> <p> </p> <p>Comprobamos la configuraci\u00f3n de red del host:</p> <pre><code>$ ip a\n2: enp1s0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast master br0 state UP group default qlen 1000\n    link/ether 52:54:00:22:d7:3f brd ff:ff:ff:ff:ff:ff\n...\n7: br0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000\n    link/ether 92:d8:69:79:60:69 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.121.168/24 brd 192.168.121.255 scope global dynamic noprefixroute br0\n       valid_lft 3459sec preferred_lft 3459sec\n...\n</code></pre> <p>Comprobamos que la interfaz f\u00edsica <code>enp1s0</code> no tiene direcci\u00f3n IP, ya que est\u00e1 conectada al bridge. La interfaz de red <code>br0</code> representa la conexi\u00f3n del bridge que ha tomado una ip del servidor DHCP de la red local (esta direcci\u00f3n IP ser\u00e1 diferente a la que ten\u00eda anteriormente la interfaz f\u00edsica).</p> <p>Si tenemos instalado el paquete <code>bridge-utils</code> podremos ver los puentes virtuales y las interfaces que tienen conectadas, ejecutando como superusuario:</p> <pre><code>brctl show\nbridge name bridge id       STP enabled interfaces\nbr0     8000.92d869796069   yes     enp1s0\nvirbr0      8000.525400aea33d   yes     \nvirbr1      8000.5254002daec2   yes     \nvirbr3      8000.52540052838e   yes\n</code></pre>"},{"location":"01.-KVM/07.-Redes/bridge/#creacion-de-un-bridge-externo-en-debian","title":"Creaci\u00f3n de un bridge externo en Debian","text":"<p>Si estamos trabajando en un servidor con Linux Debian instalado y no tenemos instalado NetworkManager, la configuraci\u00f3n se har\u00e1 directamente en el fichero de configuraci\u00f3n de red <code>/etc/network/intefaces</code>:</p> <pre><code>auto lo\niface lo inet loopback\n\nauto enp1s0\niface enp1s0 inet manual\n\nauto br0\niface br0 inet dhcp\n        bridge-ports enp1s0\n</code></pre> <p>Donde vemos como hemos configurado la interfaz f\u00edsica <code>enp1s0</code> de tipo <code>manual</code> para que no tome direccionamiento. Adem\u00e1s hemos declarado nuestro puente <code>br0</code> para que tome direccionamiento de forma din\u00e1mica y hemos indicado que tendr\u00e1 una interfaz conectada (<code>bridge-ports</code>) que ser\u00e1 la f\u00edsica (<code>enp1s0</code>).</p> <p>Finalmente, reiniciamos la red como superusuario:</p> <pre><code>ifdown enp1s0\nsystemctl restart networking.service\n</code></pre> <p>Y comprobamos:</p> <pre><code>ip a\n...\n2: enp1s0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast master br0 state UP group default qlen 1000\n    link/ether 52:54:00:22:d7:3f brd ff:ff:ff:ff:ff:ff\n3: br0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000\n    link/ether 92:d8:69:79:60:69 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.121.169/24 brd 192.168.121.255 scope global dynamic br0\n       valid_lft 3595sec preferred_lft 3595sec\n</code></pre> <p>Podemos comprobar los puentes que tenemos creados y las interfaces que est\u00e1n conectados a \u00e9l, ejecutando la siguiente instrucci\u00f3n:</p> <pre><code>brctl show\nbridge name bridge id       STP enabled interfaces\nbr0     8000.7eb448933f70   no      enp1s0\n</code></pre>"},{"location":"01.-KVM/07.-Redes/bridge/#creacion-de-un-bridge-externo-en-ubuntu","title":"Creaci\u00f3n de un bridge externo en Ubuntu","text":"<p>En Ubuntu vamos a configurar el fichero <code>/etc/netplan/01-network-manager-all.yaml</code> de la siguiente forma:</p> <pre><code># Let NetworkManager manage all devices on this system\nnetwork:\n  version: 2\n  renderer: networkd\n  ethernets:\n    enp1s0:\n      dhcp4: no\n  bridges:\n    br0:\n      dhcp4: yes\n      interfaces:\n             - enp1s0\n</code></pre> <p>Y reiniciamos la red ejecutando:</p> <pre><code>sudo netplan apply\n</code></pre>"},{"location":"01.-KVM/07.-Redes/configuracion/","title":"Configuraci\u00f3n de red en las m\u00e1quinas virtuales","text":"<p>Todas las m\u00e1quinas que hemos creado durante el curso se han conectado de forma predeterminada a la red <code>default</code>. </p> <p>Sin embargo, en este apartado vamos a aprender algunas cosas nuevas: a crear m\u00e1quinas virtuales conectadas a otras redes definidas por el usuario y a a\u00f1adir interfaces de red a m\u00e1quinas virtuales ya existentes.</p>"},{"location":"01.-KVM/07.-Redes/configuracion/#crear-maquinas-virtuales-conectada-a-una-red-existente","title":"Crear m\u00e1quinas virtuales conectada a una red existente","text":"<p>Para crear una m\u00e1quina virtual conectada, por ejemplo, a la red <code>red_nat</code>, podemos usar <code>virt-install</code>:</p> <pre><code>virt-install --connect qemu:///system \\\n             --virt-type kvm \\\n             --name prueba5 \\\n             --cdrom ~/iso/debian-11.3.0-amd64-netinst.iso \\\n             --os-variant debian10 \\\n             --network network=red_nat \\\n             --disk size=10 \\\n             --memory 1024 \\\n             --vcpus 1\n</code></pre> <ul> <li>Con la opci\u00f3n <code>--network network=red_nat</code> indicamos que la m\u00e1quina tendr\u00e1 una interfaz de red conectada a la red cuyo nombre es <code>red_nat</code>.</li> <li>Para conectar una m\u00e1quina a una red tambi\u00e9n podemos indicar el bridge virtual al que queremos conectarla. en este caso utilizar\u00edamos la opci\u00f3n <code>--network bridge=virbr1</code>. <code>vribr1</code> es el bridge virtual que gestiona la red <code>red_nat</code>.</li> <li>Si indicamos varios par\u00e1metros <code>--network</code>, estar\u00edamos a\u00f1adiendo a la nueva m\u00e1quina varias interfaces de red.</li> </ul> <p>Si utilizamos <code>virt-manager</code>, para crear la nueva m\u00e1quina, durante el asistente de creaci\u00f3n de la m\u00e1quina, el el \u00faltimo paso, podemos escoger la red a la que nos vamos a conectar:</p> <p></p> <p>Tambi\u00e9n podemos escoger el puente virtual al que nos queremos conectar:</p> <p></p>"},{"location":"01.-KVM/07.-Redes/configuracion/#anadir-nuevas-interfaces-de-red-a-maquinas-virtuales","title":"A\u00f1adir nuevas interfaces de red a m\u00e1quinas virtuales","text":"<p>Para a\u00f1adir una nueva interfaz de red a una m\u00e1quina virtual, vamos a modificar su definici\u00f3n XML. Podr\u00edamos usar <code>virsh edit</code> e incluir la definici\u00f3n XML de la nueva interfaz. Sin embargo, vamos a usar un comando de <code>virsh</code> que nos facilita la operaci\u00f3n de a\u00f1adir una nueva interfaz de red y por tanto, la modificaci\u00f3n de la definici\u00f3n XML de la m\u00e1quina. Es recomendable hacer esta operaci\u00f3n con la m\u00e1quina parada.</p> <p>Por lo tanto, vamos a a\u00f1adir a la m\u00e1quina <code>prueba4</code> una interfaz de red conectada a la red <code>red_nat</code>. Para ello, ejecutamos:</p> <pre><code>virsh -c qemu:///system attach-interface prueba4 network red_nat --model virtio --persistent\nLa interfaz ha sido asociada exitosamente\n</code></pre> <p>Si la m\u00e1quina virtual no tiene entorno gr\u00e1fico y por tanto no tiene instalado el programa <code>NetworkManager</code> habr\u00e1 que acceder a ella y configurar la nueva interfaz de red.</p> <p>En nuestro caso es una m\u00e1quina virtual con Debian 11, donde se ha creado un  interfaz con el nombre <code>enp10s0</code>. Para configurarla modificamos el fichero <code>/etc/network/interfaces</code>:</p> <p></p> <p>Levantamos la interfaz y comprobamos que la nueva interfaz de red ha tomado configuraci\u00f3n de red en el direccionamiento que hab\u00edamos configura en la red <code>red_nat</code>:</p> <p></p> <p>Adem\u00e1s, podr\u00edamos ver la configuraci\u00f3n de las interfaces de red con el comando <code>virsh</code>:</p> <pre><code>virsh -c qemu:///system domifaddr prueba4\n Nombre     direcci\u00f3n MAC       Protocol     Address\n-------------------------------------------------------------------------------\n vnet7      52:54:00:d6:0a:19    ipv4         192.168.122.201/24\n vnet8      52:54:00:2a:37:fc    ipv4         192.168.123.225/24\n</code></pre> <p>Podr\u00edamos a\u00f1adir una nueva interfaz de red indicando el puente virtual al que queremos realizar la conexi\u00f3n. En este caso tendr\u00edamos que ejecutar la misma instrucci\u00f3n pero el tipo de la conexi\u00f3n ser\u00e1 <code>bridge</code>:</p> <pre><code>virsh -c qemu:///system attach-interface prueba4 bridge virbr1 --model virtio --persistent\nLa interfaz ha sido asociada exitosamente\n</code></pre> <p>Y comprobamos que tenemos una tercera interfaz:</p> <pre><code>virsh -c qemu:///system domiflist prueba4\n Interfaz   Tipo      Fuente    Modelo   MAC\n------------------------------------------------------------\n -          network   default   virtio   52:54:00:d6:0a:19\n -          network   red_nat   virtio   52:54:00:2a:37:fc\n -          bridge    virbr1    virtio   52:54:00:0c:06:2a\n</code></pre> <p>Por \u00faltimo indicar que si queremos desconectar una interfaz de red tenemos que indicar el tipo (<code>network</code> o <code>bridge</code>) y la direcci\u00f3n MAC:</p> <pre><code>virsh -c qemu:///system detach-interface prueba4 bridge --mac 52:54:00:0c:06:2a --persistent \nLa interfaz ha sido desmontada exitosamente\n</code></pre> <p>Tambi\u00e9n lo podemos hacer desde <code>virt-manager</code>. Si a\u00f1adimos nuevo hardware en la vista detalle de la m\u00e1quina, podemos a\u00f1adir una nueva conexi\u00f3n indicando la red:</p> <p></p> <p>O indicando el puente virtual donde nos vamos a conectar:</p> <p></p> <p>Tambi\u00e9n podemos modificar en cualquier momento a la red o al puente al que estamos conectado, modificando la interfaz de red desde la vista detalles:</p> <p></p> <p>Para eliminar la interfaz de red desde <code>virt-manager</code> simplemente pulsar\u00edamos con el bot\u00f3n derecho sobre el dispositivo de red en la vista detalle, y pulsar\u00edamos sobre Eliminar Hardware.</p>"},{"location":"01.-KVM/07.-Redes/configuracion/#consideraciones-finales","title":"Consideraciones finales","text":"<ul> <li>Si conectamos una m\u00e1quina virtual a una Red de tipo Aislada, tendremos que configurar de forma est\u00e1tica la interfaz y poner el mismo direccionamiento que hemos configurado para el host. Por ejemplo, para la red <code>red_aislada</code> usamos el direccionamiento <code>192.168.123.0/224</code> y la direcci\u00f3n que le asignamos al host fue <code>192.168.123.1</code>. Otras m\u00e1quinas conectadas a esta red tendr\u00e1n que estar configurada con el mismo direccionamiento.</li> <li>Si conectamos una m\u00e1quina virtual a una Red de tipo Muy Aislada, tendremos que configurar de forma est\u00e1tica la interfaz y poner el direccionamiento que nos interese. Normalmente todas las m\u00e1quinas conectada a esta red tendr\u00e1n el mismo direccionamiento para que tengan conectividad entre ellas.</li> <li> <p>Si conectamos a una Red de tipo Bridge conectada a un bridge externo, la m\u00e1quina virtual se configurar\u00e1 con el mismo direccionamiento que el host. En mis caso, trabajo con la red local <code>172.22.0.0/16</code>, si conecto la m\u00e1quina <code>prueba2</code> (tiene instalada un Ubuntu con NetworkManager) al bridge externo <code>br0</code>, tomar\u00e1 la siguiente configuraci\u00f3n:</p> <p><code>virsh -c qemu:///system attach-interface prueba2 bridge br0 --model virtio --persistent La interfaz ha sido asociada exitosamente</code></p> <p>Iniciamos la m\u00e1quina y comprobamos como la interfaz que acabamos de a\u00f1adir se configura con el direccionamiento de la red local. Esta en la misma red que el host:</p> <p></p> </li> <li> <p>Finalmente, si conectamos a una Red de tipo Bridge compartiendo la interfaz f\u00edsica del host tambi\u00e9n se debe configurar en la misma red local del host. Para realizar la conexi\u00f3n podr\u00edamos conectarnos a la red <code>red_interface</code> como hemos anteriormente. Desde <code>virt-manager</code> tambi\u00e9n podemos hacer la conexi\u00f3n indicando el dispositivo f\u00edsico que vamos a usar:</p> <p></p> <p>Iniciamos la m\u00e1quina y comprobamos:</p> <p></p> </li> </ul>"},{"location":"01.-KVM/07.-Redes/puentes/","title":"Gesti\u00f3n de Redes Puentes (P\u00fablicas)","text":"<p>En este apartado vamos  a estudiar como trabajar con las redes puentes.</p>"},{"location":"01.-KVM/07.-Redes/puentes/#gestion-de-redes-puentes-conectadas-a-un-bridge-externo-con-virsh","title":"Gesti\u00f3n de Redes Puentes conectadas a un bridge externo con virsh","text":"<p>Partimos de que en el host tenemos creado un bridge virtual (que se suele llamar <code>br0</code>) al que est\u00e1 conectado el host. Las m\u00e1quinas virtuales se conectar\u00e1n en ese bridge y tomar\u00e1n configuraci\u00f3n de red de la misma red a la que est\u00e1 conectada el host. La definici\u00f3n quedar\u00eda de la siguiente manera.</p> <p>La configuraci\u00f3n la tenemos en el fichero <code>red-bridge.xml</code>, con el contenido:</p> <pre><code>&lt;network&gt;\n  &lt;name&gt;red_bridge&lt;/name&gt;\n  &lt;forward mode=\"bridge\"/&gt;\n  &lt;bridge name=\"br0\"/&gt;\n&lt;/network&gt;\n</code></pre> <ul> <li>El modo de forward se indica como <code>bridge</code>.</li> <li>Y en la etiqueta <code>bridge</code> se pone el nombre del bridge virtual que estamos usando.</li> </ul> <p>Para crear esta nueva red, ejecutamos:</p> <pre><code>virsh -c qemu:///system net-define red-bridge.xml \nLa red red_bridge se encuentra definida desde red-bridge.xml\n</code></pre> <p>La iniciamos:</p> <pre><code>virsh -c qemu:///system net-start red_bridge\nLa red red_bridge se ha iniciado\n</code></pre> <p>Y podemos ver que se ha creado:</p> <pre><code>virsh -c qemu:///system net-list --all\n Nombre            Estado     Inicio autom\u00e1tico   Persistente\n---------------------------------------------------------------\n default           activo     si                  si\n red_aislada       activo     si                  si\n red_bridge        inactivo   no                  si\n red_muy_aislada   inactivo   no                  si\n red_nat           activo     si                  si\n ```\n\n Desde `virt-manager` no podemos crear una red de este tipo. De todas formas veremos que podemos conectar una m\u00e1quina virtual directamente al bridge `br0` con lo que ser\u00e1 lo mismo que usar la red.\n\n##  Redes Puente compartiendo la interfaz f\u00edsica del host\n\nEn este caso vamos a usar una conexi\u00f3n macvtap, que nos permite conectarnos a la red f\u00edsica directamente a trav\u00e9s de una interfaz f\u00edsica del host (sin usar un dispositivo bridge). Al igual que con la red anterior, las m\u00e1quinas virtuales estar\u00e1n conectados directamente a la red f\u00edsica, por lo que sus direcciones IP estar\u00e1n todas en la subred de la red f\u00edsica. \nLa definici\u00f3n de este tipo de red le hemos guardado en el fichero `red-interface.xml` y ser\u00eda la siguiente:\n\n```xml\n&lt;network&gt;\n  &lt;name&gt;red_interface&lt;/name&gt;\n  &lt;forward mode=\"bridge\"&gt;\n    &lt;interface dev=\"enp1s0\"/&gt;\n  &lt;/forward&gt;\n&lt;/network&gt;\n</code></pre> <p>Es similar a la anterior, pero se utiliza la etiqueta <code>&lt;interface&gt;</code> para indicar el nombre de la interfaz de red f\u00edsica que vamos a utilizar.</p> <p>Para utilizar este tipo de red, la interfaz que utilicemos no puede estar conectado a un puente virtual.</p>"},{"location":"01.-KVM/07.-Redes/virtuales/","title":"Gesti\u00f3n de Redes Virtuales","text":"<p>En este apartado vamos  a estudiar como trabajar con las redes virtuales con <code>virsh</code> y <code>virt-manager</code>.</p>"},{"location":"01.-KVM/07.-Redes/virtuales/#gestion-de-redes-virtuales-con-virsh","title":"Gesti\u00f3n de Redes Virtuales con virsh","text":"<p>Podemos ver las redes que tenemos definidas ejecutando:</p> <pre><code>virsh -c qemu:///system net-list --all\n Nombre    Estado   Inicio autom\u00e1tico   Persistente\n-----------------------------------------------------\n default   activo   si                  si\n</code></pre> <p>Utilizamos la opci\u00f3n <code>--all</code> para listar las redes iniciadas y paradas.</p> <p>Las redes se crean a partir de su definici\u00f3n XML que tenemos guardado en un fichero. En este caso tenemos el fichero <code>red-nat.xml</code>, donde tenemos la definici\u00f3n de una red virtual de tipo NAT, con el siguiente contenido:</p> <pre><code>&lt;network&gt;\n  &lt;name&gt;red_nat&lt;/name&gt;\n  &lt;bridge name='virbr1'/&gt;\n  &lt;forward/&gt;\n  &lt;ip address='192.168.123.1' netmask='255.255.255.0'&gt;\n    &lt;dhcp&gt;\n      &lt;range start='192.168.123.2' end='192.168.123.254'/&gt;\n    &lt;/dhcp&gt;\n  &lt;/ip&gt;\n&lt;/network&gt;\n</code></pre> <p>Para crear la nueva red, ejecutamos:</p> <pre><code>virsh -c qemu:///system net-define red-nat.xml\nLa red red_nat se encuentra definida desde red-nat.xml\n</code></pre> <p>Si utilizamos el comando <code>virsh create</code> estar\u00edamos creando la red de forma temporal, no persistente.</p> <p>La red no se puede utilizar hasta que no se inicie, para ello:</p> <pre><code>virsh -c qemu:///system net-start red_nat\nLa red red_nat se ha iniciado\n</code></pre> <p>Si vamos a usar esta red con mucha frecuencia es recomendable activar la propiedad de autoiniciar para que se inicie de forma autom\u00e1tica al iniciar el host. Para ello:</p> <pre><code>virsh -c qemu:///system net-autostart red_nat\nLa red red_nat ha sido marcada para iniciarse autom\u00e1ticamente\n</code></pre> <p>Podemos obtener informaci\u00f3n de la red ejecutando:</p> <pre><code>virsh -c qemu:///system net-info red_nat\nNombre:         red_nat\nUUID:           af756f61-9ffd-44d0-850f-90a75db773c1\nActivar:        si\nPersistente:    si\nAutoinicio:     si\nPuente:         virbr1\n</code></pre> <p>Al iniciar podemos comprobar que se ha creado el bridge virtual y una nueva interfaz de red en el host.</p> <pre><code>sudo brctl show\nbridge name bridge id       STP enabled interfaces\nvirbr0      8000.525400aea33d   yes     \nvirbr1      8000.5254002daec2   yes \n</code></pre> <p>En el host, el bridge virtual aparece como una interfaz de red:</p> <pre><code>ip a\n...\n4: virbr0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default qlen 1000\n    link/ether 52:54:00:ae:a3:3d brd ff:ff:ff:ff:ff:ff\n    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0\n       valid_lft forever preferred_lft forever\n5: virbr1: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default qlen 1000\n    link/ether 52:54:00:2d:ae:c2 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.123.1/24 brd 192.168.123.255 scope global virbr1\n       valid_lft forever preferred_lft forever\n</code></pre> <p>Podemos considerar que la interfaz de red del bridge virtual corresponde a la conexi\u00f3n del host con el bridge.</p> <p>Para ver la definici\u00f3n XML de la red que hemos creado, ejecutamos:</p> <pre><code>virsh -c qemu:///system net-dumpxml red_nat\n</code></pre> <p>Podemos crear tambi\u00e9n una red muy aislada de la que tenemos guardada la definici\u00f3n XML en el fichero <code>red-muy-aislada.xml</code>, con el contenido:</p> <pre><code>&lt;network&gt;\n  &lt;name&gt;red_muy_aislada&lt;/name&gt;\n  &lt;bridge name='virbr2'/&gt;\n&lt;/network&gt;\n</code></pre> <p>Y si la creamos y la iniciamos:</p> <pre><code>virsh -c qemu:///system net-define red-muy-aislada.xml\nLa red red_muy_aislada se encuentra definida desde red-muy-aislada.xml\n\nvirsh -c qemu:///system net-start red_muy_aislada\nLa red red_muy_aislada se ha iniciado\n</code></pre> <p>Comprobamos que se ha creado el bridge virtual. </p> <pre><code>sudo brctl show\nbridge name bridge id       STP enabled interfaces\nvirbr0      8000.525400aea33d   yes     \nvirbr1      8000.5254002daec2   yes     \nvirbr2      8000.525400d51f31   yes\n</code></pre> <p>Pero al ser una red muy aislada, el host no est\u00e1 conectado al bridge, y por lo tanto no tiene direcci\u00f3n IP asignada:</p> <pre><code>ip a\n...\n6: virbr2: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default qlen 1000\n    link/ether 52:54:00:d5:1f:31 brd ff:ff:ff:ff:ff:\n</code></pre> <p>Finalmente indicar que para parar una red utilizamos el comando <code>virsh net-stop</code> y para eliminarla el comando <code>virsh undefined</code>.</p>"},{"location":"01.-KVM/07.-Redes/virtuales/#gestion-de-redes-virtuales-con-virt-manager","title":"Gesti\u00f3n de Redes Virtuales con virt-manager","text":"<p>Desde la pesta\u00f1a Redes virtuales de los Detalles de la conexi\u00f3n podemos ver las redes que tenemos creadas y podemos gestionarlas:</p> <p></p> <p>Tenemos las siguientes opciones:</p> <ul> <li>Bot\u00f3n 1: A\u00f1adir una nueva red.</li> <li>Bot\u00f3n 2: Iniciar la red seleccionada.</li> <li>Bot\u00f3n 3: Parar la red seleccionada.</li> <li>Bot\u00f3n 4: Eliminar la red seleccionada.</li> </ul> <p>Si creamos una red, indicamos un nombre, el tipo y la configuraci\u00f3n. Por ejemplo, vamos a crear una red de tipo aislada con servidor DHCP:</p> <p></p> <p>Una vez creado, observamos que est\u00e1 iniciado y que tiene marcada como activa la propiedad de autoiniciar. Adem\u00e1s observamos que el nombre del bridge lo ah asignado de forma autom\u00e1tica:</p> <p></p> <p>Por \u00faltimo, recordar que desde <code>virt-manager</code> podemos ver la definici\u00f3n XML de los recursos con los que trabajamos:</p> <p></p>"},{"location":"01.-KVM/08.-LXC/almacenamiento/","title":"Almacenamiento en LXC","text":"<p>Veamos c\u00f3mo montar un directorio del host en un contenedor. Imaginemos que tenemos el directorio <code>/opt/contenedor1</code> con un fichero <code>index.html</code> y lo queremos montar en el <code>contenedor1</code> en el directorio <code>/srv/www</code>. Tenemos que tener en cuenta los siguiente:</p> <p>El directorio de montaje debe existir en el contenedor:</p> <pre><code>$ lxc-attach contenedor1\nroot@contenedor1:~# cd /srv\nroot@contenedor1:/srv# mkdir www\n</code></pre> <p>En el fichero de configuraci\u00f3n del contenedor (<code>/var/lib/lxc/contenedor1/config</code>) a\u00f1adimos la siguiente l\u00ednea:</p> <pre><code>lxc.mount.entry=/opt/contenedor1 srv/www none bind 0 0\n</code></pre> <p>Hay que tener en cuenta que al indicar el directorio de montaje hay que usar una ruta relativa (es relativa al directorio donde se encuentra el sistema de fichero del contenedor, en este caso <code>/var/lib/lxc/contenedor1/rootfs/</code>).</p> <p>Reiniciamos el contenedor y comprobamos que se ha montado el directorio de forma correcta:</p> <pre><code>$ lxc-stop contenedor1\n$ lxc-start contenedor1\n$ lxc-attach contenedor1\nroot@contenedor1:~# cd /srv/www\nroot@contenedor1:/srv/www# ls\nindex.html\n</code></pre>"},{"location":"01.-KVM/08.-LXC/configuracion/","title":"Configuraci\u00f3n de contenedores LXC","text":"<p>El fichero <code>/etc/lxc/default.conf</code> contiene la configuraci\u00f3n general que van a tener los contenedores que creemos. Su contenido es el siguiente:</p> <pre><code>lxc.net.0.type = veth\nlxc.net.0.link = lxcbr0\nlxc.net.0.flags = up\n\nlxc.apparmor.profile = generated\nlxc.apparmor.allow_nesting = 1\n</code></pre> <p>Como vemos se indica a qu\u00e9 red se va a conectar (<code>lxc.net.</code>). Una vez creado un contenedor, el contenido de este fichero se copia a su fichero de configuraci\u00f3n (al que se a\u00f1aden otras configuraciones por defecto). Por ejemplo el fichero de configuraci\u00f3n del contenedor <code>contenedor1</code> lo encontramos en el fichero <code>/var/lib/lxc/contenedor1/config</code>. en este caso, su contenido es:</p> <pre><code>lxc.net.0.type = veth\nlxc.net.0.hwaddr = 00:16:3e:cf:8f:c3\nlxc.net.0.link = lxcbr0\nlxc.net.0.flags = up\nlxc.apparmor.profile = generated\nlxc.apparmor.allow_nesting = 1\nlxc.rootfs.path = dir:/var/lib/lxc/contenedor1/rootfs\n\n# Common configuration\nlxc.include = /usr/share/lxc/config/debian.common.conf\n\n# Container specific configuration\nlxc.tty.max = 4\nlxc.uts.name = contenedor1\nlxc.arch = amd64\nlxc.pty.max = 1024\n</code></pre> <p>Vemos que se han copiado los par\u00e1metros de la configuraci\u00f3n general (<code>/etc/lxc/default.conf</code>) y se han a\u00f1adido nuevos par\u00e1metros: n\u00famero m\u00e1ximo de terminales (<code>lxc.tty.max</code>,<code>lxc.pty.max</code>), nombre del contenedor (<code>lxc.uts.name</code>), arquitectura (<code>lxc.arch</code>), ubicaci\u00f3n del sistema de fichero (<code>lxc.rootfs.path</code>), ...</p> <p>Puedes ver los distintos par\u00e1metros que podemos incluir en la documentaci\u00f3n oficial. Por ejemplo si queremos que los contenedores se inicien autom\u00e1ticamente al iniciar el host podr\u00edamos:</p> <pre><code>lxc.start.auto = 1\n</code></pre> <p>Recuerda que tenemos dos opciones:</p> <ol> <li>Si escribimos el par\u00e1metro en la configuraci\u00f3n general, en el fichero <code>/etc/lxc/default.conf</code>, afectar\u00e1 a los contenedores que se creen nuevos.</li> <li>Si queremos modificar la configuraci\u00f3n de un contenedor ya creado, tenemos que incluir el par\u00e1metro en su fichero de configuraci\u00f3n, por ejemplo para el <code>contenedor1</code> en <code>/var/lib/lxc/contenedor1/config</code>.</li> </ol>"},{"location":"01.-KVM/08.-LXC/configuracion/#obteniendo-informacion-de-un-contenedor","title":"Obteniendo informaci\u00f3n de un contenedor","text":"<p>Para obtener informaci\u00f3n de un contenedor podemos ejecutar:</p> <pre><code>$ lxc-info contenedor1\nName:           contenedor1\nState:          RUNNING\nPID:            12587\nIP:             10.0.3.180\nLink:           vethuLaHzY\n TX bytes:      1.70 KiB\n RX bytes:      3.80 KiB\n Total bytes:   5.50 KiB\n</code></pre> <p>Con la opci\u00f3n <code>-i</code> s\u00f3lo nos da  la direcci\u00f3n ip, con la opci\u00f3n <code>-S</code> nos da la estad\u00edstica de informaci\u00f3n enviada y recibida por la interfaz de red y con la opci\u00f3n <code>-s</code> nos da informaci\u00f3n del estado.</p>"},{"location":"01.-KVM/08.-LXC/configuracion/#limitando-los-recursos-para-los-contenedores-lxc","title":"Limitando los recursos para los contenedores LXC","text":"<p>Por defectos los contenedores LXC pueden usar todos los recursos de CPU, RAM, disco del host. Podemos limitar estos recursos. El componente del n\u00facleo que posibilita limitar los recursos para cada contenedor son los Grupos de control cgroups, en concreto en Debian 11 y Debian 12 se utiliza cgroupsv2.</p> <p>Lo primero es que tenemos que habilitar la modificaci\u00f3n de la memoria en los Grupos de control (cgroups). Para ello tenemos que a\u00f1adir al fichero <code>/etc/default/grub</code> la siguiente informaci\u00f3n: a\u00f1adimos al par\u00e1metro <code>GRUB_CMDLINE_LINUX_DEFAULT</code> el valor <code>cgroup_enable=memory</code>. Para que tenga este cambio efecto, reiniciamos la m\u00e1quina.</p> <p>Vamos a limitar el uso de memoria RAM (512Mb) y de n\u00famero de procesadores (1 CPU: la CPU 0) (en la m\u00e1quina donde estoy corriendo los contenedores tenemos 2Gb de RAM y 2 CPUs), para ello en el fichero de configuraci\u00f3n del <code>contenedor1</code> indicamos los siguientes par\u00e1metros:</p> <pre><code>lxc.cgroup2.memory.max = 512M\nlxc.cgroup2.cpuset.cpus = 0\n</code></pre> <p>Reiniciamos el contenedor y comprobamos que se ha llevado a efecto el cambio:</p> <pre><code>$ lxc-stop contenedor1\n$ lxc-start contenedor1\n\n$ lxc-attach contenedor1 -- free -h\n               total        used        free      shared  buff/cache   available\nMem:           512Mi       6.0Mi       505Mi       0.0Ki       0.0Ki       505Mi\n\n$ lxc-attach contenedor1 -- cat /proc/cpuinfo \nprocessor   : 0\n...\n</code></pre> <p>Aparece un s\u00f3lo procesador.</p>"},{"location":"01.-KVM/08.-LXC/creacion/","title":"Creaci\u00f3n y gesti\u00f3n de contenedores LXC","text":"<p>Al crear un contenedor se bajar\u00e1 el sistema de archivos que formar\u00e1 parte de \u00e9l. La primera vez que bajamos con <code>debootstrap</code> una versi\u00f3n de un sistema operativo se descargar\u00e1 un sistema de archivo m\u00ednimo del sistema (que llamamos plantilla) que servir\u00e1 para crear todos los contenedores que creemos de la misma versi\u00f3n del sistema.</p> <p>La creaci\u00f3n de un contenedor con la \u00faltima versi\u00f3n de debian, se realiza con la instrucci\u00f3n (ejecutada como <code>root</code>):</p> <pre><code>$ lxc-create -n contenedor1 -t debian -- -r bullseye\n</code></pre> <ul> <li><code>-n</code>: Nombre del contenedor.</li> <li><code>-t</code>: Nombre de la plantilla.</li> <li><code>-r</code>: Es una opci\u00f3n de la plantilla. Es el nombre de la versi\u00f3n del sistema operativo. Para ver m\u00e1s opciones de una plantilla ejecutamos: <code>lxc-create -t debian -h</code>.</li> </ul> <p>Podemos comprobar que se ha creado un contenedor, ejecutando:</p> <pre><code>$ lxc-ls\ncontenedor1 \n</code></pre> <p>La plantilla que hemos descargado se guarda en <code>/var/cache/lxc/debian/rootfs-bullseye-amd64/</code>. Esta copia del sistema de archivo se utilizar\u00e1 cuando creemos otro contenedor con el mismo sistema operativo. El sistema de archivo del <code>contenedor1</code> se guarda en <code>/var/lib/lxc/contenedor1/rootfs/</code>.</p> <p>Ahora podemos iniciar la ejecuci\u00f3n del contenedor, comprobar que est\u00e1 funcionando y acceder a \u00e9l:</p> <pre><code>$ lxc-start contenedor1\n$ lxc-ls -f\nNAME        STATE   AUTOSTART GROUPS IPV4       IPV6 UNPRIVILEGED \ncontenedor1 RUNNING 0         -      10.0.3.180 -    false        \n$ lxc-attach contenedor1\nroot@contenedor1:~# \n</code></pre> <p>Iniciamos el contenedor con <code>lxc-start</code>, comprobamos los contenedores que tenemos creados con <code>lxc-ls</code> con la opci\u00f3n <code>-f</code> nos da m\u00e1s informaci\u00f3n (vemos que est\u00e1 ejecut\u00e1ndose, que no se ejecuta al inicio, que ha tomado una direcci\u00f3n ip y que es privilegiado). Por \u00faltimo nos hemos conectado al contenedor con <code>lxc-attach</code>.</p> <p>Podemos parar el contenedor con <code>lxc-stop</code> y eliminar el contenedor con <code>lxc-destroy</code>.</p> <p>Para visualizar todas las plantillas que podemos descargar, ejecutamos:</p> <pre><code>$ ls /usr/share/lxc/templates/\nlxc-alpine    lxc-archlinux  lxc-centos  lxc-debian    lxc-fedora     lxc-gentoo  lxc-oci       lxc-opensuse  lxc-plamo  lxc-sabayon    lxc-sparclinux  lxc-ubuntu    lxc-voidlinux\nlxc-altlinux  lxc-busybox    lxc-cirros  lxc-download  lxc-fedora-legacy  lxc-local   lxc-openmandriva  lxc-oracle    lxc-pld    lxc-slackware  lxc-sshd    lxc-ubuntu-cloud\n</code></pre> <p>Tambi\u00e9n puedes obtener la lista de plantillas en la p\u00e1gina Image server for LXC and LXD.</p>"},{"location":"01.-KVM/08.-LXC/creacion/#ejecucion-de-comandos-en-un-contenedor","title":"Ejecuci\u00f3n de comandos en un contenedor","text":"<p>Podemos ejecutar un comando en un contenedor que se est\u00e9 ejecutando de la siguiente manera:</p> <pre><code>$ lxc-attach contenedor1 -- ls -al\n</code></pre> <p>si el contenedor est\u00e1 apagado, lo har\u00edamos de la siguiente forma:</p> <pre><code>$ lxc-stop contenedor1\n$ lxc-execute contenedor1 -- ls -al\n</code></pre>"},{"location":"01.-KVM/08.-LXC/creacion/#eliminar-un-contenedor","title":"Eliminar un contenedor","text":"<p>Para eliminar un contenedor podemos ejecutar la siguiente instrucci\u00f3n con el contenedor parado:</p> <pre><code>$ lxc-destroy contendor1\n</code></pre> <p>Si el contenedor est\u00e1 inicado podemos usar el par\u00e1metro <code>-f</code> de la instracci\u00f3n <code>lxc-destroy</code> para eliminarlo.</p>"},{"location":"01.-KVM/08.-LXC/introduccion/","title":"Introducci\u00f3n a Linux Containers (LXC)","text":"<p>LinuX Containers, tambi\u00e9n conocido por el acr\u00f3nimo LXC, es una tecnolog\u00eda de virtualizaci\u00f3n ligera o por contenedores, que es un m\u00e9todo de virtualizaci\u00f3n en el que, sobre el n\u00facleo del sistema operativo se ejecuta una capa de virtualizaci\u00f3n que permite que existan m\u00faltiples instancias aisladas de espacios de usuario, en lugar de solo uno. A estas instancias la llamamos contenedores.</p> <p>LXC pertenece a los denominados contenedores de sistemas, su gesti\u00f3n y ciclo de vida es similar al de una m\u00e1quina virtual tradicional. Est\u00e1 mantenido por Canonical y la p\u00e1gina oficial es linuxcontainers.org.</p>"},{"location":"01.-KVM/08.-LXC/introduccion/#instalacion-de-lxc","title":"Instalaci\u00f3n de LXC","text":"<p>Vamos a trabajar sobre una distribuci\u00f3n GNU/Linux Debian 11. Para la instalaci\u00f3n de LXC ejecutamos:</p> <pre><code>apt install lxc\n</code></pre> <p>Podemos crear contenedores LXC privilegiados (ejecutados como root) y no privilegiados (ejecutados por un usuario normal). En este curso vamos a trabajar con contenedores privilegiados.</p>"},{"location":"01.-KVM/08.-LXC/lxd/","title":"Introducci\u00f3n a LXD","text":"<p>LXD, Linux Container Daemon, es una herramienta de gesti\u00f3n de los contenedores y m\u00e1quinas virtuales del sistema operativo Linux, desarrollada por Canonical.</p> <p>Internamente usa LXC para la gesti\u00f3n de contenedores, pero facilita el uso de los contenedores a\u00f1adiendo nuevas funcionalidades.</p> <ul> <li>LXD no trabaja con plantillas, trabaja con im\u00e1genes de sistemas operativos para crear los contenedores. Lista de im\u00e1genes.</li> <li>No ofrece soporte para diferentes backends de almacenamiento y tipos de red. Facilitando la gesti\u00f3n de red y almacenamiento.</li> <li>LXD ofrece una REST API que podemos usar con una simple herramienta de l\u00ednea de comandos o con herramientas de terceros.</li> <li>LXD gestiona instancias, que pueden ser de tipos: contenedores, usando LXC internamente, y m\u00e1quinas virtuales usando QEMU internamente.</li> </ul>"},{"location":"01.-KVM/08.-LXC/lxd/#instalacion-de-lxd","title":"Instalaci\u00f3n de LXD","text":"<p>Vamos a usar el gestor de paquetes snap (si est\u00e1s trabajando con la distribuci\u00f3n Debian 11 debes instalar el paquete <code>snapd</code>).</p> <pre><code>sudo snap install lxd\n</code></pre> <p>En la versi\u00f3n Debian 12 lo podemos instalar con <code>apt</code>:</p> <pre><code>apt install lxd\n</code></pre> <p>Antes de ejecutar una instancia (contenedor o m\u00e1quina virtual) tenemos que hacer una configuraci\u00f3n inicial de LXD, para ello ejecutamos como root:</p> <pre><code>lxd init\n</code></pre> <p>Interactivamente nos va preguntando distintos par\u00e1metros que nos permitir\u00e1n realizar la configuraci\u00f3n inicial:</p> <pre><code>Would you like to use LXD clustering? (yes/no) [default=no]: \nDo you want to configure a new storage pool? (yes/no) [default=yes]: \nName of the new storage pool [default=default]: \nName of the storage backend to use (cephobject, dir, lvm, btrfs, ceph) [default=btrfs]: dir\nWould you like to connect to a MAAS server? (yes/no) [default=no]: \nWould you like to create a new local network bridge? (yes/no) [default=yes]: \nWhat should the new bridge be called? [default=lxdbr0]: \nWhat IPv4 address should be used? (CIDR subnet notation, \u201cauto\u201d or \u201cnone\u201d) [default=auto]: \nWhat IPv6 address should be used? (CIDR subnet notation, \u201cauto\u201d or \u201cnone\u201d) [default=auto]: \nWould you like the LXD server to be available over the network? (yes/no) [default=no]: \nWould you like stale cached images to be updated automatically? (yes/no) [default=yes]: \nWould you like a YAML \"lxd init\" preseed to be printed? (yes/no) [default=no]: \n</code></pre> <p>Hemos dejado todos los valores por defecto, a excepci\u00f3n del tipo de pool de almacenamiento que he indicado que sea un directorio (dir). Tambi\u00e9n ha creado una red puente para conectar los contenedores.</p>"},{"location":"01.-KVM/08.-LXC/lxd/#creacion-de-un-contenedor","title":"Creaci\u00f3n de un contenedor","text":"<p>Para crear un contenedor, ejecutamos:</p> <pre><code>lxc launch &lt;image_server&gt;:&lt;image_name&gt; &lt;instance_name&gt;\n</code></pre> <p>Por ejemplo:</p> <pre><code>lxc launch images:ubuntu/20.04 ubuntu-container\n</code></pre>"},{"location":"01.-KVM/08.-LXC/lxd/#creacion-de-maquinas-virtuales","title":"Creaci\u00f3n de m\u00e1quinas virtuales","text":"<p>Para crear una m\u00e1quina virtual, ejecutamos:</p> <pre><code>lxc launch &lt;image_server&gt;:&lt;image_name&gt; &lt;instance_name&gt; --vm\n</code></pre> <p>Por ejemplo:</p> <pre><code>lxc launch images:ubuntu/20.04 ubuntu-vm --vm\n</code></pre> <p>Y comprobamos que hemos creado un contenedor y una m\u00e1quina virtual:</p> <pre><code>lxc list\n+------------------+---------+-------------------------+-------------------------------------------------+-----------------+-----------+\n|       NAME       |  STATE  |          IPV4           |                      IPV6                       |      TYPE       | SNAPSHOTS |\n+------------------+---------+-------------------------+-------------------------------------------------+-----------------+-----------+\n| ubuntu-container | RUNNING | 10.242.154.69 (eth0)    | fd42:40c4:7788:440e:216:3eff:fe61:66b0 (eth0)   | CONTAINER       | 0         |\n+------------------+---------+-------------------------+-------------------------------------------------+-----------------+-----------+\n| ubuntu-vm        | RUNNING | 10.242.154.119 (enp5s0) | fd42:40c4:7788:440e:216:3eff:fea3:8748 (enp5s0) | VIRTUAL-MACHINE | 0         |\n+------------------+---------+-------------------------+-------------------------------------------------+-----------------+-----------+\n</code></pre>"},{"location":"01.-KVM/08.-LXC/lxd/#gestion-de-imagenes","title":"Gesti\u00f3n de im\u00e1genes","text":"<p>En la creaci\u00f3n de las dos instancias hemos descargado dos im\u00e1genes que podemos gestionar con el subcomando <code>lxc image</code>, por ejemplo para ver las im\u00e1genes que hemos descargado:</p> <pre><code>lxc image  list\n+-------+--------------+--------+-------------------------------------+--------------+-----------------+----------+------------------------------+\n| ALIAS | FINGERPRINT  | PUBLIC |             DESCRIPTION             | ARCHITECTURE |      TYPE       |   SIZE   |         UPLOAD DATE          |\n+-------+--------------+--------+-------------------------------------+--------------+-----------------+----------+------------------------------+\n|       | 3aa3fa64e5d0 | no     | Ubuntu focal amd64 (20220911_07:42) | x86_64       | VIRTUAL-MACHINE | 230.98MB | Sep 12, 2022 at 7:28am (UTC) |\n+-------+--------------+--------+-------------------------------------+--------------+-----------------+----------+------------------------------+\n|       | 7628425e768e | no     | Ubuntu focal amd64 (20220911_07:42) | x86_64       | CONTAINER       | 110.65MB | Sep 12, 2022 at 7:22am (UTC) |\n+-------+--------------+--------+-------------------------------------+--------------+-----------------+----------+------------------------------+\n</code></pre> <p>Para m\u00e1s informaci\u00f3n ejecuta <code>lxc image --help</code>.</p>"},{"location":"01.-KVM/08.-LXC/lxd/#gestion-de-instancia","title":"Gesti\u00f3n de instancia","text":"<p>Vamos a usar la utilidad de l\u00ednea de comandos <code>lxc</code>, para ver todas las funcionalidades puedes ejecutar <code>lxc --help</code>. Veamos algunas de ella:</p> <ul> <li><code>lxc list</code>: Listar instancias. Podemos filtrar la lista, por ejemplo <code>lxc list type=container</code> o <code>lxc list ubuntu.*</code>.</li> <li><code>lxc info</code>: Nos da informaci\u00f3n de una instancia. Con la opci\u00f3n <code>--show-log</code> nos muestra los logs de la instancia.</li> <li><code>lxc start</code>: Inicia una instancia.</li> <li><code>lxc stop</code>: Detiene una instancia.</li> <li><code>lxc delete</code>: Borra una instancia.</li> </ul> <p>Si queremos ejecutar un comando en una instancia, ejecutamos:</p> <pre><code>lxc exec &lt;instance_name&gt; -- &lt;command&gt;\n</code></pre> <p>Por ejemplo:</p> <pre><code>lxc exec ubuntu-container -- apt update\n</code></pre> <p>Si queremos acceder a una shell de la instancia:</p> <pre><code>lxc exec ubuntu-container -- /bin/bash\n</code></pre> <p>Si queremos conectarnos a una instancia por una consola, ejecutamos:</p> <pre><code>lxc console &lt;instance_name&gt;\n</code></pre> <p>Nota: Deber\u00edamos configurar una contrase\u00f1a para un usuario anteriormente accediendo al bash de la instancia.</p>"},{"location":"01.-KVM/08.-LXC/lxd/#configuracion-de-las-instancias","title":"Configuraci\u00f3n de las instancias","text":"<p>Tenemos muchos par\u00e1metros de configuraci\u00f3n de las instancias, que podemos devivir en tres bloques: propiedades de las instancias, openciones de las instancias y dispositivos de las instancias.</p> <p>Al crear una instancia podemos indicar los par\u00e1metros de configuraci\u00f3n deseados, por ejemplo, si queremos limitar el n\u00famero de CPU y la memoria de un contenedor, podemos ejecutar:</p> <pre><code>lxc launch images:ubuntu/20.04 ubuntu-limited -c limits.cpu=1 -c limits.memory=192MiB\n</code></pre> <p>Con el subcomando <code>lxc config</code> podemos gestionar la configuraci\u00f3n de las instancias, por ejemplo para mostrar la configuraci\u00f3n de una instancia, ejecutamos:</p> <pre><code>lxc config show ubuntu-container\n</code></pre> <p>Por ejemplo, para cambiar un par\u00e1metro:</p> <pre><code>lxc config set ubuntu-container limits.memory=128MiB\n</code></pre>"},{"location":"01.-KVM/08.-LXC/lxd/#para-seguir-profundizando","title":"Para seguir profundizando","text":"<ul> <li>M\u00e1s informaci\u00f3n sobre la configuraci\u00f3n de instancias.</li> <li>M\u00e1s informaci\u00f3n sobre la gesti\u00f3n de im\u00e1genes.</li> <li>Con el subcomando <code>lxc network</code> gestionamos las redes. M\u00e1s informaci\u00f3n.</li> <li>Con el subcomando <code>lxc storage</code> gestionamos los pools de almacenamiento. M\u00e1s informaci\u00f3n.</li> </ul>"},{"location":"01.-KVM/08.-LXC/redes/","title":"Redes en LXC","text":"<p>LXC nos ofrece distintos mecanismos para conectar nuestros contenedores a una red. En este curso nos vamos a centrar en las conexiones de tipo bridge. Tenemos dos posibilidades:</p> <ul> <li>Podemos crear manualmente el bridge o usar libvirt para su creaci\u00f3n (podemos crear distintos tipos de redes con libvirt).</li> <li>Podemos usar <code>lxc-net</code>, servicio ofrecido por LXC, que nos facilita la creaci\u00f3n de un bridge, que por defecto se llama <code>lxcbr0</code>, y que nos ofrece una red de tipo NAT con los servicios de DHCP y DNS.</li> </ul>"},{"location":"01.-KVM/08.-LXC/redes/#redes-con-lxc-net","title":"Redes con lxc-net","text":"<p>Veamos en primer lugar la segunda opci\u00f3n. El servicio <code>lxc-net</code>  crea un bridge llamado <code>lxcbr0</code> que nos ofrece una red de tipo NAT con los servicios DHCP y DNS. Por defecto nos ofrece una red con direccionamiento <code>10.0.3.0/24</code>.</p>"},{"location":"01.-KVM/08.-LXC/redes/#conexion-de-los-contenedores-a-lxcbr0","title":"Conexi\u00f3n de los contenedores a <code>lxcbr0</code>","text":"<p>La configuraci\u00f3n por defecto posibilita que los contenedores que creemos se conecten a esta red. Lo podemos ver en la configuraci\u00f3n general, en el fichero <code>/etc/lxc/default.conf</code>:</p> <pre><code>lxc.net.0.type = veth\nlxc.net.0.link = lxcbr0\nlxc.net.0.flags = up\n...\n</code></pre> <p>Si hemos creado un contenedor llamado <code>contenedor1</code> recibir\u00e1 esta configuraci\u00f3n que podremos encontrar en su fichero de configuraci\u00f3n <code>/var/lib/lxc/contenedor1/config</code>:</p> <pre><code>lxc.net.0.type = veth\nlxc.net.0.hwaddr = 00:16:3e:cf:8f:c3\nlxc.net.0.link = lxcbr0\nlxc.net.0.flags = up\n...\n</code></pre> <p>Por lo tanto podemos comprobar que el <code>contenedor1</code> est\u00e1 conectado a esa red. Por ejemplo, si mostramos los contenedores que hemos creado, vemos que ha recibido una ip en ese rango:</p> <pre><code>$ lxc-ls -f\nNAME        STATE   AUTOSTART GROUPS IPV4       IPV6 UNPRIVILEGED \ncontenedor1 RUNNING 1         -      10.0.3.180 -    false        \n</code></pre> <p>Si accedemos al contenedor podemos hacer varias comprobaciones:</p> <pre><code>$ lxc-attach contenedor1\nroot@contenedor1:~# ip a\n...\n2: eth0@if4: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000\n    inet 10.0.3.180/24 brd 10.0.3.255 scope global dynamic eth0\n...\n\nroot@contenedor1:~# ip r\ndefault via 10.0.3.1 dev eth0 \n10.0.3.0/24 dev eth0 proto kernel scope link src 10.0.3.180 \n\nroot@contenedor1:~# cat /etc/resolv.conf \nnameserver 10.0.3.1\n\nroot@contenedor1:~# apt install iputils-ping\n...\nroot@contenedor1:~# ping www.josedomingo.org\nPING endor.josedomingo.org (37.187.119.60) 56(84) bytes of data.\n64 bytes from ns330309.ip-37-187-119.eu (37.187.119.60): icmp_seq=1 ttl=49 time=28.7 ms\n...\n</code></pre> <ol> <li>Comprobamos que se ha configurado con la ip <code>10.0.3.180</code>.</li> <li>Vemos que la puerta de enlace es la <code>10.0.3.1</code> que corresponde a nuestra m\u00e1quina f\u00edsica.</li> <li>Del mismo modo la m\u00e1quina f\u00edsica es el servidor DNS.</li> <li>Hemos instalado la herramienta <code>ping</code> y comprobamos que tenemos resoluci\u00f3n y acceso al exterior.</li> </ol>"},{"location":"01.-KVM/08.-LXC/redes/#conexion-de-los-contenedores-a-un-bridge-existente","title":"Conexi\u00f3n de los contenedores a un bridge existente","text":"<p>Imaginemos que tenemos en nuestro host instalado libvirt para manejar los recursos de KVM/QEMU y hemos creado una red con <code>virsh</code> de tipo NAT, que ha creado un bridge llamado <code>virbr0</code>, con las siguientes caracter\u00edsticas:</p> <pre><code>$ virsh net-dumpxml default\n&lt;network&gt;\n  &lt;name&gt;default&lt;/name&gt;\n  &lt;uuid&gt;c411a5a1-f998-42a9-bc8a-9a9052fc36f6&lt;/uuid&gt;\n  &lt;forward mode='nat'&gt;\n    &lt;nat&gt;\n      &lt;port start='1024' end='65535'/&gt;\n    &lt;/nat&gt;\n  &lt;/forward&gt;\n  &lt;bridge name='virbr0' stp='on' delay='0'/&gt;\n  &lt;mac address='52:54:00:fc:32:a2'/&gt;\n  &lt;ip address='192.168.122.1' netmask='255.255.255.0'&gt;\n    &lt;dhcp&gt;\n      &lt;range start='192.168.122.2' end='192.168.122.254'/&gt;\n    &lt;/dhcp&gt;\n  &lt;/ip&gt;\n&lt;/network&gt;\n</code></pre> <p>Podemos modificar el fichero de configuraci\u00f3n por defecto <code>/etc/lxc/default.conf</code>, indicando el bridge <code>virbr0</code>:</p> <pre><code>lxc.net.0.type = veth\nlxc.net.0.link = virbr0\nlxc.net.0.flags = up\n...\n</code></pre> <p>Todos los nuevos contenedores que creemos se conectar\u00e1n a la red <code>default</code>:</p> <pre><code>$ lxc-create -n contenedor2 -t debian -- -r bullseye\n$ lxc-start contenedor2\n$ lxc-ls -f\nNAME        STATE   AUTOSTART GROUPS IPV4            IPV6 UNPRIVILEGED \ncontenedor1 RUNNING 1         -      10.0.3.10       -    false        \ncontenedor2 RUNNING 1         -      192.168.122.228 -    false        \n</code></pre> <p>Vemos como el <code>contenedor2</code> ha tomado en una ip de la red <code>default</code>.</p> <p>Si quisi\u00e9ramos cambiar la conexi\u00f3n del un contenedor ya existente deber\u00edamos hacer la modificaci\u00f3n en su fichero de configuraci\u00f3n: <code>/var/lib/lxc/&lt;NOMBRE_CONTENEDOR&gt;/config</code> y reiniciar el contenedor.</p> <p>Tambi\u00e9n podr\u00edamos conectar el <code>contenedor1</code> a la red <code>default</code>, para ello vamos a a\u00f1adir la informaci\u00f3n de la conexi\u00f3n en su fichero de configuraci\u00f3n <code>/var/lib/lxc/contenedor1/config</code>:</p> <pre><code>lxc.net.0.type = veth\nlxc.net.0.hwaddr = 00:16:3e:cf:8f:c3\nlxc.net.0.link = lxcbr0\nlxc.net.0.flags = up\n\nlxc.net.1.type = veth\nlxc.net.1.hwaddr = 00:16:3e:cf:8f:d3\nlxc.net.1.link = virbr0\nlxc.net.1.flags = up\n...\n</code></pre> <p>Indicamos la segunda conexi\u00f3n utilizando el nombre de los par\u00e1metros como <code>lxc.net.1.*</code>. Adem\u00e1s hemos cambiado la mac de la segunda tarjeta de red. Ahora reiniciamos y accedemos al contenedor:</p> <pre><code>$ lxc-stop -r contenedor1\n$ lxc-attach contenedor1\nroot@contenedor1:~# apt install nano\nroot@contenedor1:~# nano /etc/network/interfaces\n</code></pre> <p>Configuramos la segunda interfaz de red:</p> <pre><code>auto lo\niface lo inet loopback\n\nauto eth0\niface eth0 inet dhcp\n\nauto eth1\niface eth1 inet dhcp\n</code></pre> <p>Y obtenemos una nueva direcci\u00f3n ip en la nueva red:</p> <pre><code>root@contenedor1:~# ifup eth1\nroot@contenedor1:~# ip a\n...\n2: eth0@if13: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000\n...\n    inet 10.0.3.10/24 brd 10.0.3.255 scope global dynamic eth0\n...\n3: eth1@if14: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000\n...\n    inet 192.168.122.196/24 brd 192.168.122.255 scope global dynamic eth1\n...\n</code></pre> <p>Si listamos los contenedores que tenemos, podemos ver las dos direcciones ip:</p> <pre><code>$ lxc-ls -f\nNAME        STATE   AUTOSTART GROUPS IPV4                        IPV6 UNPRIVILEGED \ncontenedor1 RUNNING 1         -      10.0.3.10, 192.168.122.196  -    false        \ncontenedor2 RUNNING 1         -      192.168.122.228             -    false    \n</code></pre>"},{"location":"01.-KVM/92.-Red/","title":"Index","text":"<p>Los ficheros de configuraci\u00f3n de las redes los encontraremos en:</p> <p><code>/etc/libvirt/qemu/networks/*.xml</code></p> <p>El componete principal del las redes libvirt son los  \u201cSwitches-Virtuales\u201d, conmutador de red virtual, al que las m\u00e1quinas conectaran sus NIC's virtuales (vNIC).</p> <p></p> <p>Si vemos nuestros interfaces locales veremos que tenemos uno o varios dispositivos <code>virbrX</code>, esto son los Switches-Virtuales, y un dispositivo (vnetX) por cada vNIC que este levantado en las maquinas virtuales. Aunque esto nos lo proporciona directamente virt-manager, m\u00e1s adelante veremos ex\u00e1ctamente c\u00f3mo crear las redes, en la opci\u00f3n Editar\u2192Detalles_Conexi\u00f3n dentro de la carpeta \u201cRedes Virtuales\u201d.</p> <p></p> <p>Desde la l\u00ednea de comandos podremos crear estos dispositivos de la siguiente forma:</p> <pre><code>brctl addbr // Switch Virtual\n\n// Los vNICs tipo TIN/TAP\nip tuntap add dev mode tap\nbrctl addif\n</code></pre>"},{"location":"01.-KVM/92.-Red/01.-Modos%20de%20red%20en%20KVM/","title":"01.-Modos de red en KVM","text":""},{"location":"01.-KVM/92.-Red/01.-Modos%20de%20red%20en%20KVM/#nat-network-address-translation","title":"NAT (Network Address Translation)","text":"<p>Es el modo predeterminado. Las VMs pueden acceder a la red externa, pero no son directamente accesibles desde fuera. Utiliza iptables para enmascarar el tr\u00e1fico de las VMs.</p> <ul> <li>Caso de uso: Entorno de desarrollo donde las VMs necesitan acceso a Internet pero no requieren ser accesibles desde fuera.</li> <li>Ejemplo: Un desarrollador ejecutando m\u00faltiples VMs para probar diferentes configuraciones de software.</li> </ul>"},{"location":"01.-KVM/92.-Red/01.-Modos%20de%20red%20en%20KVM/#bridge-mode","title":"Bridge Mode","text":"<p>Conecta las VMs directamente a la red f\u00edsica del host. Las VMs aparecen como dispositivos independientes en la red.</p> <ul> <li>Caso de uso: Servidores virtuales que necesitan aparecer como dispositivos independientes en la red local.</li> <li>Ejemplo: Una peque\u00f1a empresa virtualizando sus servidores de correo, web y base de datos, cada uno con su propia direcci\u00f3n IP en la LAN.</li> </ul>"},{"location":"01.-KVM/92.-Red/01.-Modos%20de%20red%20en%20KVM/#routed-mode","title":"Routed Mode","text":"<p>Crea una red virtual separada para las VMs. El host act\u00faa como router entre la red virtual y la red f\u00edsica.</p> <ul> <li>Caso de uso: Crear una subred aislada para un grupo de VMs con acceso controlado a la red principal.</li> <li>Ejemplo: Un laboratorio de pruebas de seguridad donde se necesita aislar las VMs potencialmente maliciosas.</li> </ul>"},{"location":"01.-KVM/92.-Red/01.-Modos%20de%20red%20en%20KVM/#isolated-mode","title":"Isolated Mode","text":"<p>Las VMs pueden comunicarse entre s\u00ed y con el host, pero no tienen acceso a la red externa. \u00datil para entornos de prueba o simulaciones aisladas.</p> <ul> <li>Caso de uso: Entornos de prueba completamente aislados sin acceso a redes externas.</li> <li>Ejemplo: Simulaci\u00f3n de una red corporativa para entrenamiento de personal de TI sin riesgo de afectar la red real.</li> </ul>"},{"location":"01.-KVM/92.-Red/01.-Modos%20de%20red%20en%20KVM/#macvtap","title":"MacVTap","text":"<p>Permite que las VMs se conecten directamente a la interfaz f\u00edsica del host. Ofrece mejor rendimiento que el modo bridge en algunos casos.</p> <ul> <li>Caso de uso: VMs que requieren alto rendimiento de red y acceso directo a la interfaz f\u00edsica.</li> <li>Ejemplo: Un servidor de streaming de video virtualizado que necesita m\u00e1ximo ancho de banda.</li> </ul>"},{"location":"01.-KVM/92.-Red/01.-Modos%20de%20red%20en%20KVM/#pci-passthrough","title":"PCI Passthrough","text":"<p>Asigna un dispositivo de red f\u00edsico directamente a una VM. Proporciona el mejor rendimiento, pero limita la flexibilidad.</p> <ul> <li>Caso de uso: VM que requiere acceso exclusivo y de alto rendimiento a una NIC f\u00edsica.</li> <li>Ejemplo: Un firewall virtualizado que necesita control total sobre una interfaz de red dedicada.</li> </ul>"},{"location":"01.-KVM/92.-Red/01.-Modos%20de%20red%20en%20KVM/#vlan-virtual-lan","title":"VLAN (Virtual LAN)","text":"<p>Permite crear redes virtuales separadas sobre la misma infraestructura f\u00edsica. \u00datil para aislar el tr\u00e1fico entre diferentes grupos de VMs.</p> <ul> <li>Caso de uso: Separar el tr\u00e1fico de diferentes departamentos o clientes en una infraestructura virtualizada compartida.</li> <li>Ejemplo: Un proveedor de servicios gestionados que ofrece entornos virtuales aislados para m\u00faltiples clientes.</li> </ul>"},{"location":"01.-KVM/92.-Red/01.-Modos%20de%20red%20en%20KVM/#open-vswitch","title":"Open vSwitch","text":"<p>Un switch virtual que ofrece capacidades avanzadas de networking. Soporta VLAN, t\u00faneles, y pol\u00edticas de red m\u00e1s complejas.</p> <ul> <li>Caso de uso: Implementaci\u00f3n de redes definidas por software (SDN) en un entorno de nube privada.</li> <li>Ejemplo: Un centro de datos virtualizado que requiere pol\u00edticas de red complejas y din\u00e1micas entre cientos de VMs.</li> </ul> <p>Como has podido comprobar, cada modo tiene sus propias ventajas y casos de uso  espec\u00edficos, permitiendo a los administradores de sistemas configurar la red de las VMs de manera flexible seg\u00fan las necesidades del entorno.</p>"},{"location":"01.-KVM/92.-Red/01.-Modos%20de%20red%20en%20KVM/#componentes-clave","title":"Componentes clave","text":"<ol> <li>Hipervisor: KVM convierte el kernel de Linux en un hipervisor tipo 1.</li> <li>QEMU: Emulador que trabaja en conjunto con KVM para proporcionar virtualizaci\u00f3n completa.</li> <li>libvirt: Capa de gesti\u00f3n que facilita la configuraci\u00f3n y ejecuci\u00f3n de VMs.</li> <li>Bridges: Utilizados para conectar las interfaces virtuales (TAPs) con las interfaces f\u00edsicas.</li> <li>TAPs: Interfaces de software que emulan las NICs virtuales de las VMs.</li> </ol>"},{"location":"01.-KVM/92.-Red/03.-Configuraci%C3%B3n%20de%20red%20en%20modo%20bridge/","title":"03.-Configuraci\u00f3n de red en modo bridge","text":"<p>Primero, aseg\u00farate de tener instalados los paquetes necesarios:</p> <pre><code>sudo apt install bridge-utils\n</code></pre> <p>Edita el archivo <code>/etc/network/interfaces</code> en tu host Linux para crear un bridge:</p> <pre><code>auto br0\niface br0 inet dhcp\n    bridge_ports eth0\n    bridge_stp off\n    bridge_fd 0\n</code></pre> <p>Reemplaza <code>eth0</code> con el nombre de tu interfaz de red f\u00edsica. Reinicia el servicio de red:</p> <pre><code>sudo systemctl restart networking\n</code></pre> <p>Modifica la configuraci\u00f3n de tus m\u00e1quinas virtuales:</p> <p>a. Det\u00e9n las m\u00e1quinas virtuales.</p> <p>b. Abre virt-manager.</p> <p>c. Para cada VM, ve a la configuraci\u00f3n de hardware.</p> <p>d. En la secci\u00f3n NIC, cambia la fuente de red a \"Bridge br0\".</p> <p>Inicia las m\u00e1quinas virtuales.</p>"},{"location":"01.-KVM/92.-Red/03.-Configuraci%C3%B3n%20de%20red%20en%20modo%20bridge/#verificacion","title":"Verificaci\u00f3n","text":"<p>Despu\u00e9s de estos cambios:</p> <ul> <li>Las VMs deber\u00edan obtener direcciones IP en el mismo rango que tu red local.</li> <li>Deber\u00edas poder hacer ping entre las VMs y desde las VMs al host.</li> <li>Las VMs deber\u00edan ser accesibles desde otros dispositivos en tu red local.</li> </ul>"},{"location":"01.-KVM/92.-Red/03.-Configuraci%C3%B3n%20de%20red%20en%20modo%20bridge/#consideraciones-adicionales","title":"Consideraciones adicionales","text":"<ul> <li>Aseg\u00farate de que tu firewall no est\u00e9 bloqueando el tr\u00e1fico entre las VMs.</li> <li>Si las VMs usan IPs est\u00e1ticas, config\u00faralas en el mismo rango de tu red local.</li> <li>Para una configuraci\u00f3n m\u00e1s avanzada, puedes crear un bridge personalizado en <code>libvirt</code>:</li> </ul> <pre><code>    sudo virsh net-define /path/to/bridge-network.xml\n    sudo virsh net-start bridge-network\n    sudo virsh net-autostart bridge-network\n</code></pre> <p>Donde <code>bridge-network.xml</code> contiene la definici\u00f3n de tu red bridge.</p> <p>Con esta configuraci\u00f3n, tus m\u00e1quinas virtuales deber\u00edan estar en modo bridge y podr\u00e1s hacer ping entre ellas como si fueran m\u00e1quinas f\u00edsicas en la misma red local.</p>"},{"location":"01.-KVM/92.-Red/04.-Configurar%20el%20interfaz%20puente%20con%20NetworkManager/","title":"04.-Configurar el interfaz puente con NetworkManager","text":"<p>Si tenemos el directorio <code>/etc/NetworkManager</code> en el sistema Linux indica que estamos utilizando NetworkManager para gestionar nuestras conexiones de red, lo cual es com\u00fan en muchas distribuciones Linux  modernas, incluyendo Arch. Para configurar un bridge para KVM utilizando NetworkManager, seguiremos estos pasos:</p> <ol> <li>Instalaremos los paquetes necesarios si a\u00fan no se ha hecho:</li> </ol> <pre><code>sudo pacman -S networkmanager bridge-utils\n</code></pre> <ol> <li>Crearemo un nuevo bridge usando NetworkManager:</li> </ol> <pre><code>sudo nmcli con add type bridge con-name br0 ifname br0\n</code></pre> <ol> <li>A\u00f1ada su interfaz f\u00edsica al bridge (reemplace 'eno1' con el nombre de su interfaz):</li> </ol> <pre><code>sudo nmcli con add type bridge-slave con-name eno1 ifname eno1 master br0\n</code></pre> <ol> <li>Configure el bridge para usar DHCP:</li> </ol> <pre><code>sudo nmcli con modify br0 ipv4.method auto\n</code></pre> <ol> <li>Desactive la conexi\u00f3n de la interfaz f\u00edsica y active el bridge:</li> </ol> <pre><code>sudo nmcli con down eno1\nsudo nmcli con up br0\n</code></pre> <ol> <li>Aseg\u00farese de que NetworkManager se inicie al arrancar el sistema:</li> </ol> <pre><code>bashsudo systemctl enable NetworkManager\nsudo systemctl start NetworkManager\n</code></pre> <ol> <li>Para configurar sus m\u00e1quinas virtuales KVM para usar este bridge, edite la configuraci\u00f3n XML de cada VM:</li> </ol> <pre><code>bash\nsudo virsh edit nombre_de_su_vm\n</code></pre> <p>Modifique la secci\u00f3n <code>&lt;interface&gt;</code>:</p> <pre><code>xml&lt;interface type='bridge'&gt;\n  &lt;source bridge='br0'/&gt;\n  &lt;model type='virtio'/&gt;\n&lt;/interface&gt;\n</code></pre> <ol> <li>Reinicie las m\u00e1quinas virtuales para que tomen la nueva configuraci\u00f3n:</li> </ol> <pre><code>bashsudo virsh shutdown nombre_de_su_vm\nsudo virsh start nombre_de_su_vm\n</code></pre> <p>Despu\u00e9s de estos pasos, sus m\u00e1quinas virtuales deber\u00edan obtener  direcciones IP de la red externa 172.30.0.0/16 a trav\u00e9s del bridge br0.Recuerde que al usar este m\u00e9todo, est\u00e1 exponiendo directamente sus m\u00e1quinas virtuales a la red externa, as\u00ed que aseg\u00farese de configurar  adecuadamente la seguridad de las VMs.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/","title":"05.-Configurar red en modo bridge","text":"<p>Queremos configurar nuestras m\u00e1quinas virtuales para que obtengan direcciones IP de un servidor DHCP externo mediante una red bridge en KVM/QEMU, utilizando NetworkManager en un host Linux. Opcionalmente, queremos aislar al host de la red local utilizada por las m\u00e1quinas virtuales.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#vision-general","title":"Visi\u00f3n General","text":"<ol> <li>Crear y configurar un Bridge con NetworkManager: Esto permitir\u00e1 que las m\u00e1quinas virtuales se conecten directamente a la red f\u00edsica y obtengan direcciones IP del servidor DHCP externo.</li> <li>Configurar las M\u00e1quinas Virtuales para Usar el Bridge: Asignar el bridge reci\u00e9n creado a las interfaces de red de las VMs.</li> <li>Opcional: Aislar el Host de la Red del Bridge: Implementar reglas de firewall para impedir que el host se comunique con las m\u00e1quinas virtuales en el bridge.</li> </ol>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#crear-y-configurar-un-bridge-con-networkmanager","title":"Crear y Configurar un Bridge con NetworkManager","text":""},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#identificar-la-interfaz-de-red-fisica","title":"Identificar la Interfaz de Red F\u00edsica","text":"<p>Primero, necesitamos identificar la interfaz de red f\u00edsica que est\u00e1 conectada a tu red local. Podemos hacerlo ejecutando:<code>ip a</code> \u00f3 <code>ip link</code> \u00f3 <code>nmcli</code>. Buscamos  la interfaz que est\u00e1 conectada a nuestra red, por ejemplo, <code>eth0</code>, <code>enp3s0</code>, etc.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#crear-el-bridge-utilizando-nmcli","title":"Crear el Bridge Utilizando nmcli","text":"<p>Usaremos la l\u00ednea de comandos para crear y configurar el bridge. Supongamos que nuestra interfaz f\u00edsica es <code>enp3s0</code>.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#crear-el-bridge-br0","title":"Crear el Bridge br0","text":"<pre><code>nmcli connection add type bridge autoconnect yes con-name br0 ifname br0\n</code></pre>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#agregar-la-interfaz-fisica-al-bridge","title":"Agregar la Interfaz F\u00edsica al Bridge","text":"<pre><code>nmcli connection add type bridge-slave autoconnect yes con-name enp3s0-slave ifname enp3s0 master br0\n</code></pre>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#configurar-el-bridge-para-obtener-una-ip-mediante-dhcp","title":"Configurar el Bridge para Obtener una IP mediante DHCP","text":"<p>Esto permitir\u00e1 que el bridge br0 obtenga una direcci\u00f3n IP del servidor DHCP externo.</p> <pre><code>nmcli connection modify br0 ipv4.method auto\nnmcli connection modify br0 ipv6.method ignore\n</code></pre>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#activar-las-conexiones","title":"Activar las Conexiones","text":"<pre><code>    nmcli connection up br0\n    nmcli connection up enp3s0-slave\n</code></pre>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#verificar-la-configuracion-del-bridge","title":"Verificar la Configuraci\u00f3n del Bridge","text":"<p>Despu\u00e9s de configurar el bridge, verifica que br0 est\u00e9 activo y tenga una direcci\u00f3n IP asignada:</p> <pre><code>ip addr show br0\n</code></pre> <p>Deber\u00edas ver una direcci\u00f3n IP obtenida del servidor DHCP externo.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#configurar-las-maquinas-virtuales-para-usar-el-bridge","title":"Configurar las M\u00e1quinas Virtuales para Usar el Bridge","text":"<p>Ahora, configuraremos las m\u00e1quinas virtuales para que utilicen el bridge br0 que acabas de crear, permiti\u00e9ndoles obtener direcciones IP del mismo servidor DHCP que usa el host.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#usando-virsh","title":"Usando virsh","text":""},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#apagar-la-maquina-virtual-si-esta-en-ejecucion","title":"Apagar la M\u00e1quina Virtual (si est\u00e1 en ejecuci\u00f3n):","text":"<pre><code>virsh shutdown &lt;nombre_de_vm&gt;\n</code></pre>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#editar-la-configuracion-de-la-maquina-virtual","title":"Editar la Configuraci\u00f3n de la M\u00e1quina Virtual:","text":"<p>Puedes editar el archivo XML de la VM para cambiar la interfaz de red para usar el bridge br0.</p> <pre><code>virsh edit &lt;nombre_de_vm&gt;\n</code></pre> <p>Busca la secci\u00f3n  y modif\u00edcala de la siguiente manera: <pre><code>&lt;interface type='bridge'&gt;\n  &lt;mac address='52:54:00:xx:xx:xx'/&gt;\n  &lt;source bridge='br0'/&gt;\n  &lt;model type='virtio'/&gt;\n  &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/&gt;\n&lt;/interface&gt;\n</code></pre> <p>Aseg\u00farate de reemplazar 52:54:00:xx:xx:xx con la direcci\u00f3n MAC de tu VM si es necesario.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#iniciar-la-maquina-virtual","title":"Iniciar la M\u00e1quina Virtual:","text":"<pre><code>    virsh start &lt;nombre_de_vm&gt;\n</code></pre>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#usando-virt-manager-interfaz-grafica","title":"Usando virt-manager (Interfaz Gr\u00e1fica)","text":""},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#abrir-virt-manager","title":"Abrir virt-manager:","text":"<pre><code>    virt-manager\n</code></pre>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#seleccionar-la-maquina-virtual-y-acceder-a-sus-detalles","title":"Seleccionar la M\u00e1quina Virtual y Acceder a sus Detalles:","text":"<ul> <li>Selecciona la VM que deseas configurar.</li> <li>Hacer clic derecho y seleccionar Detalles.</li> </ul>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#modificar-la-configuracion-de-la-interfaz-de-red","title":"Modificar la Configuraci\u00f3n de la Interfaz de Red:","text":"<ul> <li>En la secci\u00f3n Hardware, seleccionar NIC o Interfaz de red.</li> <li>Cambiar el tipo de conexi\u00f3n a Bridge <code>br0</code>.</li> <li>Guardar los cambios.</li> </ul>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#iniciar-la-maquina-virtual_1","title":"Iniciar la M\u00e1quina Virtual:","text":"<p>Iniciar la VM y verificar que obtiene una IP del servidor DHCP externo.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#aislar-el-host-de-la-red-del-bridge-opcional","title":"Aislar el Host de la Red del Bridge (Opcional)","text":"<p>Aunque el host est\u00e1 conectado al bridge <code>br0</code>, podemos aislarlo de las m\u00e1quinas virtuales utilizando reglas de iptables para bloquear el tr\u00e1fico entre el host y las VMs.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#identificar-el-rango-de-ip-del-bridge","title":"Identificar el Rango de IP del Bridge","text":"<p>Supongamos que el bridge <code>br0</code> est\u00e1 en la subred 192.168.1.0/24. Aseg\u00farate de ajustar las reglas seg\u00fan tu subred real.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#implementar-reglas-de-firewall-con-iptables","title":"Implementar Reglas de Firewall con iptables","text":"<p>Bloquear Todo el Tr\u00e1fico Entrante desde <code>br0</code> al Host:</p> <pre><code>sudo iptables -A INPUT -i br0 -j DROP\n</code></pre> <p>Bloquear Todo el Tr\u00e1fico Saliente desde el Host hacia <code>br0</code>:</p> <pre><code>sudo iptables -A OUTPUT -o br0 -j DROP\n</code></pre>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#guardar-las-reglas-de-iptables-para-persistencia","title":"Guardar las Reglas de iptables para Persistencia:","text":"<p>Dependiendo de tu distribuci\u00f3n, puedes usar <code>iptables-persistent</code> o guardar manualmente las reglas.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#usando-iptables-persistent","title":"Usando iptables-persistent","text":"<pre><code>        sudo pacman -S iptables-nft iptables-persistent\n        sudo netfilter-persistent save\n</code></pre>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#manual","title":"Manual","text":"<p>A\u00f1ade las reglas al archivo de configuraci\u00f3n de iptables que se carga al inicio.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#verificar-las-reglas-de-firewall","title":"Verificar las Reglas de Firewall","text":"<p>Despu\u00e9s de aplicar las reglas, verifica que est\u00e9n activas:</p> <pre><code>sudo iptables -L -v\n</code></pre> <p>Deber\u00edas ver las reglas que has a\u00f1adido en las cadenas INPUT y OUTPUT para la interfaz br0.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#consideraciones-adicionales","title":"Consideraciones Adicionales","text":""},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#permitir-trafico-saliente-desde-las-vms-hacia-internet","title":"Permitir Tr\u00e1fico Saliente desde las VMs hacia Internet","text":"<p>Si las VMs necesitan acceder a Internet, aseg\u00farate de que las reglas de firewall no bloqueen el tr\u00e1fico saliente desde br0 hacia fuera. Las reglas anteriores solo bloquean el tr\u00e1fico del host hacia y desde br0.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#limitar-el-numero-de-macs-por-puerta-de-enlace-opcional","title":"Limitar el N\u00famero de MACs por Puerta de Enlace (Opcional)","text":"<p>Algunos switches o puntos de acceso tienen l\u00edmites en la cantidad de direcciones MAC que pueden ser aprendidas por puerto. Aseg\u00farate de que tu infraestructura de red soporte m\u00faltiples MACs por puerto, que es esencial para el funcionamiento correcto del bridge con m\u00faltiples VMs.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#usar-firewalld-en-lugar-de-iptables-opcional","title":"Usar <code>firewalld</code> en lugar de <code>iptables</code> (Opcional)","text":"<p>Podemos usar <code>firewalld</code>para gestionar las reglas de firewall donde cabe implementar pol\u00edticas similares utilizando zonas y reglas espec\u00edficas.</p>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#verificacion-final","title":"Verificaci\u00f3n Final","text":"<ol> <li>Verificar la Conectividad de las VMs:</li> <li>Inicia una VM y verifica que obtiene una direcci\u00f3n IP del servidor DHCP externo.</li> <li> <p>Comprueba que la VM puede acceder a Internet y a otros recursos de la red seg\u00fan lo esperado.</p> </li> <li> <p>Verificar la Aislamiento del Host:</p> </li> <li>Desde el host, intenta hacer ping a la direcci\u00f3n IP de la VM. Deber\u00eda fallar debido a las reglas de firewall.</li> <li> <p>Desde la VM, intenta hacer ping al host. Deber\u00eda fallar tambi\u00e9n.</p> </li> <li> <p>Verificar que las VMs No Pueden Comunicarse Entre S\u00ed (Opcional):</p> </li> <li>Si deseas aislar completamente a las VMs entre s\u00ed, puedes implementar reglas adicionales de firewall o configurar la red de las VMs en modo aislado.</li> </ol>"},{"location":"01.-KVM/92.-Red/05.-Configurar%20red%20en%20modo%20bridge/#resumen","title":"Resumen","text":"<ul> <li>Hemos creado un bridge <code>br0</code> utilizando NetworkManager y asignado la interfaz f\u00edsica como esclava.</li> <li>Configuramos las m\u00e1quinas virtuales para que utilicen el bridge <code>br0</code>, permiti\u00e9ndoles obtener direcciones IP de un servidor DHCP externo.</li> <li>Implementamos reglas de firewall con <code>iptables</code> para aislar el host de la red del bridge, impidiendo la comunicaci\u00f3n entre el host y las m\u00e1quinas virtuales.</li> </ul> <p>Esta configuraci\u00f3n asegura que tus m\u00e1quinas virtuales est\u00e9n en la misma red f\u00edsica que el host y puedan obtener direcciones IP del servidor DHCP externo, mientras que el host permanece aislado de dichas m\u00e1quinas.</p>"},{"location":"01.-KVM/92.-Red/NetPlan%20vs%20Network%20Manager%20vs%20systemd/","title":"NetPlan vs Network Manager vs systemd","text":"<p>\u200b    Netplan:  </p> <p>\u200b    Netplan es un renderizador de abstracci\u00f3n de configuraci\u00f3n de red  utilizado en las versiones modernas de Ubuntu (desde 17.10). Proporciona una interfaz de configuraci\u00f3n de alto nivel basada en YAML para definir interfaces de red y configuraciones. Netplan genera archivos de  configuraci\u00f3n de red en el formato que entiende el subsistema de red  subyacente, que puede ser networkd o NetworkManager. Netplan es la forma recomendada de configurar la configuraci\u00f3n de red en Ubuntu,  independientemente de si est\u00e1 utilizando un servidor o un entorno de  escritorio. Es la herramienta de configuraci\u00f3n de front-end.  systemd-networkd (networkd):  </p> <p>\u200b    systemd-networkd es un componente de systemd, el sistema init  utilizado en Ubuntu (y muchas otras distribuciones de Linux).  Proporciona un servicio de configuraci\u00f3n de red minimalista y de bajo  nivel dise\u00f1ado para casos de uso de servidor. Networkd es adecuado para  servidores sin cabeza y otros entornos donde se necesita una soluci\u00f3n de configuraci\u00f3n de red ligera y predecible. Cuando configura la red a  trav\u00e9s de Netplan, puede optar por utilizar networkd como backend para  la gesti\u00f3n de la red. NetworkManager:  </p> <p>\u200b    NetworkManager es una soluci\u00f3n de gesti\u00f3n de red m\u00e1s completa y  f\u00e1cil de usar. Se asocia com\u00fanmente con entornos de escritorio porque  ofrece una interfaz gr\u00e1fica de usuario para administrar conexiones de  red. Sin embargo, NetworkManager no se limita al uso de escritorio.  Tambi\u00e9n se puede utilizar en servidores, especialmente si necesita  funciones de red avanzadas o si su servidor tiene una combinaci\u00f3n de  conexiones cableadas e inal\u00e1mbricas. NetworkManager tambi\u00e9n se puede  utilizar en combinaci\u00f3n con Netplan. Elegir entre networkd y  NetworkManager en servidores:  </p> <p>\u200b    Para entornos de servidor, la elecci\u00f3n entre networkd y  NetworkManager depende de sus requisitos espec\u00edficos. Si prefiere una  configuraci\u00f3n de red simple, ligera y predecible, networkd es una buena  opci\u00f3n. Es especialmente adecuado para servidores sin cabeza. Si  necesita funciones de gesti\u00f3n de red m\u00e1s avanzadas, especialmente para  manejar escenarios de red complejos o conexiones cableadas/inal\u00e1mbricas  mixtas, NetworkManager podr\u00eda ser una mejor opci\u00f3n. Puede configurar  networkd o NetworkManager como backend para Netplan especific\u00e1ndolo en  su archivo de configuraci\u00f3n YAML de Netplan (renderer: networkd o  renderer: NetworkManager). En su caso, si tiene una instalaci\u00f3n nueva de Ubuntu 20.04, es com\u00fan ver que NetworkManager maneja la configuraci\u00f3n  de red de forma predeterminada, incluso en servidores. Puede cambiar a  networkd si prefiere una configuraci\u00f3n m\u00e1s simple o si NetworkManager no cumple con sus requisitos espec\u00edficos.  </p> <p>\u200b    En resumen, si bien NetworkManager a menudo se asocia con entornos  de escritorio, es una herramienta vers\u00e1til que tambi\u00e9n se puede utilizar eficazmente en servidores, especialmente cuando se necesitan funciones  de gesti\u00f3n de red m\u00e1s avanzadas. La elecci\u00f3n entre networkd y  NetworkManager depende de su caso de uso espec\u00edfico y preferencias.  Netplan sirve como una capa de configuraci\u00f3n conveniente y estandarizada para ambos backends.  </p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/01.-Introducci%C3%B3n%20a%20las%20redes%20en%20linux/","title":"01.-Introducci\u00f3n a las redes en linux","text":"<p>Antes de sumergirnos en puentes e interfaces virtuales, es \u00fatil entender c\u00f3mo se gestionan las redes en Linux:</p> <ul> <li>Interfaces F\u00edsicas: Son las tarjetas de red reales del sistema, como <code>eth0</code>, <code>enp0s25</code>, <code>wlan0</code>, etc.</li> <li>Interfaces Virtuales: Son interfaces creadas por software para prop\u00f3sitos espec\u00edficos, como virtualizaci\u00f3n, t\u00faneles VPN, o puentes de red. Ejemplos:  <code>br0</code> (bridge), <code>vnet0</code> (interfaz de VM), <code>tun0</code> (t\u00fanel VPN), etc.</li> <li>Herramientas de Gesti\u00f3n: En Linux, puedes gestionar las redes usando herramientas como <code>ip</code>, <code>ifconfig</code> (m\u00e1s antiguo), <code>bridge-utils</code>, <code>nmcli</code> (NetworkManager), entre otras.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/02.-Puentes%20de%20Red%20%28Network%20Bridges%29/","title":"02.-Puentes de Red (Network Bridges)","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/02.-Puentes%20de%20Red%20%28Network%20Bridges%29/#que-es-un-puente-de-red","title":"\u00bfQu\u00e9 es un Puente de Red?","text":"<p>Un puente de red (bridge) es un dispositivo de red virtual que opera en la capa 2 (Enlace de Datos) del modelo OSI. Su funci\u00f3n principal es conectar m\u00faltiples segmentos de red como si fueran una sola red f\u00edsica. En t\u00e9rminos m\u00e1s simples, un bridge permite que diferentes interfaces de red se comuniquen entre s\u00ed directamente.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/02.-Puentes%20de%20Red%20%28Network%20Bridges%29/#como-funcionan-los-puentes","title":"\u00bfC\u00f3mo Funcionan los Puentes?","text":"<ul> <li>Operaci\u00f3n en Capa 2: Al funcionar en la capa de enlace de datos, los puentes trabajan con direcciones MAC para filtrar y reenviar tr\u00e1fico.</li> <li>Aprendizaje de MACs: Un bridge mantiene una tabla de direcciones MAC aprendidas, asociando cada MAC con una interfaz espec\u00edfica. Esto permite que el bridge reenv\u00ede el tr\u00e1fico solo al destino correcto, reduciendo el tr\u00e1fico innecesario.</li> <li>Transparencia: Para los dispositivos conectados al bridge, parece que est\u00e1n todos en la misma red f\u00edsica, aunque est\u00e9n conectados a diferentes interfaces f\u00edsicas o virtuales.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/02.-Puentes%20de%20Red%20%28Network%20Bridges%29/#uso-de-puentes-en-virtualizacion","title":"Uso de Puentes en Virtualizaci\u00f3n","text":"<p>En el contexto de la virtualizaci\u00f3n (como con KVM/QEMU):</p> <ul> <li>Conexi\u00f3n Directa a la Red F\u00edsica: Al conectar las interfaces de las m\u00e1quinas virtuales a un bridge, estas pueden comunicarse directamente con la red f\u00edsica, obteniendo direcciones IP del mismo servidor DHCP que el host o cualquier otro servidor en la red.</li> <li>Flexibilidad: Permite una mayor flexibilidad en la configuraci\u00f3n de redes virtuales, incluyendo la posibilidad de aislar el tr\u00e1fico entre VMs o entre el host y las VMs.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/03.-Interfaces%20Virtuales%20en%20Linux/","title":"03.-Interfaces Virtuales en Linux","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/03.-Interfaces%20Virtuales%20en%20Linux/#31-tipos-comunes-de-interfaces-virtuales","title":"3.1. Tipos Comunes de Interfaces Virtuales","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/03.-Interfaces%20Virtuales%20en%20Linux/#bridge-br0-br1","title":"Bridge (br0, br1, ...)","text":"<ul> <li>Funci\u00f3n: Conecta m\u00faltiples interfaces (f\u00edsicas y virtuales) en una sola red l\u00f3gica.</li> <li>Uso: Principal en virtualizaci\u00f3n para conectar VMs a la red f\u00edsica.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/03.-Interfaces%20Virtuales%20en%20Linux/#taptun-interfaces-tap0-tun0","title":"TAP/TUN Interfaces (tap0, tun0, ...)","text":"<ul> <li>TAP: Interfaz de red virtual que opera en la capa 2 (Ethernet).</li> <li>TUN: Interfaz de red virtual que opera en la capa 3 (IP).</li> <li>Uso: Com\u00fan en configuraciones de VPN y en virtualizaci\u00f3n para crear interfaces de red virtuales.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/03.-Interfaces%20Virtuales%20en%20Linux/#veth-pairs-veth0-veth1","title":"Veth Pairs (veth0, veth1, ...)","text":"<ul> <li>Descripci\u00f3n: Pares de interfaces virtuales conectadas entre s\u00ed, similares a un cable Ethernet.</li> <li>Uso: \u00datiles para conectar namespaces de red o contenedores.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/03.-Interfaces%20Virtuales%20en%20Linux/#vlans-eth010-eth020","title":"VLANs (eth0.10, eth0.20, ...)","text":"<ul> <li>Descripci\u00f3n: Interfaces virtuales que representan VLANs espec\u00edficas en una interfaz f\u00edsica.</li> <li>Uso: Separaci\u00f3n l\u00f3gica de tr\u00e1fico en redes corporativas.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/03.-Interfaces%20Virtuales%20en%20Linux/#32-creacion-y-gestion-de-interfaces-virtuales","title":"3.2. Creaci\u00f3n y Gesti\u00f3n de Interfaces Virtuales","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/03.-Interfaces%20Virtuales%20en%20Linux/#creacion-de-un-bridge-con-ip","title":"Creaci\u00f3n de un Bridge con ip:","text":"<pre><code>sudo ip link add name br0 type bridge\nsudo ip link set dev br0 up\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/03.-Interfaces%20Virtuales%20en%20Linux/#asignacion-de-una-ip-al-bridge","title":"Asignaci\u00f3n de una IP al Bridge:","text":"<pre><code>sudo ip addr add 192.168.1.100/24 dev br0\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/03.-Interfaces%20Virtuales%20en%20Linux/#anadir-una-interfaz-fisica-al-bridge","title":"A\u00f1adir una Interfaz F\u00edsica al Bridge:","text":"<pre><code>sudo ip link set dev enp0s25 master br0\nsudo ip link set dev enp0s25 up\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/03.-Interfaces%20Virtuales%20en%20Linux/#verificar-la-configuracion","title":"Verificar la Configuraci\u00f3n","text":"<pre><code>bridge link\nip addr show br0\n</code></pre> <ul> <li>Uso de NetworkManager (<code>nmcli</code>): NetworkManager simplifica la gesti\u00f3n de interfaces y puentes, permitiendo configuraciones m\u00e1s persistentes y f\u00e1ciles de manejar.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/","title":"04.-Gesti\u00f3n de Puentes con NetworkManager","text":"<p>NetworkManager simplifica la gesti\u00f3n de interfaces y puentes, permitiendo configuraciones m\u00e1s persistentes y f\u00e1ciles de manejar. Dado que vamos a utilizar NetworkManager, es recomendable gestionar los puentes a trav\u00e9s de \u00e9l para asegurar configuraciones persistentes y coherentes.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#verificar-las-conexiones-existentes","title":"Verificar las Conexiones Existentes","text":"<p>Antes de realizar cambios, es recomendable verificar las conexiones actuales y eliminar cualquier configuraci\u00f3n previa que pueda interferir.</p> <pre><code>nmcli connection show\n</code></pre> <p>Si tienes una conexi\u00f3n existente virtual con el interfaz de red, puedes eliminarla:</p> <pre><code>sudo nmcli connection delete &lt;nombre_de_la_conexi\u00f3n&gt;\n</code></pre> <p>Reemplaza  por el nombre real de la conexi\u00f3n asociada al interfaz de red."},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#crear-el-puente-br0","title":"Crear el Puente (br0)","text":"<p>Primero, crearemos la conexi\u00f3n del puente br0:</p> <pre><code>sudo nmcli connection add type bridge ifname br0 con-name br0\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#configurar-la-interfaz-fisica-como-esclava-del-puente","title":"Configurar la Interfaz F\u00edsica como Esclava del Puente","text":"<p>Utilizamos el tipo ethernet y especificamos el puente maestro (<code>master br0</code>).</p> <pre><code>sudo nmcli connection add type ethernet ifname &lt;interfaz f\u00edsica&gt; master br0 con-name &lt;interfaz f\u00edsica&gt;-slave\n</code></pre> <p>Explicaci\u00f3n de los par\u00e1metros:</p> <p><code>type ethernet</code>: Especifica que estamos configurando una conexi\u00f3n Ethernet. <code>ifname &lt;interfaz f\u00edsica&gt;</code>: La interfaz f\u00edsica que deseas agregar al puente (por ejemplo <code>enp3s0</code>). <code>master br0</code>: Define que <code>br0</code> es el puente maestro al que se unir\u00e1 la interfaz f\u00edsica. <code>con-name &lt;interfaz f\u00edsica&gt;-slave</code>: Nombre de la nueva conexi\u00f3n esclava (se puede nombrarla como se prefiera o bien algo as\u00ed <code>enp3s0-slave</code> para distinguirla adecuadamente).</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#configurar-la-asignacion-de-ip-en-el-puente","title":"Configurar la Asignaci\u00f3n de IP en el Puente","text":"<p>Podemos usar DHCP o una IP est\u00e1tica para el puente br0.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#usar-dhcp","title":"Usar DHCP","text":"<p>Si tu red local tiene un servidor DHCP, puedes configurar el puente para obtener una IP autom\u00e1ticamente:</p> <pre><code>sudo nmcli connection modify br0 ipv4.method auto\nsudo nmcli connection modify br0 ipv6.method ignore\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#usar-una-ip-estatica","title":"Usar una IP Est\u00e1tica","text":"<p>Si elegimos asignar una IP est\u00e1tica al puente, utilizaremos los siguientes comandos (ajusta los valores seg\u00fan la configuraci\u00f3n de red):</p> <pre><code>sudo nmcli connection modify br0 ipv4.method manual ipv4.addresses \"172.30.250.32/16\" ipv4.gateway \"172.30.1.1\" ipv4.dns \"172.30.1.1,80.58.61.250,80.58.61.254\" ipv6.method ignore\n</code></pre> <p>Explicaci\u00f3n de los par\u00e1metros:</p> <p><code>ipv4.method manual</code>: Establece una configuraci\u00f3n IP manual. <code>ipv4.addresses</code>: La direcci\u00f3n IP y la m\u00e1scara de red. <code>ipv4.gateway</code>: La puerta de enlace predeterminada. <code>ipv4.dns</code>: Servidores DNS. <code>ipv6.method ignore</code>: Ignora la configuraci\u00f3n IPv6 (ajusta si es necesario).</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#activar-las-conexiones","title":"Activar las Conexiones","text":"<p>Despu\u00e9s de configurar el puente y la interfaz esclava, activa ambas conexiones:</p> <pre><code>sudo nmcli connection up br0\nsudo nmcli connection up enp3s0-slave\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#verificar-la-configuracion-del-puente","title":"Verificar la Configuraci\u00f3n del Puente","text":"<p>Aseg\u00farate de que el puente <code>br0</code> est\u00e1 correctamente configurado y que la interfaz f\u00edsica (<code>enp3s0</code>) est\u00e1 agregada como esclavo:</p> <pre><code>nmcli connection show br0\nnmcli connection show enp3s0-slave\n</code></pre> <p>o bien con:</p> <pre><code>bridge link show br0\n</code></pre> <p>Tambi\u00e9n podemos verificar las interfaces de red:</p> <pre><code>ip addr show br0\nip addr show enp3s0\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#configurar-virt-manager-para-usar-el-puente-br0","title":"Configurar <code>Virt-Manager</code> para usar el Puente <code>br0</code>","text":"<p>Ahora que el puente est\u00e1 configurado, debemos asociar las m\u00e1quinas virtuales para que utilicen br0.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#abrir-virt-manager","title":"Abrir Virt-Manager","text":"<pre><code>    virt-manager\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#editar-la-configuracion-de-la-maquina-virtual","title":"Editar la Configuraci\u00f3n de la M\u00e1quina Virtual","text":"<ul> <li>Seleccionar la VM que deseamos configurar.</li> <li>Hacer clic derecho y seleccionar \"Detalles\".</li> <li>Configurar la Interfaz de Red:</li> <li>En la secci\u00f3n \"NIC\" o \"Interfaz de Red\", cambia el \"Tipo de conexi\u00f3n\" a \"Puente (bridge)\".</li> <li>En el campo \"Nombre del puente\", seleccionamos <code>br0</code>.</li> <li>Guardar los Cambios y Reiniciar la M\u00e1quina Virtual.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#usando-virsh","title":"Usando <code>virsh</code>","text":"<pre><code>virsh attach-interface --domain &lt;nombre_de_vm&gt; --type bridge --source br0 --model virtio --config --live\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#verificar-la-conectividad","title":"Verificar la Conectividad","text":"<p>Desde la M\u00e1quina Virtual: - Nos aseguramos de que la VM obtiene una direcci\u00f3n IP en el mismo rango que la red local (172.30.0.0/16). - Probamos la conectividad haciendo ping al host y a otros dispositivos en la red. - Desde otro dispositivo en la red local intentaremos hacer ping a la direcci\u00f3n IP de la VM para verificar que es accesible.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#configurar-el-firewall-si-es-necesario","title":"Configurar el Firewall (Si es Necesario)","text":"<p>Nos aseguramos de que el firewall en el host y en las VMs permite el tr\u00e1fico necesario. En el Host (si usamos <code>ufw</code>):</p> <pre><code>sudo ufw allow in on br0\n</code></pre> <p>O si usamos <code>firewalld</code> en RHEL/CentOS:</p> <pre><code>sudo firewall-cmd --zone=public --add-interface=br0 --permanent\nsudo firewall-cmd --reload\n</code></pre> <p>En las M\u00e1quinas Virtuales configuramos el firewall dentro de cada VM para permitir el tr\u00e1fico deseado (SSH, HTTP, etc.).</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#solucion-de-problemas","title":"Soluci\u00f3n de Problemas","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#puente-no-funciona","title":"Puente No Funciona","text":"<ul> <li>Verifica que <code>br0</code> est\u00e1 activo y tiene una IP v\u00e1lida:</li> </ul> <pre><code>ip addr show br0\n</code></pre> <ul> <li>Aseg\u00farate de que el interfaz virtual est\u00e1 agregado al puente:</li> </ul> <pre><code>nmcli connection show &lt;interfaz virtual&gt;\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#maquinas-virtuales-no-obtienen-ip","title":"M\u00e1quinas Virtuales No Obtienen IP:","text":"<ul> <li>Aseg\u00farate de que hay un servidor DHCP en tu red o configura una IP est\u00e1tica en la VM.</li> <li>Verifica que el puente <code>br0</code> est\u00e1 correctamente configurado y activo.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#conexion-de-red-perdida","title":"Conexi\u00f3n de Red Perdida:","text":"<ul> <li>Revisar la configuraci\u00f3n de <code>br0</code> y aseg\u00fararse de que no haya conflictos de IP.</li> <li>Verificar los archivos de configuraci\u00f3n y los comandos ejecutados para detectar posibles errores.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/04.-Gesti%C3%B3n%20de%20Puentes%20con%20NetworkManager/#conclusion","title":"Conclusi\u00f3n","text":"<p>Siguiendo estos pasos, deber\u00edamos poder crear un puente de red utilizando <code>nmcli</code> y asociar la interfaz f\u00edsica correctamente. Esto permitir\u00e1 que tus m\u00e1quinas virtuales se integren en la red local y sean accesibles desde otros dispositivos.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/","title":"Flujo de Tr\u00e1fico en un Bridge","text":"<ol> <li> <p>Recepci\u00f3n de Paquetes: Cuando una interfaz (f\u00edsica o virtual) conectada al bridge recibe un paquete, el bridge examina la direcci\u00f3n MAC de destino.</p> </li> <li> <p>Consulta de la Tabla MAC: El bridge consulta su tabla de direcciones MAC para determinar a qu\u00e9 interfaz debe reenviar el paquete.</p> </li> <li>Si la MAC est\u00e1 en la tabla: Reenv\u00eda el paquete \u00fanicamente a la interfaz correspondiente.</li> <li> <p>Si la MAC no est\u00e1 en la tabla: Reenv\u00eda el paquete a todas las interfaces excepto a la de origen (flooding).</p> </li> <li> <p>Aprendizaje de MACs: Al recibir paquetes, el bridge aprende qu\u00e9 MAC est\u00e1 asociada a qu\u00e9 interfaz, actualizando su tabla.</p> </li> </ol>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#interfaces-virtuales-en-el-bridge","title":"Interfaces Virtuales en el Bridge","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#puertas-de-enlace-virtuales","title":"Puertas de Enlace Virtuales","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#definicion","title":"Definici\u00f3n:","text":"<p>Las puertas de enlace virtuales son interfaces de red que, al estar conectadas a un bridge, permiten que las m\u00e1quinas virtuales se comporten como si fueran dispositivos f\u00edsicos dentro de la misma red local. Esto significa que las VMs pueden comunicarse directamente con otros dispositivos en la red, as\u00ed como entre s\u00ed, sin necesidad de NAT (Traducci\u00f3n de Direcciones de Red).</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#detalles-y-funcionamiento","title":"Detalles y Funcionamiento:","text":"<ul> <li>Integraci\u00f3n en la Red Local: Al conectar las VMs a un bridge (br0), estas obtienen direcciones IP del mismo rango que el host y otros dispositivos de la red local, lo que las hace accesibles desde cualquier otro dispositivo en la red.</li> <li>Transparencia de la Red: Las VMs aparecen en la red como si fueran dispositivos f\u00edsicos conectados directamente al switch o router de la red local. Esto facilita el acceso a servicios alojados en las VMs desde otros dispositivos.</li> <li>Configuraci\u00f3n de Puertas de Enlace: Cada VM puede configurarse con una puerta de enlace que apunte al router de la red local (172.30.1.1 en nuestro caso), permiti\u00e9ndoles acceder a Internet y otros recursos externos.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#separacion-de-trafico","title":"Separaci\u00f3n de Tr\u00e1fico","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#definicion_1","title":"Definici\u00f3n:","text":"<p>La separaci\u00f3n de tr\u00e1fico implica gestionar c\u00f3mo fluye el tr\u00e1fico de red entre las diferentes interfaces conectadas al bridge. Aunque todas las interfaces (f\u00edsicas y virtuales) est\u00e1n en el mismo bridge, es posible controlar y aislar el tr\u00e1fico entre ellas utilizando reglas de firewall como <code>iptables</code> o <code>firewalld</code>.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#detalles-y-funcionamiento_1","title":"Detalles y Funcionamiento:","text":"<ul> <li>Mismo Dominio de Broadcast: Todas las interfaces en el bridge comparten el mismo dominio de broadcast, lo que permite que las VMs y el host se vean y se comuniquen directamente entre s\u00ed y con otros dispositivos en la red local. Control de Acceso: Aunque las interfaces est\u00e1n en el mismo bridge, es posible restringir o controlar el tr\u00e1fico entre ellas para mejorar la seguridad y gestionar el flujo de datos. Aislamiento de Tr\u00e1fico: Por ejemplo, puedes querer que ciertas VMs no tengan acceso al host o que el host no pueda acceder a ciertas VMs, pero que las VMs s\u00ed puedan comunicarse entre s\u00ed.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#aislamiento-entre-host-y-puente","title":"Aislamiento entre Host y Puente","text":"<p>Para mejorar la seguridad y el rendimiento, es posible que queramos aislar el host de las m\u00e1quinas virtuales que est\u00e1n conectadas al bridge. Esto implica asegurarse de que el host no participe directamente en el tr\u00e1fico de las VMs y que el tr\u00e1fico entre el host y el bridge est\u00e9 restringido o controlado.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#configuracion-del-bridge-con-networkmanager","title":"Configuraci\u00f3n del Bridge con NetworkManager","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#definicion_2","title":"Definici\u00f3n","text":"<p>Configurar un bridge de red (br0) de manera que el host no tenga una direcci\u00f3n IP asignada al bridge. Esto asegura que el host no participe directamente en el tr\u00e1fico de la red bridged, mejorando la seguridad y reduciendo posibles vectores de ataque.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#pasos-para-configurar-el-bridge-sin-ip-en-el-host-utilizando-networkmanager","title":"Pasos para Configurar el Bridge sin IP en el Host utilizando NetworkManager","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#verificar-el-estado-actual-de-las-conexiones-de-red","title":"Verificar el Estado Actual de las Conexiones de Red","text":"<p>Antes de realizar cualquier cambio, es recomendable revisar las conexiones de red existentes para identificar posibles conflictos.</p> <p>bash</p> <p>nmcli connection show</p> <p>Anota el nombre de la conexi\u00f3n asociada a tu interfaz f\u00edsica (enp3s0 en tu caso).</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#eliminar-configuraciones-previas-opcional","title":"Eliminar Configuraciones Previas (Opcional)","text":"<p>Si la interfaz f\u00edsica enp3s0 ya est\u00e1 configurada con una direcci\u00f3n IP, es recomendable eliminar o modificar esta configuraci\u00f3n para evitar conflictos.</p> <p>bash</p> <p>sudo nmcli connection delete  <p>Reemplaza  con el nombre obtenido en el paso anterior."},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#crear-el-bridge-br0","title":"Crear el Bridge (br0)","text":"<p>Utiliza nmcli para crear una nueva conexi\u00f3n de tipo bridge llamada br0.</p> <p>bash</p> <p>sudo nmcli connection add type bridge ifname br0 con-name br0</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#configurar-el-bridge-br0-sin-asignarle-una-direccion-ip","title":"Configurar el Bridge (br0) sin Asignarle una Direcci\u00f3n IP","text":"<p>Modifica la configuraci\u00f3n del bridge para que no obtenga una direcci\u00f3n IP autom\u00e1ticamente (no use DHCP ni tenga una IP est\u00e1tica).</p> <p>bash</p> <p>sudo nmcli connection modify br0 ipv4.method disabled ipv6.method ignore</p> <p>Explicaci\u00f3n de los Par\u00e1metros:</p> <pre><code>ipv4.method disabled: Desactiva la asignaci\u00f3n autom\u00e1tica de direcciones IPv4.\nipv6.method ignore: Ignora la configuraci\u00f3n de IPv6.\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#asociar-la-interfaz-fisica-enp3s0-al-bridge-br0","title":"Asociar la Interfaz F\u00edsica (enp3s0) al Bridge (br0)","text":"<p>En lugar de usar el tipo bridge-slave, configura la interfaz f\u00edsica como una esclava del bridge utilizando el par\u00e1metro master.</p> <pre><code>\nsudo nmcli connection add type ethernet ifname enp3s0 master br0 con-name enp3s0-slave\n</code></pre> <p>Explicaci\u00f3n de los Par\u00e1metros: type ethernet: Especifica que estamos configurando una conexi\u00f3n Ethernet. ifname enp3s0: La interfaz f\u00edsica que deseas agregar al bridge. master br0: Define que br0 es el bridge maestro al que se unir\u00e1 enp3s0. con-name enp3s0-slave: Nombre de la nueva conexi\u00f3n esclava (puedes nombrarlo como prefieras).</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#desactivar-la-asignacion-de-ip-a-la-interfaz-fisica-enp3s0","title":"Desactivar la Asignaci\u00f3n de IP a la Interfaz F\u00edsica (enp3s0)","text":"<p>Aseg\u00farate de que la interfaz f\u00edsica no tenga una direcci\u00f3n IP asignada directamente, ya que el bridge ser\u00e1 el \u00fanico punto de configuraci\u00f3n de red.</p> <p>bash</p> <p>sudo nmcli connection modify enp3s0-slave ipv4.method disabled ipv6.method ignore</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#activar-las-conexiones","title":"Activar las Conexiones","text":"<p>Despu\u00e9s de configurar el bridge y la interfaz esclava, activa ambas conexiones para aplicar los cambios.</p> <p>bash</p> <p>sudo nmcli connection up br0 sudo nmcli connection up enp3s0-slave</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#verificar-la-configuracion-del-bridge","title":"Verificar la Configuraci\u00f3n del Bridge","text":"<p>Confirma que el bridge br0 est\u00e1 activo y que enp3s0 est\u00e1 correctamente asociado como esclava.</p> <p>``bash</p> <p>nmcli connection show br0 nmcli connection show enp3s0-slave `` Tambi\u00e9n puedes verificar las interfaces de red:</p> <p><code>bash ip addr show br0 ip addr show enp3s0</code> Resultado Esperado: - br0 no debe tener una direcci\u00f3n IP asignada. - enp3s0 debe estar asociada al bridge br0 y no tener una direcci\u00f3n IP propia.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#eliminar-la-direccion-ip-del-bridge-si-ya-esta-asignada","title":"Eliminar la Direcci\u00f3n IP del Bridge (si ya est\u00e1 Asignada)","text":"<p>Si anteriormente el bridge br0 ten\u00eda una direcci\u00f3n IP asignada, puedes eliminarla temporalmente para verificar el aislamiento.</p> <pre><code>sudo ip addr flush dev br0\n</code></pre> <p>Nota: Este cambio es temporal y se revertir\u00e1 despu\u00e9s de reiniciar el sistema o volver a activar la conexi\u00f3n.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#configurar-el-host-para-utilizar-la-interfaz-fisica-directamente-opcional","title":"Configurar el Host para Utilizar la Interfaz F\u00edsica Directamente (Opcional)","text":"<p>Si deseas que el host mantenga su conectividad de red sin depender del bridge, puedes asignar una direcci\u00f3n IP directamente a enp3s0. Sin embargo, esto podr\u00eda interferir con la funcionalidad del bridge y no se recomienda si deseas un aislamiento efectivo. Es recomendable mantener la configuraci\u00f3n del bridge sin una IP asignada al host.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#ejemplo-de-asignacion-de-ip-estatica-directamente-a-enp3s0-no-recomendado-para-aislamiento","title":"Ejemplo de Asignaci\u00f3n de IP Est\u00e1tica Directamente a enp3s0 (No Recomendado para Aislamiento):","text":"<pre><code>sudo nmcli connection modify enp3s0-slave ipv4.method manual ipv4.addresses \"172.30.250.32/16\" ipv4.gateway \"172.30.1.1\" ipv4.dns \"172.30.1.1,80.58.61.250,80.58.61.254\"\nsudo nmcli connection up enp3s0-slave\n</code></pre> <ul> <li>Recomendaci\u00f3n: Para mantener el aislamiento entre el host y las m\u00e1quinas virtuales, no asignes una direcci\u00f3n IP directamente a enp3s0. En su lugar, gestiona las direcciones IP desde las m\u00e1quinas virtuales a trav\u00e9s del bridge br0.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#configuracion-de-las-maquinas-virtuales-para-usar-el-bridge-br0","title":"Configuraci\u00f3n de las M\u00e1quinas Virtuales para Usar el Bridge (br0)","text":"<p>Una vez que el bridge br0 est\u00e1 configurado sin una direcci\u00f3n IP en el host, debes configurar tus m\u00e1quinas virtuales para que utilicen este bridge. A continuaci\u00f3n, se describen los pasos para hacerlo utilizando Virt-Manager.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#abrir-virt-manager","title":"Abrir Virt-Manager","text":"<p>Inicia Virt-Manager desde la terminal o desde el men\u00fa de aplicaciones.</p> <p>bash</p> <p>virt-manager</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#editar-la-configuracion-de-la-maquina-virtual","title":"Editar la Configuraci\u00f3n de la M\u00e1quina Virtual","text":"<pre><code>Selecciona la M\u00e1quina Virtual:\n    En la lista de m\u00e1quinas virtuales, selecciona la VM que deseas configurar.\nAccede a los Detalles:\n    Haz clic derecho sobre la VM seleccionada y elige \"Detalles\".\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#configurar-la-interfaz-de-red-para-usar-el-bridge-br0","title":"Configurar la Interfaz de Red para Usar el Bridge (br0)","text":"<pre><code>Acceder a la Secci\u00f3n de NIC:\n    En la ventana de detalles, selecciona \"NIC\" o \"Interfaz de Red\" en el panel izquierdo.\n\nCambiar el Tipo de Conexi\u00f3n a Bridge:\n    En el campo \"Tipo de Conexi\u00f3n\", selecciona \"Bridge\".\n\nSeleccionar el Nombre del Bridge:\n    En el campo \"Nombre del Bridge\", selecciona br0 de la lista desplegable.\n\nAplicar los Cambios:\n    Haz clic en \"Aplicar\" o \"OK\" para guardar los cambios.\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#reiniciar-la-maquina-virtual","title":"Reiniciar la M\u00e1quina Virtual","text":"<p>Reinicia la VM para que aplique la nueva configuraci\u00f3n de red a trav\u00e9s del bridge.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#verificacion-de-la-configuracion","title":"Verificaci\u00f3n de la Configuraci\u00f3n","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#desde-el-host","title":"Desde el Host","text":"<ul> <li>Verificar que el Bridge no tiene una IP:</li> </ul> <pre><code>ip addr show br0\n</code></pre> <p>Resultado Esperado: No debe mostrar una direcci\u00f3n IP asignada a br0.</p> <ul> <li>Verificar que enp3s0 est\u00e1 Asociada al Bridge:</li> </ul> <pre><code>nmcli connection show enp3s0-slave\n</code></pre> <p>Resultado Esperado: La conexi\u00f3n enp3s0-slave debe estar configurada como esclava del bridge br0.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#desde-las-maquinas-virtuales","title":"Desde las M\u00e1quinas Virtuales","text":"<ul> <li>Obtener una Direcci\u00f3n IP: Aseg\u00farate de que las VMs obtienen una direcci\u00f3n IP en el mismo rango que tu red local (por DHCP desde el router).</li> </ul> <pre><code>ip addr show &lt;interfaz_de_red&gt;\n</code></pre> <p>Ejemplo:</p> <pre><code>ip addr show enp0s3\n</code></pre> <p>Probar la Conectividad:</p> <p>Desde la VM, intenta hacer ping al router y a otros dispositivos en la red local.</p> <pre><code>ping 172.30.1.1\nping &lt;otra_direcci\u00f3n_IP_en_la_red&gt;\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#desde-otros-dispositivos-en-la-red-local","title":"Desde Otros Dispositivos en la Red Local","text":"<ul> <li>Acceder a las VMs: Intenta hacer ping a la direcci\u00f3n IP asignada a cada VM desde otros dispositivos en la red.</li> </ul> <pre><code>ping 172.30.250.x\n</code></pre> <ul> <li>Accede a servicios alojados en las VMs, como SSH o servidores web, utilizando sus direcciones IP.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#aislamiento-entre-host-y-puente_1","title":"Aislamiento entre Host y Puente","text":"<p>Para aislar el host de las m\u00e1quinas virtuales en el bridge br0, es necesario implementar reglas de firewall que controlen el tr\u00e1fico entre el host y las VMs. A continuaci\u00f3n, se detallan los pasos utilizando iptables y firewalld.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#utilizar-iptables-para-controlar-el-trafico","title":"Utilizar iptables para Controlar el Tr\u00e1fico","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#bloquear-todo-el-trafico-entrante-desde-el-bridge-al-host","title":"Bloquear Todo el Tr\u00e1fico Entrante desde el Bridge al Host:","text":"<p>Esto evita que las VMs puedan acceder directamente al host a trav\u00e9s del bridge.</p> <p>bash</p> <p>sudo iptables -A INPUT -i br0 -j DROP</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#permitir-trafico-saliente-desde-el-host-al-bridge-opcional","title":"Permitir Tr\u00e1fico Saliente desde el Host al Bridge (Opcional):","text":"<p>Si deseas que el host pueda enviar tr\u00e1fico al bridge pero no recibir, puedes permitir el tr\u00e1fico saliente.</p> <p>bash</p> <p>sudo iptables -A OUTPUT -o br0 -j ACCEPT</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#permitir-trafico-especifico-por-ejemplo-ssh","title":"Permitir Tr\u00e1fico Espec\u00edfico (Por Ejemplo, SSH):","text":"<p>Si necesitas permitir ciertos tipos de tr\u00e1fico desde las VMs al host, como SSH, agrega reglas espec\u00edficas antes de la regla de bloqueo general.</p> <p>bash</p> <p>sudo iptables -I INPUT -i br0 -p tcp --dport 22 -j ACCEPT</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#guardar-las-reglas-de-iptables","title":"Guardar las Reglas de iptables:","text":"<p>Para que las reglas persistan despu\u00e9s de reiniciar, es necesario guardarlas.</p> <p>En Debian/Ubuntu:</p> <pre><code>sudo apt install iptables-persistent\nsudo netfilter-persistent save\n</code></pre> <p>En Otras Distribuciones: Utiliza el m\u00e9todo correspondiente para guardar las reglas de iptables, como scripts de inicio o herramientas espec\u00edficas de la distribuci\u00f3n.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#utilizar-firewalld-para-gestionar-el-firewall","title":"Utilizar firewalld para Gestionar el Firewall","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#asignar-el-bridge-a-una-zona-especifica","title":"Asignar el Bridge a una Zona Espec\u00edfica:","text":"<p>Por ejemplo, asignar br0 a la zona internal.</p> <p>bash</p> <p>sudo firewall-cmd --permanent --zone=internal --add-interface=br0</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#definir-reglas-para-la-zona-internal","title":"Definir Reglas para la Zona internal:","text":"<p>Bloquear Todo el Tr\u00e1fico Entrante desde el Bridge al Host:</p> <pre><code>sudo firewall-cmd --permanent --zone=internal --add-rich-rule='rule family=\"ipv4\" source address=\"172.30.250.0/16\" reject'\n</code></pre> <p>Permitir Tr\u00e1fico Espec\u00edfico (Por Ejemplo, SSH):</p> <pre><code>sudo firewall-cmd --permanent --zone=internal --add-service=ssh\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#recargar-firewalld-para-aplicar-cambios","title":"Recargar firewalld para Aplicar Cambios:","text":"<pre><code>sudo firewall-cmd --reload\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#verificar-las-reglas-del-firewall","title":"Verificar las Reglas del Firewall","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#para-iptables","title":"Para iptables:","text":"<pre><code>\nsudo iptables -L -v\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#para-firewalld","title":"Para firewalld:","text":"<pre><code>\nsudo firewall-cmd --list-all --zone=internal\n</code></pre> <p>Resultado Esperado: Las reglas deber\u00edan reflejar el bloqueo general del tr\u00e1fico desde el bridge al host, con excepciones para servicios espec\u00edficos como SSH si se han definido.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#consideraciones-adicionales","title":"Consideraciones Adicionales","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#seguridad-del-firewall","title":"Seguridad del Firewall","text":"<p>Prioridad de Reglas: Aseg\u00farate de que las reglas espec\u00edficas (como permitir SSH) se agreguen antes de las reglas generales de bloqueo para que no sean sobrescritas.</p> <p>Revisi\u00f3n Regular: Revisa peri\u00f3dicamente las reglas de firewall para asegurarte de que siguen cumpliendo con los requisitos de seguridad y funcionalidad.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#documentacion-y-backups","title":"Documentaci\u00f3n y Backups","text":"<p>Documenta tus Configuraciones: Mant\u00e9n un registro de las configuraciones realizadas para facilitar futuras modificaciones o resoluciones de problemas.</p> <p>Realiza Backups: Antes de realizar cambios significativos en la configuraci\u00f3n de red o firewall, realiza backups de los archivos de configuraci\u00f3n y reglas actuales.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#monitoreo-de-la-red","title":"Monitoreo de la Red","text":"<p>Utiliza Herramientas de Monitoreo: Implementa herramientas como Wireshark, tcpdump, o nmap para supervisar y analizar el tr\u00e1fico de red, lo que te ayudar\u00e1 a detectar actividades inusuales o problemas de configuraci\u00f3n.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#actualizaciones-y-parches","title":"Actualizaciones y Parches","text":"<p>Mant\u00e9n tu Sistema Actualizado: Aseg\u00farate de que tu sistema operativo y todas las herramientas de red est\u00e1n actualizadas para beneficiarte de mejoras de seguridad y funcionalidad.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#resumen","title":"Resumen","text":"<p>Al seguir estos pasos, habr\u00e1s configurado un bridge de red (br0) utilizando NetworkManager en Linux, asegur\u00e1ndote de que el host no tenga una direcci\u00f3n IP asignada al bridge. Esto logra dos objetivos principales:</p> <p>Integraci\u00f3n de M\u00e1quinas Virtuales en la Red Local: Las VMs pueden comunicarse directamente con otros dispositivos en la red local como si fueran dispositivos f\u00edsicos adicionales.</p> <p>Aislamiento y Seguridad del Host: El host no participa directamente en el tr\u00e1fico del bridge, reduciendo la superficie de ataque y mejorando la seguridad mediante el uso de reglas de firewall para controlar el tr\u00e1fico entre el bridge y el host.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#pasos-clave-realizados","title":"Pasos Clave Realizados:","text":"<p>Creaci\u00f3n y Configuraci\u00f3n del Bridge (br0): Creaste un bridge sin asignarle una direcci\u00f3n IP, asegurando que el host no participa directamente en el tr\u00e1fico del bridge.</p> <p>Asociaci\u00f3n de la Interfaz F\u00edsica (enp3s0) al Bridge: Configuraste la interfaz f\u00edsica como esclava del bridge, permitiendo que las VMs conectadas al bridge obtengan direcciones IP de la red local.</p> <p>Configuraci\u00f3n de las M\u00e1quinas Virtuales: Configuraste las VMs para que utilicen el bridge br0 como su interfaz de red, permitiendo su integraci\u00f3n en la red local.</p> <p>Implementaci\u00f3n de Reglas de Firewall: Utilizaste iptables o firewalld para controlar y aislar el tr\u00e1fico entre el bridge y el host, mejorando la seguridad.</p> <p>Verificaci\u00f3n de la Configuraci\u00f3n: Confirmaste que el bridge no tiene una direcci\u00f3n IP en el host y que las VMs pueden comunicarse adecuadamente dentro de la red local.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/05.-Funcionamiento%20Interno%20de%20los%20Puentes%20e%20Interfaces%20Virtuales/#beneficios-de-esta-configuracion","title":"Beneficios de Esta Configuraci\u00f3n:","text":"<p>Seguridad Mejorada: Al aislar el host del tr\u00e1fico del bridge, reduces el riesgo de que las VMs comprometan la seguridad del host.     Accesibilidad Directa de las VMs: Las VMs son tratadas como dispositivos f\u00edsicos en la red, facilitando el acceso desde otros dispositivos.     Control Granular del Tr\u00e1fico: Las reglas de firewall permiten un control preciso sobre qu\u00e9 tipo de tr\u00e1fico est\u00e1 permitido entre el host y las VMs.</p> <p>Soluci\u00f3n de Problemas Comunes 1. Las VMs No Obtienen una Direcci\u00f3n IP</p> <pre><code>Verificar la Configuraci\u00f3n del Bridge:\n    Aseg\u00farate de que br0 est\u00e1 correctamente configurado y activo sin una direcci\u00f3n IP asignada.\n\nComprobar el Servidor DHCP:\n    Verifica que el servidor DHCP (generalmente tu router) est\u00e1 funcionando correctamente y tiene un rango de direcciones IP disponible.\n\nReiniciar el Servicio de Red en las VMs:\n    En las VMs, reinicia el servicio de red para forzar la obtenci\u00f3n de una nueva direcci\u00f3n IP.\n\nbash\n\nsudo systemctl restart NetworkManager\n# o\nsudo dhclient -r &amp;&amp; sudo dhclient\n</code></pre> <ol> <li> <p>Las VMs No Son Accesibles Desde Otros Dispositivos en la Red Local</p> <p>Revisar Reglas de Firewall:     Aseg\u00farate de que las reglas de firewall en el host y en las VMs no est\u00e1n bloqueando el tr\u00e1fico necesario.</p> <p>Verificar la Configuraci\u00f3n de Red en las VMs:     Confirma que las VMs tienen configurada correctamente la puerta de enlace (gateway) y los servidores DNS.</p> <p>Probar la Conectividad de Red:     Desde otro dispositivo en la red local, intenta hacer ping a la direcci\u00f3n IP de la VM.</p> <p>bash</p> <p>ping 172.30.250.x</p> </li> <li> <p>El Host Pierde Conectividad de Red</p> <p>Revisar la Configuraci\u00f3n del Bridge:     Aseg\u00farate de que el bridge br0 no tiene una direcci\u00f3n IP asignada y que enp3s0 est\u00e1 correctamente asociada como esclava.</p> <p>Verificar Reglas de Firewall:     Revisa que las reglas de firewall no est\u00e1n bloqueando el tr\u00e1fico necesario para la conectividad del host.</p> <p>Reiniciar NetworkManager:     Reinicia el servicio de NetworkManager para aplicar nuevamente las configuraciones.</p> <p>bash</p> <p>sudo systemctl restart NetworkManager</p> </li> <li> <p>Problemas al Crear el Bridge con nmcli</p> <p>Errores en los Comandos de nmcli:     Aseg\u00farate de que est\u00e1s utilizando la sintaxis correcta al crear y modificar las conexiones.</p> <p>Verificar el Estado de las Conexiones:     Usa nmcli para comprobar que las conexiones est\u00e1n activas y correctamente configuradas.</p> <p>bash</p> <p>nmcli connection show --active</p> </li> <li> <p>Conflictos de Direcciones IP</p> <p>Asignar Direcciones IP Est\u00e1ticas a las VMs:     Si hay problemas con el DHCP, considera asignar direcciones IP est\u00e1ticas a las VMs dentro del rango de tu red local.</p> <p>Evitar Duplicados:     Aseg\u00farate de que no hay direcciones IP duplicadas en la red, lo que puede causar conflictos de conectividad.</p> </li> </ol> <p>Conclusi\u00f3n</p> <p>Configurar un bridge de red (br0) utilizando NetworkManager en Linux y asegurarse de que el host no tiene una direcci\u00f3n IP asignada al bridge es una pr\u00e1ctica efectiva para integrar m\u00e1quinas virtuales en la red local mientras se mantiene el aislamiento y la seguridad del host. Esta configuraci\u00f3n permite que las VMs sean accesibles desde otros dispositivos en la red local como si fueran dispositivos f\u00edsicos adicionales, al tiempo que limita la interacci\u00f3n directa entre las VMs y el host mediante reglas de firewall.</p> <p>Beneficios Clave:</p> <pre><code>Seguridad Mejorada: Aislamiento del host del tr\u00e1fico del bridge.\nAccesibilidad Directa: Las VMs son tratadas como dispositivos f\u00edsicos en la red local.\nControl Granular: Reglas de firewall permiten gestionar el tr\u00e1fico entre el host y las VMs.\n</code></pre> <p>Recomendaciones Finales:</p> <pre><code>Mant\u00e9n Documentadas las Configuraciones: Facilita futuras modificaciones y resoluciones de problemas.\nMonitorea Regularmente la Red: Utiliza herramientas de monitoreo para asegurar que la configuraci\u00f3n est\u00e1 funcionando seg\u00fan lo esperado.\nActualiza Regularmente el Sistema y las Herramientas de Red: Benef\u00edciate de mejoras de seguridad y funcionalidad.\n</code></pre> <p>Si encuentras dificultades espec\u00edficas durante la configuraci\u00f3n o tienes preguntas adicionales, no dudes en consultarme para recibir asistencia m\u00e1s detallada.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/06.-Gesti%C3%B3n%20Avanzada%20de%20Puentes%20e%20Interfaces%20Virtuales/","title":"06.-Gesti\u00f3n Avanzada de Puentes e Interfaces Virtuales","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/06.-Gesti%C3%B3n%20Avanzada%20de%20Puentes%20e%20Interfaces%20Virtuales/#61-vlans-y-puentes","title":"6.1. VLANs y Puentes","text":"<ul> <li>VLANs: Los puentes pueden manejar VLANs para segmentar el tr\u00e1fico. Esto se hace creando interfaces VLAN y agreg\u00e1ndolas al bridge.</li> <li>Configuraci\u00f3n: A\u00f1adir interfaces VLAN (<code>eth0.10</code>, <code>eth0.20</code>, ...) y conectarlas al bridge para separar el tr\u00e1fico seg\u00fan las VLANs.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/06.-Gesti%C3%B3n%20Avanzada%20de%20Puentes%20e%20Interfaces%20Virtuales/#62-bonding-y-agregacion-de-enlaces","title":"6.2. Bonding y Agregaci\u00f3n de Enlaces","text":"<ul> <li>Bonding: Combina m\u00faltiples interfaces f\u00edsicas en una sola interfaz l\u00f3gica para redundancia o aumento de ancho de banda.</li> <li>Uso con Bridges: Los enlaces bond pueden ser agregados a un bridge para proporcionar una conexi\u00f3n m\u00e1s robusta a las m\u00e1quinas virtuales.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/06.-Gesti%C3%B3n%20Avanzada%20de%20Puentes%20e%20Interfaces%20Virtuales/#63-interfaces-tap-y-qemukvm","title":"6.3. Interfaces Tap y QEMU/KVM","text":"<ul> <li>Tap Interfaces1: Son interfaces virtuales que permiten que QEMU/KVM interact\u00fae directamente con el puente.</li> <li>Uso: Al iniciar una VM con QEMU/KVM, se puede especificar el uso de una interfaz tap para conectarse al bridge, permitiendo que la VM se comunique directamente con la red.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/07.-Herramientas%20y%20comandos%20%C3%BAtiles/","title":"07.-Herramientas y comandos \u00fatiles","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/07.-Herramientas%20y%20comandos%20%C3%BAtiles/#71-comandos-ip-y-bridge","title":"7.1. Comandos <code>ip</code> y <code>bridge</code>","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/07.-Herramientas%20y%20comandos%20%C3%BAtiles/#crear-un-bridge","title":"Crear un Bridge","text":"<pre><code>sudo ip link add name br0 type bridge\nsudo ip link set dev br0 up\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/07.-Herramientas%20y%20comandos%20%C3%BAtiles/#anadir-una-interfaz-al-bridge","title":"A\u00f1adir una Interfaz al Bridge","text":"<pre><code>sudo ip link set dev enp0s25 master br0\nsudo ip link set dev enp0s25 up\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/07.-Herramientas%20y%20comandos%20%C3%BAtiles/#mostrar-configuracion-del-bridge","title":"Mostrar Configuraci\u00f3n del Bridge","text":"<pre><code>bridge link show br0\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/07.-Herramientas%20y%20comandos%20%C3%BAtiles/#72-nmcli-networkmanager-command-line","title":"7.2. nmcli (NetworkManager Command Line)","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/07.-Herramientas%20y%20comandos%20%C3%BAtiles/#listar-conexiones","title":"Listar Conexiones","text":"<pre><code>nmcli connection show\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/07.-Herramientas%20y%20comandos%20%C3%BAtiles/#crear-un-bridge_1","title":"Crear un Bridge","text":"<pre><code>nmcli connection add type bridge autoconnect yes con-name br0 ifname br0\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/07.-Herramientas%20y%20comandos%20%C3%BAtiles/#agregar-una-interface-fisica-al-bridge","title":"Agregar una Interface F\u00edsica al Bridge","text":"<pre><code>nmcli connection add type bridge-slave autoconnect yes con-name enp0s25-slave ifname enp0s25 master br0\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/07.-Herramientas%20y%20comandos%20%C3%BAtiles/#modificar-la-configuracion-del-bridge","title":"Modificar la Configuraci\u00f3n del Bridge","text":"<pre><code>nmcli connection modify br0 ipv4.method auto\nnmcli connection modify br0 ipv6.method ignore\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/07.-Herramientas%20y%20comandos%20%C3%BAtiles/#activar-una-conexion","title":"Activar una Conexi\u00f3n","text":"<pre><code>nmcli connection up br0\nnmcli connection up enp0s25-slave\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/07.-Herramientas%20y%20comandos%20%C3%BAtiles/#73-bridge-utils","title":"7.3. bridge-utils","text":"<p>Aunque muchas funcionalidades est\u00e1n ahora integradas en el comando <code>ip</code>, <code>bridge-utils</code> sigue siendo \u00fatil para algunas operaciones.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/07.-Herramientas%20y%20comandos%20%C3%BAtiles/#instalacion","title":"Instalaci\u00f3n","text":"<pre><code>sudo pacman -S bridge-utils\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/07.-Herramientas%20y%20comandos%20%C3%BAtiles/#mostrar-informacion-del-bridge","title":"Mostrar Informaci\u00f3n del Bridge","text":"<pre><code>brctl show\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/07.-Herramientas%20y%20comandos%20%C3%BAtiles/#anadir-una-interfaz-al-bridge_1","title":"A\u00f1adir una Interfaz al Bridge","text":"<pre><code>sudo brctl addif br0 enp0s25\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/08.-Consideraciones%20de%20Seguridad/","title":"08.-Consideraciones de Seguridad","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/08.-Consideraciones%20de%20Seguridad/#81-aislamiento-del-host","title":"8.1. Aislamiento del Host","text":"<p>Para evitar que el host interact\u00fae con las VMs a trav\u00e9s del bridge:</p> <ul> <li>No Asignar IP al Bridge: Si el host no necesita comunicarse en esa red, no le asignes una direcci\u00f3n IP al bridge.</li> <li>Reglas de Firewall: Utiliza <code>iptables</code> o <code>firewalld</code> para bloquear el tr\u00e1fico entre el host y las interfaces del bridge.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/08.-Consideraciones%20de%20Seguridad/#82-filtrado-de-macs","title":"8.2. Filtrado de MACs","text":"<ul> <li>Control de Acceso: Configura reglas para permitir solo ciertas direcciones MAC en el bridge, limitando qu\u00e9 dispositivos pueden conectarse.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/08.-Consideraciones%20de%20Seguridad/#83-monitoreo-y-logging","title":"8.3. Monitoreo y Logging","text":"<ul> <li>Supervisi\u00f3n del Tr\u00e1fico: Utiliza herramientas como <code>tcpdump</code>, <code>wireshark</code> o <code>iftop</code> para monitorear el tr\u00e1fico en el bridge.</li> <li>Logs de NetworkManager: Revisa los logs de NetworkManager para solucionar problemas de configuraci\u00f3n.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/09.-Ejemplo%20Pr%C3%A1ctico%3AConfiguraci%C3%B3n%20Completa%20con%20NetworkManager/","title":"09.-Ejemplo Pr\u00e1ctico:Configuraci\u00f3n Completa con NetworkManager","text":"<p>Supongamos que deseas configurar un bridge <code>br0</code> que conecta tus VMs directamente a la red f\u00edsica, permitiendo que obtengan direcciones IP de un servidor DHCP externo, y deseas aislar el host de esta red.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/09.-Ejemplo%20Pr%C3%A1ctico%3AConfiguraci%C3%B3n%20Completa%20con%20NetworkManager/#paso-1-crear-el-bridge-br0","title":"Paso 1: Crear el Bridge <code>br0</code>","text":"<pre><code># Crear el bridge\nnmcli connection add type bridge autoconnect yes con-name br0 ifname br0\n\n# Agregar la interfaz f\u00edsica al bridge\nnmcli connection add type bridge-slave autoconnect yes con-name enp0s25-slave ifname enp0s25 master br0\n\n# Configurar el bridge para obtener IP v\u00eda DHCP\nnmcli connection modify br0 ipv4.method auto\nnmcli connection modify br0 ipv6.method ignore\n\n# Desactivar la asignaci\u00f3n de IP en la interfaz f\u00edsica (ya manejado por bridge-slave)\n\n# Activar las conexiones\nnmcli connection up br0\nnmcli connection up enp0s25-slave\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/09.-Ejemplo%20Pr%C3%A1ctico%3AConfiguraci%C3%B3n%20Completa%20con%20NetworkManager/#paso-2-conectar-las-vms-al-bridge","title":"Paso 2: Conectar las VMs al Bridge","text":"<p>Usando <code>virsh</code>:</p> <pre><code># Apagar la VM si est\u00e1 en ejecuci\u00f3n\nvirsh shutdown &lt;nombre_de_vm&gt;\n\n# Editar la configuraci\u00f3n de la VM\nvirsh edit &lt;nombre_de_vm&gt;\n\nEn el archivo XML de la VM, modifica la secci\u00f3n &lt;interface&gt;:\n\nxml\n\n&lt;interface type='bridge'&gt;\n  &lt;mac address='52:54:00:xx:xx:xx'/&gt;\n  &lt;source bridge='br0'/&gt;\n  &lt;model type='virtio'/&gt;\n  &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/&gt;\n&lt;/interface&gt;\n</code></pre> <p>Guardar y cerrar el editor, luego iniciar la VM:</p> <pre><code>virsh start &lt;nombre_de_vm&gt;\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/09.-Ejemplo%20Pr%C3%A1ctico%3AConfiguraci%C3%B3n%20Completa%20con%20NetworkManager/#paso-3-aislar-el-host-del-bridge","title":"Paso 3: Aislar el Host del Bridge","text":"<p>Implementar reglas de iptables para bloquear el tr\u00e1fico entre el host y el bridge br0:</p> <pre><code># Bloquear tr\u00e1fico entrante desde br0 hacia el host\nsudo iptables -A INPUT -i br0 -j DROP\n\n# Bloquear tr\u00e1fico saliente desde el host hacia br0\nsudo iptables -A OUTPUT -o br0 -j DROP\n\n# Guardar las reglas para que persistan tras reinicios\nsudo iptables-save | sudo tee /etc/iptables/iptables.rules\n\n# Habilitar el servicio de iptables para restaurar las reglas al inicio\nsudo systemctl enable iptables\nsudo systemctl start iptables\n</code></pre>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/09.-Ejemplo%20Pr%C3%A1ctico%3AConfiguraci%C3%B3n%20Completa%20con%20NetworkManager/#paso-4-verificacion","title":"Paso 4: Verificaci\u00f3n","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/09.-Ejemplo%20Pr%C3%A1ctico%3AConfiguraci%C3%B3n%20Completa%20con%20NetworkManager/#verificar-direccion-ip-del-bridge","title":"Verificar Direcci\u00f3n IP del Bridge:","text":"<pre><code>ip addr show br0\n</code></pre> <p>Deber\u00edamos ver una direcci\u00f3n IP asignada por el servidor DHCP externo.</p>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/09.-Ejemplo%20Pr%C3%A1ctico%3AConfiguraci%C3%B3n%20Completa%20con%20NetworkManager/#verificar-conectividad-de-la-vm","title":"Verificar Conectividad de la VM:","text":"<ul> <li>Inicia la VM y verifica que obtiene una direcci\u00f3n IP del mismo servidor DHCP.</li> <li>Comprueba que la VM puede acceder a Internet y otros recursos de la red.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/09.-Ejemplo%20Pr%C3%A1ctico%3AConfiguraci%C3%B3n%20Completa%20con%20NetworkManager/#verificar-aislamiento-del-host","title":"Verificar Aislamiento del Host:","text":"<ul> <li>Desde el host, intentamos hacer ping a la direcci\u00f3n IP de la VM. Deber\u00eda fallar.</li> <li>Desde la VM, intentamos hacer ping al host. Deber\u00eda fallar.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/10.-Resumen%20y%20Mejores%20Pr%C3%A1cticas/","title":"10.-Resumen y Mejores Pr\u00e1cticas","text":""},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/10.-Resumen%20y%20Mejores%20Pr%C3%A1cticas/#101-puentes-de-red","title":"10.1. Puentes de Red","text":"<ul> <li>Flexibilidad: Permiten que m\u00faltiples interfaces (f\u00edsicas y virtuales) se comuniquen como si estuvieran en la misma red f\u00edsica.</li> <li>Virtualizaci\u00f3n: Esencial para conectar VMs directamente a la red f\u00edsica, facilitando la asignaci\u00f3n de direcciones IP y la comunicaci\u00f3n con otros dispositivos de la red.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/10.-Resumen%20y%20Mejores%20Pr%C3%A1cticas/#102-interfaces-virtuales","title":"10.2. Interfaces Virtuales","text":"<ul> <li>Versatilidad: Utilizadas para una variedad de prop\u00f3sitos, desde VPNs hasta conexiones de VMs y contenedores.</li> <li>Aislamiento y Seguridad: Permiten segmentar y controlar el tr\u00e1fico de manera granular.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/10.-Resumen%20y%20Mejores%20Pr%C3%A1cticas/#103-gestion-con-networkmanager","title":"10.3. Gesti\u00f3n con NetworkManager","text":"<ul> <li>Persistencia: Las configuraciones realizadas con NetworkManager son persistentes y se aplican autom\u00e1ticamente al reiniciar.</li> <li>Facilidad de Uso: Herramientas como <code>nmcli</code> y <code>nmtui</code> simplifican la gesti\u00f3n de redes complejas.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/10.-Resumen%20y%20Mejores%20Pr%C3%A1cticas/#104-seguridad","title":"10.4. Seguridad","text":"<ul> <li>Aislamiento del Host: Siempre que sea necesario, utiliza reglas de firewall para limitar o bloquear la comunicaci\u00f3n entre el host y las interfaces virtuales.</li> <li>Control de Acceso: Implementa medidas como filtrado de MACs o VLANs para controlar qui\u00e9n puede acceder a qu\u00e9 recursos.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/10.-Resumen%20y%20Mejores%20Pr%C3%A1cticas/#105-monitoreo-y-mantenimiento","title":"10.5. Monitoreo y Mantenimiento","text":"<ul> <li>Monitoreo Continuo: Utiliza herramientas de monitoreo para mantener un ojo en el tr\u00e1fico y detectar posibles anomal\u00edas.</li> <li>Actualizaciones y Parches: Mant\u00e9n tus herramientas de red y sistemas actualizados para garantizar la seguridad y el rendimiento.</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/11.-Recursos%20adicionales/","title":"11.-Recursos adicionales","text":"<ul> <li>Documentaci\u00f3n de NetworkManager: https://developer.gnome.org/NetworkManager/stable/</li> <li>Manuales de nmcli:</li> </ul> <pre><code>        man nmcli\n</code></pre> <ul> <li>Documentaci\u00f3n de KVM/QEMU Networking: https://wiki.qemu.org/Documentation/Networking</li> <li>Tutoriales de Bridge Networking en Arch Linux: Arch Wiki - Bridge</li> </ul>"},{"location":"01.-KVM/92.-Red/02.-Puentes%20e%20Interfaces%20Virtuales%20en%20Linux/Testeo%20de%20DHCP/","title":"Testeo de DHCP","text":"<p>Para identificar qu\u00e9 dispositivo o servicio ha asignado una direcci\u00f3n IP a un dispositivo en tu red local, puedes seguir varios m\u00e9todos. A continuaci\u00f3n, se detallan diferentes enfoques que te ayudar\u00e1n a determinar la fuente de asignaci\u00f3n de IP, ya sea un servidor DHCP dedicado, tu router, o alg\u00fan otro dispositivo en la red. 1. Verificar la Configuraci\u00f3n de Red del Dispositivo</p> <p>a. En Linux:</p> <p>Puedes utilizar el comando nmcli o ip para obtener detalles sobre la configuraci\u00f3n de red, incluyendo el servidor DHCP que ha asignado la IP.</p> <pre><code>Usando nmcli:\n\nbash\n</code></pre> <p>nmcli device show enp3s0 | grep DHCP</p> <p>Este comando mostrar\u00e1 informaci\u00f3n relacionada con DHCP, incluyendo la direcci\u00f3n del servidor DHCP (DHCP4.OPTION).</p> <p>Usando ip:</p> <p>bash</p> <p>ip addr show enp3s0</p> <p>Para obtener informaci\u00f3n m\u00e1s detallada sobre el proceso DHCP, puedes revisar los logs del sistema:</p> <p>bash</p> <pre><code>sudo journalctl -u NetworkManager | grep DHCP\n</code></pre> <p>b. En Windows:</p> <pre><code>Abre una Ventana de Comandos (CMD) con privilegios de administrador.\n\nEjecuta el siguiente comando:\n\ncmd\n\nipconfig /all\n\nBusca la secci\u00f3n de la interfaz de red utilizada (por ejemplo, Ethernet) y localiza la l\u00ednea \"Servidor DHCP\". Esta l\u00ednea mostrar\u00e1 la direcci\u00f3n IP del servidor que ha asignado la direcci\u00f3n IP actual.\n</code></pre> <p>c. En macOS:</p> <pre><code>Abre la Terminal.\n\nEjecuta:\n\nbash\n\nipconfig getpacket en0\n\nReemplaza en0 con la interfaz de red correspondiente si es necesario.\n\nBusca la l\u00ednea que indica el \"server_identifier\", que corresponde al servidor DHCP que ha asignado la IP.\n</code></pre> <ol> <li>Revisar el Router o Servidor DHCP</li> </ol> <p>Si tu red local utiliza un router como servidor DHCP, puedes acceder a la interfaz de administraci\u00f3n del router para ver una lista de dispositivos conectados y el servidor DHCP que est\u00e1 asignando las direcciones IP.</p> <p>Pasos Generales:</p> <pre><code>Accede a la interfaz web del router:\n    Abre un navegador web.\n    Ingresa la direcci\u00f3n IP del router en la barra de direcciones (com\u00fanmente 192.168.1.1, 192.168.0.1, 172.16.0.1, etc.).\n    Inicia sesi\u00f3n con tus credenciales de administrador.\n\nNavega a la secci\u00f3n de DHCP:\n    Busca una secci\u00f3n etiquetada como \"DHCP\", \"LAN\", \"Network\", o similar.\n    Aqu\u00ed podr\u00e1s ver una tabla de \"Clientes DHCP\" o \"Dispositivos Conectados\" que muestra qu\u00e9 dispositivos han recibido direcciones IP y desde qu\u00e9 servidor.\n\nIdentifica el Dispositivo:\n    Busca la direcci\u00f3n IP en cuesti\u00f3n y verifica qu\u00e9 dispositivo o direcci\u00f3n MAC est\u00e1 asociado a ella.\n</code></pre> <p>Nota: Si tienes m\u00faltiples servidores DHCP en la red (por ejemplo, un router y un servidor dedicado), es posible que debas revisar cada uno para identificar la fuente correcta. 3. Utilizar Herramientas de An\u00e1lisis de Red</p> <p>**a. Wireshark:</p> <p>Wireshark es una herramienta poderosa para capturar y analizar tr\u00e1fico de red. Puedes usarla para interceptar paquetes DHCP y determinar qu\u00e9 servidor est\u00e1 asignando direcciones IP.</p> <p>Pasos B\u00e1sicos:</p> <pre><code>Instala Wireshark:\n    En Linux: sudo apt install wireshark\n    En Windows y macOS: Descarga desde Wireshark.org.\n\nInicia una Captura de Paquetes:\n    Abre Wireshark y selecciona la interfaz de red que deseas monitorear (por ejemplo, enp3s0).\n\nFiltra los Paquetes DHCP:\n    En la barra de filtros, ingresa dhcp o bootp para filtrar solo los paquetes DHCP.\n\nAnaliza los Paquetes:\n    Observa los paquetes DHCP Offer y DHCP ACK para identificar la direcci\u00f3n IP del servidor DHCP (Server Identifier).\n</code></pre> <p>**b. dhcping:</p> <p>dhcping es una herramienta de l\u00ednea de comandos que puede enviar solicitudes DHCP a un servidor espec\u00edfico y verificar si est\u00e1 activo.</p> <p>Instalaci\u00f3n:</p> <pre><code>En Debian/Ubuntu:\n\nbash\n\nsudo apt install dhcping\n</code></pre> <p>Uso:</p> <p>bash</p> <p>dhcping -c  -s  <p>Este comando verifica si el servidor DHCP especificado est\u00e1 respondiendo a las solicitudes. 4. Inspeccionar la Tabla de ARP</p> <p>La Tabla ARP (Address Resolution Protocol) mapea direcciones IP a direcciones MAC. Si conoces la direcci\u00f3n MAC del servidor DHCP, puedes identificarlo en la tabla ARP.</p> <p>Comando en Linux:</p> <p>bash</p> <p>arp -a</p> <p>Busca la direcci\u00f3n IP asignada y verifica su direcci\u00f3n MAC correspondiente.</p> <p>Nota: Este m\u00e9todo es menos directo, pero puede ser \u00fatil si conoces la direcci\u00f3n MAC del servidor DHCP. 5. Consultar los Logs del Servidor DHCP</p> <p>Si tienes acceso al servidor DHCP (por ejemplo, si est\u00e1s utilizando un servidor DHCP dedicado en Linux), puedes revisar sus logs para ver qu\u00e9 dispositivos han recibido direcciones IP.</p> <p>En un servidor DHCP basado en ISC DHCP:</p> <p>Los logs suelen estar en /var/log/syslog o /var/log/messages.</p> <p>bash</p> <p>sudo grep dhcpd /var/log/syslog</p> <p>En un servidor DHCP de Windows:</p> <pre><code>Abre el Visor de Eventos.\nNavega a Registros de Windows &gt; Sistema.\nBusca eventos relacionados con DHCP.\n</code></pre> <ol> <li>Comprobar el Archivo de Leases del DHCP en el Host</li> </ol> <p>Si est\u00e1s utilizando un servidor DHCP en el mismo host (por ejemplo, dnsmasq o isc-dhcp-server), puedes revisar el archivo de leases para ver qu\u00e9 dispositivo ha recibido qu\u00e9 IP.</p> <p>Para isc-dhcp-server:</p> <p>bash</p> <p>cat /var/lib/dhcp/dhcpd.leases</p> <p>Para dnsmasq:</p> <p>bash</p> <p>cat /var/lib/misc/dnsmasq.leases</p> <ol> <li>Usar Comandos Espec\u00edficos de NetworkManager</li> </ol> <p>Si est\u00e1s usando NetworkManager, puedes obtener detalles sobre el servidor DHCP directamente desde nmcli.</p> <p>Comando:</p> <p>bash</p> <p>nmcli device show enp3s0 | grep DHCP4</p> <p>Ejemplo de Salida:</p> <p>makefile</p> <p>IP4.DHCP.SERVER:                             172.30.1.1</p> <p>Esto indica que el servidor DHCP que asign\u00f3 la IP es 172.30.1.1. 8. Identificar el Servidor DHCP mediante Scanning de Red</p> <p>Puedes usar herramientas como nmap para identificar qu\u00e9 dispositivos en la red est\u00e1n ofreciendo servicios DHCP.</p> <p>Instalaci\u00f3n de nmap:</p> <pre><code>En Linux:\n\nbash\n\nsudo apt install nmap\n</code></pre> <p>Uso de nmap para detectar servidores DHCP:</p> <p>bash</p> <p>sudo nmap --script broadcast-dhcp-discover</p> <p>Este comando env\u00eda una solicitud DHCP y espera respuestas, identificando qu\u00e9 dispositivos est\u00e1n respondiendo como servidores DHCP. Resumen de Pasos Recomendados</p> <pre><code>Verifica la Configuraci\u00f3n de Red del Dispositivo:\n    Usa nmcli, ip, ipconfig /all, o herramientas similares para identificar el servidor DHCP desde el dispositivo que ha recibido la IP.\n\nRevisa la Interfaz de Administraci\u00f3n del Router:\n    Accede al router para ver la lista de dispositivos conectados y los servidores DHCP activos.\n\nUtiliza Herramientas de An\u00e1lisis de Red:\n    Emplea Wireshark para capturar y analizar tr\u00e1fico DHCP, o usa dhcping para verificar servidores espec\u00edficos.\n\nInspecciona la Tabla ARP y Logs del Servidor DHCP:\n    Usa comandos como arp -a y revisa los logs del servidor DHCP para obtener informaci\u00f3n detallada.\n\nUtiliza nmap para Escanear la Red:\n    Identifica qu\u00e9 dispositivos est\u00e1n ofreciendo servicios DHCP en tu red local.\n</code></pre> <p>Consejos Adicionales</p> <pre><code>Aseg\u00farate de Tener los Permisos Adecuados:\n    Muchas de estas operaciones requieren privilegios de administrador o root.\n\nMant\u00e9n Documentada tu Red:\n    Si tienes m\u00faltiples servidores DHCP, aseg\u00farate de documentar su prop\u00f3sito y configuraci\u00f3n para evitar conflictos.\n\nSeguridad de DHCP:\n    Considera implementar medidas de seguridad como DHCP Snooping en redes m\u00e1s grandes para prevenir ataques de servidores DHCP no autorizados.\n</code></pre> <p>Conclusi\u00f3n</p> <p>Identificar el origen de la asignaci\u00f3n de direcciones IP en una red local implica revisar la configuraci\u00f3n de red de los dispositivos, inspeccionar el router o servidores DHCP, y utilizar herramientas de an\u00e1lisis de red para capturar y analizar tr\u00e1fico DHCP. Siguiendo los m\u00e9todos descritos anteriormente, podr\u00e1s determinar de manera efectiva qu\u00e9 dispositivo o servicio est\u00e1 asignando direcciones IP en tu red.</p>"},{"location":"01.-KVM/93.-Almacenamiento/01.-Aprovisionamiento%20ligero%20de%20discos/","title":"01.-Aprovisionamiento ligero de discos","text":"<p>Para crear una m\u00e1quina virtual cuyo espacio f\u00edsico de almacenamiento crezca seg\u00fan la demanda, ocupando menos espacio en disco  inicialmente, puedes utilizar el aprovisionamiento ligero (thin  provisioning) con im\u00e1genes de disco de expansi\u00f3n din\u00e1mica. Esto se puede lograr de la siguiente manera:</p>"},{"location":"01.-KVM/93.-Almacenamiento/01.-Aprovisionamiento%20ligero%20de%20discos/#creacion-de-la-imagen-de-disco","title":"Creaci\u00f3n de la imagen de disco","text":"<ol> <li>Utiliza el formato qcow2 (QEMU Copy-On-Write versi\u00f3n 2) para la imagen de disco:</li> </ol> <pre><code>qemu-img create -f qcow2 nombre_imagen.qcow2 tama\u00f1o_virtual\n</code></pre> <p>Por ejemplo:</p> <pre><code>qemu-img create -f qcow2 mi_vm_disco.qcow2 50G\n</code></pre> <p>Este comando crea una imagen de disco que aparecer\u00e1 como un disco  de 50 GB para la m\u00e1quina virtual, pero inicialmente ocupar\u00e1 muy poco  espacio en el host.</p>"},{"location":"01.-KVM/93.-Almacenamiento/01.-Aprovisionamiento%20ligero%20de%20discos/#configuracion-en-virt-manager","title":"Configuraci\u00f3n en virt-manager","text":"<p>Si est\u00e1s usando virt-manager para crear la VM:</p> <ol> <li>En el paso de configuraci\u00f3n del almacenamiento, selecciona \"Select or create custom storage\".</li> <li>Haz clic en \"Manage...\" y luego en \"Add Pool\" para crear un nuevo pool si es necesario.</li> <li>Selecciona el pool y haz clic en \"Create new volume\".</li> <li>En el di\u00e1logo de creaci\u00f3n de volumen: Elige el formato \"qcow2\" Establece el tama\u00f1o m\u00e1ximo deseado Aseg\u00farate de que \"Allocation\" est\u00e9 configurado en 0 para thin provisioning</li> </ol>"},{"location":"01.-KVM/93.-Almacenamiento/01.-Aprovisionamiento%20ligero%20de%20discos/#configuracion-en-linea-de-comandos","title":"Configuraci\u00f3n en l\u00ednea de comandos","text":"<p>Si prefieres usar la l\u00ednea de comandos:</p> <ol> <li>Crea la imagen de disco como se mostr\u00f3 anteriormente.</li> <li>Al definir la VM con <code>virt-install</code>, usa la opci\u00f3n <code>--disk</code>:</li> </ol> <pre><code>textvirt-install --name mi_vm --memory 2048 --vcpus 2 \\\n  --disk path=/ruta/a/mi_vm_disco.qcow2,format=qcow2,bus=virtio \\\n  --os-variant=rhel8.0 \\\n  # ... otras opciones necesarias\n</code></pre>"},{"location":"01.-KVM/93.-Almacenamiento/01.-Aprovisionamiento%20ligero%20de%20discos/#ventajas-del-aprovisionamiento-ligero","title":"Ventajas del aprovisionamiento ligero","text":"<ul> <li>Eficiencia en el uso del espacio: La imagen solo crecer\u00e1 cuando se escriban datos reales en el disco virtual.</li> <li>Flexibilidad: Puedes \"sobreprovisionar\" el almacenamiento, asignando m\u00e1s espacio virtual del que f\u00edsicamente tienes disponible.</li> </ul>"},{"location":"01.-KVM/93.-Almacenamiento/01.-Aprovisionamiento%20ligero%20de%20discos/#consideraciones-importantes","title":"Consideraciones importantes","text":"<ol> <li>Monitoreo: Es crucial monitorear el crecimiento real de las im\u00e1genes para evitar quedarse sin espacio en el host.</li> <li>Rendimiento: Las im\u00e1genes de expansi\u00f3n din\u00e1mica pueden tener un ligero impacto en el rendimiento comparado con im\u00e1genes de tama\u00f1o fijo.</li> <li>Fragmentaci\u00f3n: Con el tiempo, estas im\u00e1genes pueden fragmentarse, lo que puede afectar el rendimiento.</li> <li>Compactaci\u00f3n: Peri\u00f3dicamente, puedes necesitar compactar las im\u00e1genes para liberar espacio no utilizado:</li> </ol> <pre><code>text\nqemu-img convert -O qcow2 imagen_original.qcow2 imagen_compactada.qcow2\n</code></pre> <p>Utilizando estas t\u00e9cnicas, podr\u00e1s crear m\u00e1quinas virtuales que  inicialmente ocupen poco espacio en disco y crezcan seg\u00fan sea necesario, optimizando el uso del almacenamiento en tu sistema host.</p>"},{"location":"02.-DHCP/","title":"Index","text":"<ul> <li>DHCP: Network protocol that automatically assigns IP addresses and communication settings.</li> <li>Client-server model: DHCP server assigns IPs, while devices (clients) request them.</li> <li>Simplification: Removes the need for manual device configuration.</li> <li>Scalability: Used in networks of all sizes, from small home setups to large infrastructures (ISPs, campuses).</li> <li>Compatibility: Supports both IPv4 and IPv6 (known as DHCPv6).</li> <li>Routers: Many home routers include a built-in DHCP server.</li> </ul>"},{"location":"02.-DHCP/01.-History/","title":"01.-History","text":"<ul> <li>1984: Definition of Reverse Address Resolution Protocol (RARP)</li> <li> <p>Used for configuring IP addresses on simple devices</p> <ul> <li>Limited by the requirement of a server on each network link</li> </ul> </li> <li> <p>1985: Introduction of Bootstrap Protocol (BOOTP)</p> </li> <li> <p>Improved upon RARP by allowing packet forwarding across networks</p> </li> <li> <p>Enabled a central BOOTP server to serve multiple subnets</p> </li> <li> <p>October 1993: First definition of DHCP</p> </li> <li> <p>Based on BOOTP but allows dynamic allocation of IP addresses</p> </li> <li>Can reclaim unused addresses</li> <li> <p>Provides additional configuration parameters</p> </li> <li> <p>1997: Significant update to DHCP</p> </li> <li> <p>Addition of the DHCPINFORM message and other minor changes</p> </li> <li> <p>This version remains the core standard for IPv4 networks</p> </li> <li> <p>2003: Initial definition of DHCPv6 for IPv6 networks</p> </li> <li>2018: New definition of DHCPv6</li> <li>Merges prefix delegation and stateless address autoconfiguration</li> </ul>"},{"location":"02.-DHCP/04.-Client%20configuration%20parameters/","title":"04.-Client configuration parameters","text":""},{"location":"02.-DHCP/04.-Client%20configuration%20parameters/#overview","title":"Overview","text":"<ul> <li>DHCP servers can provide optional configuration parameters to clients</li> <li>Defined by Internet Assigned Numbers Authority (IANA)</li> <li>Described in RFC 2132</li> </ul>"},{"location":"02.-DHCP/04.-Client%20configuration%20parameters/#key-points","title":"Key Points","text":"<ul> <li>Clients can select, manipulate, and overwrite server-provided parameters</li> <li>In Unix-like systems, client-level refinement typically occurs in <code>/etc/dhclient.conf</code></li> </ul>"},{"location":"02.-DHCP/04.-Client%20configuration%20parameters/#common-dhcp-options","title":"Common DHCP Options","text":"<ul> <li>Subnet mask</li> <li>Router (default gateway)</li> <li>Domain name servers</li> <li>Host name</li> <li>Domain name</li> <li>Broadcast address</li> <li>Network Time Protocol servers</li> <li>Time offset</li> <li>NetBIOS name servers</li> <li>NetBIOS node type</li> </ul>"},{"location":"02.-DHCP/04.-Client%20configuration%20parameters/#advanced-options","title":"Advanced Options","text":"<ul> <li>Static routes</li> <li>Vendor-specific options</li> <li>TFTP server name</li> <li>Bootfile name</li> </ul>"},{"location":"02.-DHCP/04.-Client%20configuration%20parameters/#client-customization","title":"Client Customization","text":"<ul> <li>Clients can request specific options from the server</li> <li>Can override or supplement server-provided options</li> <li>Allows for fine-tuning of network configuration</li> </ul>"},{"location":"02.-DHCP/04.-Client%20configuration%20parameters/#importance","title":"Importance","text":"<ul> <li>Enables centralized management of network configuration</li> <li>Facilitates automatic and dynamic network setup</li> <li>Supports diverse client requirements within a single network</li> </ul>"},{"location":"02.-DHCP/02.-Overview/","title":"Index","text":"<ul> <li>Protocol that defines how devices communicate within and across local networks on the Internet</li> <li>Allows DHCP servers to automatically and dynamically manage IP settings for devices on a local network</li> </ul>"},{"location":"02.-DHCP/02.-Overview/01.-How%20DHCP%20Works/","title":"01.-How DHCP Works","text":"<ul> <li>Uses client-server model</li> <li>DHCP client (device) sends broadcast query requesting network information</li> <li> <p>DHCP server responds with:</p> <ul> <li>IP address</li> <li>Default gateway</li> <li>Domain name</li> <li>Name servers</li> <li>Time servers</li> <li>Lease duration</li> </ul> </li> </ul>"},{"location":"02.-DHCP/02.-Overview/02.-IP%20Address%20Allocation%20Methods/","title":"02.-IP Address Allocation Methods","text":"<ul> <li> <p>Dynamic allocation</p> <ul> <li>Administrator reserves IP range</li> <li>Addresses leased for controllable time period</li> <li>Unused addresses can be reclaimed and reallocated</li> </ul> </li> <li> <p>Automatic allocation</p> <ul> <li>Server permanently assigns address from defined range</li> <li>Preferentially assigns same address to returning clients</li> </ul> </li> <li> <p>Manual allocation (static DHCP)</p> <ul> <li>Administrator maps unique client identifier to specific IP address</li> <li>Also called reservation or MAC/IP address binding</li> </ul> </li> </ul>"},{"location":"02.-DHCP/02.-Overview/03.-Additional%20Notes/","title":"03.-Additional Notes","text":"<ul> <li>Used for both IPv4 and IPv6</li> <li>IPv6 devices may also use stateless address autoconfiguration</li> <li>IPv6 hosts can use link-local addressing for local network operations</li> </ul>"},{"location":"02.-DHCP/03.-Operation%20Process/","title":"Index","text":"<ul> <li>Uses User Datagram Protocol (UDP)</li> <li>Server listens on port 67, client on port 68</li> <li>Four phases: Discovery, Offer, Request, Acknowledgement (DORA)</li> </ul>"},{"location":"02.-DHCP/03.-Operation%20Process/01.-Discovery/","title":"01.-Discovery","text":"<ul> <li>Client broadcasts DHCPDISCOVER message</li> <li>Uses destination address 255.255.255.255 or subnet broadcast address</li> <li>May request specific IP address</li> </ul>"},{"location":"02.-DHCP/03.-Operation%20Process/02.-Offer/","title":"02.-Offer","text":"<ul> <li>Server responds with DHCPOFFER message</li> <li> <p>Contains:</p> <ul> <li>Client's MAC address</li> <li>Offered IP address</li> <li>Subnet mask</li> <li>Lease duration</li> <li>Server's IP address</li> </ul> </li> </ul>"},{"location":"02.-DHCP/03.-Operation%20Process/03.-Request/","title":"03.-Request","text":"<ul> <li>Client replies with DHCPREQUEST message</li> <li>Broadcasts to server, requesting offered address</li> <li>Includes server identification</li> <li>Other DHCP servers withdraw their offers</li> </ul>"},{"location":"02.-DHCP/03.-Operation%20Process/04.-Acknowledgement/","title":"04.-Acknowledgement","text":"<ul> <li>Server sends DHCPACK packet</li> <li> <p>Includes:</p> <ul> <li>Lease duration</li> <li>Any other requested configuration information</li> </ul> </li> </ul>"},{"location":"02.-DHCP/03.-Operation%20Process/05.-Additional%20Steps/","title":"05.-Additional Steps","text":"<ul> <li> <p>IP Address Selection:</p> <ul> <li>Server may ping address to check availability</li> <li>Client should probe address (e.g., with ARP) before use</li> </ul> </li> <li> <p>Information Request:</p> <ul> <li>Client can request additional information</li> <li>Example: Browsers use DHCP Inform for web proxy settings</li> </ul> </li> <li> <p>Release:</p> <ul> <li>Client can send request to release DHCP information</li> <li>Not mandatory, as clients may disconnect unexpectedly</li> </ul> </li> </ul>"},{"location":"02.-DHCP/05.-DHCP%20Options/","title":"Index","text":"<p>DHCP options are variable-length octet strings using Type-Length-Value (TLV) encoding. Each option consists of:</p> <ul> <li>Option code (first octet)</li> <li>Length (second octet)</li> <li>Value (remaining octets)</li> </ul>"},{"location":"02.-DHCP/05.-DHCP%20Options/01.-Main%20Categories%20of%20DHCP%20Options/","title":"01.-Main Categories of DHCP Options","text":"<p>IP Layer Parameters</p> <ul> <li>Per host: IP forwarding, non-local source routing, policy filter</li> <li>Per interface: MTU, mask discovery, router discovery</li> </ul> <p>Link Layer Parameters</p> <ul> <li>Trailer encapsulation, ARP cache timeout, Ethernet encapsulation</li> </ul> <p>TCP Parameters</p> <ul> <li>Default TTL, keepalive interval, keepalive garbage</li> </ul> <p>Application and Service Parameters</p> <ul> <li>NTP servers, NetBIOS name servers, SMTP servers</li> </ul>"},{"location":"02.-DHCP/05.-DHCP%20Options/02.-Important%20DHCP%20Extensions/","title":"02.-Important DHCP Extensions","text":"<ul> <li>Requested IP address</li> <li>IP address lease time</li> <li>DHCP message type</li> <li>Server identifier</li> <li>Maximum DHCP message size</li> </ul>"},{"location":"02.-DHCP/05.-DHCP%20Options/03.-DHCP%20Message%20Types/","title":"03.-DHCP Message Types","text":"Code Name Description 1 DHCPDISCOVER Client searches for a DHCP server 2 DHCPOFFER Server offers an IP address 3 DHCPREQUEST Client requests the offered address 5 DHCPACK Server confirms the assignment"},{"location":"02.-DHCP/05.-DHCP%20Options/04.-Client%20Vendor%20Identification/","title":"04.-Client Vendor Identification","text":"<ul> <li>Option 60: Vendor Class Identifier (VCI)</li> <li>Allows client to communicate its hardware or firmware type</li> <li>Helps server provide specific configurations</li> </ul>"},{"location":"02.-DHCP/05.-DHCP%20Options/05.-Other%20Relevant%20Extensions/","title":"05.-Other Relevant Extensions","text":"<ul> <li>User class</li> <li>Relay agent information</li> <li>Novell Directory Services (NDS) servers</li> <li>Time zone</li> <li>DHCP Captive-Portal</li> </ul>"},{"location":"02.-DHCP/06.-Relaying/","title":"Index","text":"<p>DHCP relay agents are essential in networks where DHCP servers manage IP addresses for multiple subnets. They enable communication between DHCP clients and servers that are not on the same subnet.</p> <p>Key Functions:</p> <ul> <li>Installed on subnets not directly served by DHCP servers</li> <li>Run on network devices capable of routing between client and server subnets</li> <li>Receive broadcast messages from DHCP clients and forward them to DHCP servers using unicast</li> </ul>"},{"location":"02.-DHCP/06.-Relaying/01.-DHCP%20Relay%20Process/","title":"01.-DHCP Relay Process","text":"<ol> <li>Client Broadcast: DHCP client broadcasts on the local subnet.</li> <li>Relay Agent Reception: Relay agent receives the broadcast.</li> <li>Forwarding to Server: Relay agent transmits the request to DHCP servers using unicast.</li> <li>GIADDR Field: Relay agent inserts its own IP address in the GIADDR field of the DHCP packet.</li> <li>Server Response: DHCP server uses GIADDR to determine the subnet and address pool.</li> <li>Reply Transmission: Server sends reply to the GIADDR address using unicast.</li> <li>Client Delivery: Relay agent retransmits the response to the client, usually via unicast.</li> </ol>"},{"location":"02.-DHCP/06.-Relaying/02.-Special%20Considerations/","title":"02.-Special Considerations","text":"<ul> <li>Clients may set the broadcast bit in DHCPDISCOVER packets if they can't accept unicast packets without an IP address.</li> <li>Communication between relay agent and DHCP server typically uses UDP port 67 for both source and destination.</li> </ul>"},{"location":"02.-DHCP/06.-Relaying/04.-Benefits/","title":"04.-Benefits","text":"<ul> <li>Enables DHCP functionality across multiple subnets without requiring a DHCP server on each subnet.</li> <li>Allows centralized management of IP address allocation for large networks.</li> </ul>"},{"location":"02.-DHCP/06.-Relaying/08.-Client%20states/","title":"08.-Client states","text":"<p>A DHCP client can receive these messages from a server: - DHCPOFFER - DHCPACK - DHCPNAK ![[Pasted image 20240919141503.png]]</p> <p>The client moves through DHCP states depending on how the server responds to the messages that the client sends.</p>"},{"location":"99.-Caj%C3%B3n%20Desastre/01.-Publicaci%C3%B3n%20con%20MkDocs/01.-Crear%20proyecto%20en%20GitHub/","title":"Crear proyecto en GitHub","text":""},{"location":"99.-Caj%C3%B3n%20Desastre/01.-Publicaci%C3%B3n%20con%20MkDocs/01.-Crear%20proyecto%20en%20GitHub/#crear-un-nuevo-repositorio-en-github","title":"Crear un nuevo repositorio en GitHub","text":"<ol> <li>Inicia sesi\u00f3n en tu cuenta de GitHub.</li> <li>En la esquina superior derecha de cualquier p\u00e1gina, haz clic en el s\u00edmbolo \"+\" y selecciona \"Nuevo repositorio\".</li> <li>Escribe un nombre corto y descriptivo para tu repositorio.</li> <li>Opcionalmente, a\u00f1ade una descripci\u00f3n del proyecto.</li> <li>Elige la visibilidad del repositorio (p\u00fablico o privado).</li> <li>No selecciones la opci\u00f3n de inicializar el repositorio con un README, ya que vas a subir un proyecto existente.</li> <li>Haz clic en \"Crear repositorio\".</li> </ol>"},{"location":"99.-Caj%C3%B3n%20Desastre/01.-Publicaci%C3%B3n%20con%20MkDocs/01.-Crear%20proyecto%20en%20GitHub/#subir-tu-proyecto-local-a-github","title":"Subir tu proyecto local a GitHub","text":"<p>Una vez creado el repositorio, GitHub te mostrar\u00e1 instrucciones para subir un proyecto existente. Sigue estos pasos en tu terminal local:</p> <ol> <li> <p>Abre la terminal y navega al directorio de tu proyecto local.</p> </li> <li> <p>Inicializa el repositorio Git local (si a\u00fan no lo has hecho):    <code>git init</code></p> </li> <li> <p>A\u00f1ade todos los archivos de tu proyecto al repositorio:    <code>git add .</code></p> </li> <li> <p>Realiza el primer commit:    <code>git commit -m \"Primer commit: Subida inicial del proyecto\"</code></p> </li> <li> <p>A\u00f1ade la URL del repositorio remoto de GitHub:    <code>git remote add origin https://github.com/tu-usuario/nombre-del-repositorio.git</code></p> </li> <li> <p>Cambia el nombre de la rama principal de master a main:</p> </li> </ol> <p><code>bash    git branch -M main</code></p> <ol> <li>Sube los cambios al repositorio remoto:</li> </ol> <p><code>git push -u origin main</code></p>"},{"location":"99.-Caj%C3%B3n%20Desastre/01.-Publicaci%C3%B3n%20con%20MkDocs/01.-Crear%20proyecto%20en%20GitHub/#verificacion","title":"Verificaci\u00f3n","text":"<p>Despu\u00e9s de completar estos pasos, actualiza la p\u00e1gina de tu repositorio en GitHub. Deber\u00edas ver todos los archivos de tu proyecto local ahora en GitHub.</p>"},{"location":"99.-Caj%C3%B3n%20Desastre/01.-Publicaci%C3%B3n%20con%20MkDocs/01.-Crear%20proyecto%20en%20GitHub/#recomendaciones-adicionales","title":"Recomendaciones adicionales","text":"<ul> <li>Si tu proyecto incluye archivos grandes o sensibles, considera usar un archivo <code>.gitignore</code> para excluirlos del control de versiones.</li> <li>Aseg\u00farate de tener un README.md en tu proyecto que explique qu\u00e9 hace y c\u00f3mo utilizarlo.</li> <li>Si est\u00e1s utilizando GitHub Pages para publicar tu sitio, aseg\u00farate de que tu estructura de archivos sea correcta y que tengas un archivo <code>index.html</code> en la ra\u00edz o en la carpeta <code>/docs</code>, dependiendo de tu configuraci\u00f3n.</li> </ul>"}]}